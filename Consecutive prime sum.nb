(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    287501,       5188]
NotebookOptionsPosition[    273880,       4951]
NotebookOutlinePosition[    274301,       4968]
CellTagsIndexPosition[    274258,       4965]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Consecutive prime sum", "Title",
 CellChangeTimes->{{3.8693303122481112`*^9, 
  3.8693303247261295`*^9}},ExpressionUUID->"122b802c-c537-4858-ac42-\
dc183fa568e8"],

Cell["\<\
The prime 41, can be written as the sum of six consecutive primes:

41 = 2 + 3 + 5 + 7 + 11 + 13
This is the longest sum of consecutive primes that adds to a prime below \
one-hundred.

The longest sum of consecutive primes below one-thousand that adds to a \
prime, contains 21 terms, and is equal to 953.

Which prime, below one-million, can be written as the sum of the most \
consecutive primes?\
\>", "Text",
 CellChangeTimes->{
  3.869330337557105*^9, {3.8693307408234262`*^9, 
   3.869330742878442*^9}},ExpressionUUID->"0c7babec-1ac4-451c-8eea-\
9beecbf3f435"],

Cell["Making consecutive primes. I need Prime and Range.", "Text",
 CellChangeTimes->{{3.8693303441341076`*^9, 
  3.869330361627686*^9}},ExpressionUUID->"5cfc220d-b55f-43c5-9e8e-\
0e6015785ae0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "[", "109", "]"}]], "Input",
 CellChangeTimes->{{3.8693303625436897`*^9, 3.869330368590711*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5e5d72c2-4f18-4bf8-93a1-9d244856b83d"],

Cell[BoxData["599"], "Output",
 CellChangeTimes->{3.8693303692146864`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"dbc5d191-0319-483e-836f-7c1c3f07d944"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.869330370724694*^9, 3.8693303719896946`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"185f6f3e-ec13-472a-a943-2a4a40969a1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", 
   "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", 
   ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", 
   "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", 
   ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", 
   "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
   ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
   "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", "80", 
   ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", ",", 
   "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", "93", 
   ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", ",", 
   "100"}], "}"}]], "Output",
 CellChangeTimes->{3.869330372479698*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"cb8c04f3-eceb-4288-8925-be7a62d4cbf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "[", 
  RowBox[{"Range", "[", "100", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693303745896845`*^9, 3.8693303773186817`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"fbce15c9-e354-4738-bb76-8d9dc88de372"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
   "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", "103", 
   ",", "107", ",", "109", ",", "113", ",", "127", ",", "131", ",", "137", 
   ",", "139", ",", "149", ",", "151", ",", "157", ",", "163", ",", "167", 
   ",", "173", ",", "179", ",", "181", ",", "191", ",", "193", ",", "197", 
   ",", "199", ",", "211", ",", "223", ",", "227", ",", "229", ",", "233", 
   ",", "239", ",", "241", ",", "251", ",", "257", ",", "263", ",", "269", 
   ",", "271", ",", "277", ",", "281", ",", "283", ",", "293", ",", "307", 
   ",", "311", ",", "313", ",", "317", ",", "331", ",", "337", ",", "347", 
   ",", "349", ",", "353", ",", "359", ",", "367", ",", "373", ",", "379", 
   ",", "383", ",", "389", ",", "397", ",", "401", ",", "409", ",", "419", 
   ",", "421", ",", "431", ",", "433", ",", "439", ",", "443", ",", "449", 
   ",", "457", ",", "461", ",", "463", ",", "467", ",", "479", ",", "487", 
   ",", "491", ",", "499", ",", "503", ",", "509", ",", "521", ",", "523", 
   ",", "541"}], "}"}]], "Output",
 CellChangeTimes->{3.869330378469694*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"af3aff58-e4da-449f-b6b7-ad32763ee46f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accumulate", "[", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", "100", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869330396620691*^9, 3.8693304024766817`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6091bd6e-4c40-4125-8701-2b0155b9a691"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "5", ",", "10", ",", "17", ",", "28", ",", "41", ",", "58", ",", 
   "77", ",", "100", ",", "129", ",", "160", ",", "197", ",", "238", ",", 
   "281", ",", "328", ",", "381", ",", "440", ",", "501", ",", "568", ",", 
   "639", ",", "712", ",", "791", ",", "874", ",", "963", ",", "1060", ",", 
   "1161", ",", "1264", ",", "1371", ",", "1480", ",", "1593", ",", "1720", 
   ",", "1851", ",", "1988", ",", "2127", ",", "2276", ",", "2427", ",", 
   "2584", ",", "2747", ",", "2914", ",", "3087", ",", "3266", ",", "3447", 
   ",", "3638", ",", "3831", ",", "4028", ",", "4227", ",", "4438", ",", 
   "4661", ",", "4888", ",", "5117", ",", "5350", ",", "5589", ",", "5830", 
   ",", "6081", ",", "6338", ",", "6601", ",", "6870", ",", "7141", ",", 
   "7418", ",", "7699", ",", "7982", ",", "8275", ",", "8582", ",", "8893", 
   ",", "9206", ",", "9523", ",", "9854", ",", "10191", ",", "10538", ",", 
   "10887", ",", "11240", ",", "11599", ",", "11966", ",", "12339", ",", 
   "12718", ",", "13101", ",", "13490", ",", "13887", ",", "14288", ",", 
   "14697", ",", "15116", ",", "15537", ",", "15968", ",", "16401", ",", 
   "16840", ",", "17283", ",", "17732", ",", "18189", ",", "18650", ",", 
   "19113", ",", "19580", ",", "20059", ",", "20546", ",", "21037", ",", 
   "21536", ",", "22039", ",", "22548", ",", "23069", ",", "23592", ",", 
   "24133"}], "}"}]], "Output",
 CellChangeTimes->{3.8693304029146805`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"5ab4908e-3473-4663-8ee9-ab3b0a64c41d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPrime", "[", "77", "]"}]], "Input",
 CellChangeTimes->{{3.8693304675256834`*^9, 3.8693304787402396`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1745314e-243d-4ed4-93ad-f328dc6d58a9"],

Cell[BoxData["79"], "Output",
 CellChangeTimes->{3.869330479207239*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"ebadf271-8f38-4103-a6bf-9b6f851963da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextPrime", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.8693304675256834`*^9, 3.8693304851292505`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"11b3cc50-f200-4eca-8d58-3bf101484279"],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{3.869330485590254*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"b0b43f16-8bb3-4a57-befe-4fb92311e8ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accumulate", "[", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", "1000", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693304949042406`*^9, 3.8693305020102396`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ef69cd1b-7533-4a93-8c29-7f15245f5664"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "5", ",", "10", ",", "17", ",", "28", ",", "41", ",", "58", ",", 
   "77", ",", "100", ",", "129", ",", "160", ",", "197", ",", "238", ",", 
   "281", ",", "328", ",", "381", ",", "440", ",", "501", ",", "568", ",", 
   "639", ",", "712", ",", "791", ",", "874", ",", "963", ",", "1060", ",", 
   "1161", ",", "1264", ",", "1371", ",", "1480", ",", "1593", ",", "1720", 
   ",", "1851", ",", "1988", ",", "2127", ",", "2276", ",", "2427", ",", 
   "2584", ",", "2747", ",", "2914", ",", "3087", ",", "3266", ",", "3447", 
   ",", "3638", ",", "3831", ",", "4028", ",", "4227", ",", "4438", ",", 
   "4661", ",", "4888", ",", "5117", ",", "5350", ",", "5589", ",", "5830", 
   ",", "6081", ",", "6338", ",", "6601", ",", "6870", ",", "7141", ",", 
   "7418", ",", "7699", ",", "7982", ",", "8275", ",", "8582", ",", "8893", 
   ",", "9206", ",", "9523", ",", "9854", ",", "10191", ",", "10538", ",", 
   "10887", ",", "11240", ",", "11599", ",", "11966", ",", "12339", ",", 
   "12718", ",", "13101", ",", "13490", ",", "13887", ",", "14288", ",", 
   "14697", ",", "15116", ",", "15537", ",", "15968", ",", "16401", ",", 
   "16840", ",", "17283", ",", "17732", ",", "18189", ",", "18650", ",", 
   "19113", ",", "19580", ",", "20059", ",", "20546", ",", "21037", ",", 
   "21536", ",", "22039", ",", "22548", ",", "23069", ",", "23592", ",", 
   "24133", ",", "24680", ",", "25237", ",", "25800", ",", "26369", ",", 
   "26940", ",", "27517", ",", "28104", ",", "28697", ",", "29296", ",", 
   "29897", ",", "30504", ",", "31117", ",", "31734", ",", "32353", ",", 
   "32984", ",", "33625", ",", "34268", ",", "34915", ",", "35568", ",", 
   "36227", ",", "36888", ",", "37561", ",", "38238", ",", "38921", ",", 
   "39612", ",", "40313", ",", "41022", ",", "41741", ",", "42468", ",", 
   "43201", ",", "43940", ",", "44683", ",", "45434", ",", "46191", ",", 
   "46952", ",", "47721", ",", "48494", ",", "49281", ",", "50078", ",", 
   "50887", ",", "51698", ",", "52519", ",", "53342", ",", "54169", ",", 
   "54998", ",", "55837", ",", "56690", ",", "57547", ",", "58406", ",", 
   "59269", ",", "60146", ",", "61027", ",", "61910", ",", "62797", ",", 
   "63704", ",", "64615", ",", "65534", ",", "66463", ",", "67400", ",", 
   "68341", ",", "69288", ",", "70241", ",", "71208", ",", "72179", ",", 
   "73156", ",", "74139", ",", "75130", ",", "76127", ",", "77136", ",", 
   "78149", ",", "79168", ",", "80189", ",", "81220", ",", "82253", ",", 
   "83292", ",", "84341", ",", "85392", ",", "86453", ",", "87516", ",", 
   "88585", ",", "89672", ",", "90763", ",", "91856", ",", "92953", ",", 
   "94056", ",", "95165", ",", "96282", ",", "97405", ",", "98534", ",", 
   "99685", ",", "100838", ",", "102001", ",", "103172", ",", "104353", ",", 
   "105540", ",", "106733", ",", "107934", ",", "109147", ",", "110364", ",", 
   "111587", ",", "112816", ",", "114047", ",", "115284", ",", "116533", ",", 
   "117792", ",", "119069", ",", "120348", ",", "121631", ",", "122920", ",", 
   "124211", ",", "125508", ",", "126809", ",", "128112", ",", "129419", ",", 
   "130738", ",", "132059", ",", "133386", ",", "134747", ",", "136114", ",", 
   "137487", ",", "138868", ",", "140267", ",", "141676", ",", "143099", ",", 
   "144526", ",", "145955", ",", "147388", ",", "148827", ",", "150274", ",", 
   "151725", ",", "153178", ",", "154637", ",", "156108", ",", "157589", ",", 
   "159072", ",", "160559", ",", "162048", ",", "163541", ",", "165040", ",", 
   "166551", ",", "168074", ",", "169605", ",", "171148", ",", "172697", ",", 
   "174250", ",", "175809", ",", "177376", ",", "178947", ",", "180526", ",", 
   "182109", ",", "183706", ",", "185307", ",", "186914", ",", "188523", ",", 
   "190136", ",", "191755", ",", "193376", ",", "195003", ",", "196640", ",", 
   "198297", ",", "199960", ",", "201627", ",", "203296", ",", "204989", ",", 
   "206686", ",", "208385", ",", "210094", ",", "211815", ",", "213538", ",", 
   "215271", ",", "217012", ",", "218759", ",", "220512", ",", "222271", ",", 
   "224048", ",", "225831", ",", "227618", ",", "229407", ",", "231208", ",", 
   "233019", ",", "234842", ",", "236673", ",", "238520", ",", "240381", ",", 
   "242248", ",", "244119", ",", "245992", ",", "247869", ",", "249748", ",", 
   "251637", ",", "253538", ",", "255445", ",", "257358", ",", "259289", ",", 
   "261222", ",", "263171", ",", "265122", ",", "267095", ",", "269074", ",", 
   "271061", ",", "273054", ",", "275051", ",", "277050", ",", "279053", ",", 
   "281064", ",", "283081", ",", "285108", ",", "287137", ",", "289176", ",", 
   "291229", ",", "293292", ",", "295361", ",", "297442", ",", "299525", ",", 
   "301612", ",", "303701", ",", "305800", ",", "307911", ",", "310024", ",", 
   "312153", ",", "314284", ",", "316421", ",", "318562", ",", "320705", ",", 
   "322858", ",", "325019", ",", "327198", ",", "329401", ",", "331608", ",", 
   "333821", ",", "336042", ",", "338279", ",", "340518", ",", "342761", ",", 
   "345012", ",", "347279", ",", "349548", ",", "351821", ",", "354102", ",", 
   "356389", ",", "358682", ",", "360979", ",", "363288", ",", "365599", ",", 
   "367932", ",", "370271", ",", "372612", ",", "374959", ",", "377310", ",", 
   "379667", ",", "382038", ",", "384415", ",", "386796", ",", "389179", ",", 
   "391568", ",", "393961", ",", "396360", ",", "398771", ",", "401188", ",", 
   "403611", ",", "406048", ",", "408489", ",", "410936", ",", "413395", ",", 
   "415862", ",", "418335", ",", "420812", ",", "423315", ",", "425836", ",", 
   "428367", ",", "430906", ",", "433449", ",", "435998", ",", "438549", ",", 
   "441106", ",", "443685", ",", "446276", ",", "448869", ",", "451478", ",", 
   "454095", ",", "456716", ",", "459349", ",", "461996", ",", "464653", ",", 
   "467312", ",", "469975", ",", "472646", ",", "475323", ",", "478006", ",", 
   "480693", ",", "483382", ",", "486075", ",", "488774", ",", "491481", ",", 
   "494192", ",", "496905", ",", "499624", ",", "502353", ",", "505084", ",", 
   "507825", ",", "510574", ",", "513327", ",", "516094", ",", "518871", ",", 
   "521660", ",", "524451", ",", "527248", ",", "530049", ",", "532852", ",", 
   "535671", ",", "538504", ",", "541341", ",", "544184", ",", "547035", ",", 
   "549892", ",", "552753", ",", "555632", ",", "558519", ",", "561416", ",", 
   "564319", ",", "567228", ",", "570145", ",", "573072", ",", "576011", ",", 
   "578964", ",", "581921", ",", "584884", ",", "587853", ",", "590824", ",", 
   "593823", ",", "596824", ",", "599835", ",", "602854", ",", "605877", ",", 
   "608914", ",", "611955", ",", "615004", ",", "618065", ",", "621132", ",", 
   "624211", ",", "627294", ",", "630383", ",", "633492", ",", "636611", ",", 
   "639732", ",", "642869", ",", "646032", ",", "649199", ",", "652368", ",", 
   "655549", ",", "658736", ",", "661927", ",", "665130", ",", "668339", ",", 
   "671556", ",", "674777", ",", "678006", ",", "681257", ",", "684510", ",", 
   "687767", ",", "691026", ",", "694297", ",", "697596", ",", "700897", ",", 
   "704204", ",", "707517", ",", "710836", ",", "714159", ",", "717488", ",", 
   "720819", ",", "724162", ",", "727509", ",", "730868", ",", "734229", ",", 
   "737600", ",", "740973", ",", "744362", ",", "747753", ",", "751160", ",", 
   "754573", ",", "758006", ",", "761455", ",", "764912", ",", "768373", ",", 
   "771836", ",", "775303", ",", "778772", ",", "782263", ",", "785762", ",", 
   "789273", ",", "792790", ",", "796317", ",", "799846", ",", "803379", ",", 
   "806918", ",", "810459", ",", "814006", ",", "817563", ",", "821122", ",", 
   "824693", ",", "828274", ",", "831857", ",", "835450", ",", "839057", ",", 
   "842670", ",", "846287", ",", "849910", ",", "853541", ",", "857178", ",", 
   "860821", ",", "864480", ",", "868151", ",", "871824", ",", "875501", ",", 
   "879192", ",", "882889", ",", "886590", ",", "890299", ",", "894018", ",", 
   "897745", ",", "901478", ",", "905217", ",", "908978", ",", "912745", ",", 
   "916514", ",", "920293", ",", "924086", ",", "927883", ",", "931686", ",", 
   "935507", ",", "939330", ",", "943163", ",", "947010", ",", "950861", ",", 
   "954714", ",", "958577", ",", "962454", ",", "966335", ",", "970224", ",", 
   "974131", ",", "978042", ",", "981959", ",", "985878", ",", "989801", ",", 
   "993730", ",", "997661", ",", "1001604", ",", "1005551", ",", "1009518", 
   ",", "1013507", ",", "1017508", ",", "1021511", ",", "1025518", ",", 
   "1029531", ",", "1033550", ",", "1037571", ",", "1041598", ",", "1045647", 
   ",", "1049698", ",", "1053755", ",", "1057828", ",", "1061907", ",", 
   "1065998", ",", "1070091", ",", "1074190", ",", "1078301", ",", "1082428", 
   ",", "1086557", ",", "1090690", ",", "1094829", ",", "1098982", ",", 
   "1103139", ",", "1107298", ",", "1111475", ",", "1115676", ",", "1119887", 
   ",", "1124104", ",", "1128323", ",", "1132552", ",", "1136783", ",", 
   "1141024", ",", "1145267", ",", "1149520", ",", "1153779", ",", "1158040", 
   ",", "1162311", ",", "1166584", ",", "1170867", ",", "1175156", ",", 
   "1179453", ",", "1183780", ",", "1188117", ",", "1192456", ",", "1196805", 
   ",", "1201162", ",", "1205525", ",", "1209898", ",", "1214289", ",", 
   "1218686", ",", "1223095", ",", "1227516", ",", "1231939", ",", "1236380", 
   ",", "1240827", ",", "1245278", ",", "1249735", ",", "1254198", ",", 
   "1258679", ",", "1263162", ",", "1267655", ",", "1272162", ",", "1276675", 
   ",", "1281192", ",", "1285711", ",", "1290234", ",", "1294781", ",", 
   "1299330", ",", "1303891", ",", "1308458", ",", "1313041", ",", "1317632", 
   ",", "1322229", ",", "1326832", ",", "1331453", ",", "1336090", ",", 
   "1340729", ",", "1345372", ",", "1350021", ",", "1354672", ",", "1359329", 
   ",", "1363992", ",", "1368665", ",", "1373344", ",", "1378035", ",", 
   "1382738", ",", "1387459", ",", "1392182", ",", "1396911", ",", "1401644", 
   ",", "1406395", ",", "1411154", ",", "1415937", ",", "1420724", ",", 
   "1425513", ",", "1430306", ",", "1435105", ",", "1439906", ",", "1444719", 
   ",", "1449536", ",", "1454367", ",", "1459228", ",", "1464099", ",", 
   "1468976", ",", "1473865", ",", "1478768", ",", "1483677", ",", "1488596", 
   ",", "1493527", ",", "1498460", ",", "1503397", ",", "1508340", ",", 
   "1513291", ",", "1518248", ",", "1523215", ",", "1528184", ",", "1533157", 
   ",", "1538144", ",", "1543137", ",", "1548136", ",", "1553139", ",", 
   "1558148", ",", "1563159", ",", "1568180", ",", "1573203", ",", "1578242", 
   ",", "1583293", ",", "1588352", ",", "1593429", ",", "1598510", ",", 
   "1603597", ",", "1608696", ",", "1613797", ",", "1618904", ",", "1624017", 
   ",", "1629136", ",", "1634283", ",", "1639436", ",", "1644603", ",", 
   "1649774", ",", "1654953", ",", "1660142", ",", "1665339", ",", "1670548", 
   ",", "1675775", ",", "1681006", ",", "1686239", ",", "1691476", ",", 
   "1696737", ",", "1702010", ",", "1707289", ",", "1712570", ",", "1717867", 
   ",", "1723170", ",", "1728479", ",", "1733802", ",", "1739135", ",", 
   "1744482", ",", "1749833", ",", "1755214", ",", "1760601", ",", "1765994", 
   ",", "1771393", ",", "1776800", ",", "1782213", ",", "1787630", ",", 
   "1793049", ",", "1798480", ",", "1803917", ",", "1809358", ",", "1814801", 
   ",", "1820250", ",", "1825721", ",", "1831198", ",", "1836677", ",", 
   "1842160", ",", "1847661", ",", "1853164", ",", "1858671", ",", "1864190", 
   ",", "1869711", ",", "1875238", ",", "1880769", ",", "1886326", ",", 
   "1891889", ",", "1897458", ",", "1903031", ",", "1908612", ",", "1914203", 
   ",", "1919826", ",", "1925465", ",", "1931106", ",", "1936753", ",", 
   "1942404", ",", "1948057", ",", "1953714", ",", "1959373", ",", "1965042", 
   ",", "1970725", ",", "1976414", ",", "1982107", ",", "1987808", ",", 
   "1993519", ",", "1999236", ",", "2004973", ",", "2010714", ",", "2016457", 
   ",", "2022206", ",", "2027985", ",", "2033768", ",", "2039559", ",", 
   "2045360", ",", "2051167", ",", "2056980", ",", "2062801", ",", "2068628", 
   ",", "2074467", ",", "2080310", ",", "2086159", ",", "2092010", ",", 
   "2097867", ",", "2103728", ",", "2109595", ",", "2115464", ",", "2121343", 
   ",", "2127224", ",", "2133121", ",", "2139024", ",", "2144947", ",", 
   "2150874", ",", "2156813", ",", "2162766", ",", "2168747", ",", "2174734", 
   ",", "2180741", ",", "2186752", ",", "2192781", ",", "2198818", ",", 
   "2204861", ",", "2210908", ",", "2216961", ",", "2223028", ",", "2229101", 
   ",", "2235180", ",", "2241269", ",", "2247360", ",", "2253461", ",", 
   "2259574", ",", "2265695", ",", "2271826", ",", "2277959", ",", "2284102", 
   ",", "2290253", ",", "2296416", ",", "2302589", ",", "2308786", ",", 
   "2314985", ",", "2321188", ",", "2327399", ",", "2333616", ",", "2339837", 
   ",", "2346066", ",", "2352313", ",", "2358570", ",", "2364833", ",", 
   "2371102", ",", "2377373", ",", "2383650", ",", "2389937", ",", "2396236", 
   ",", "2402537", ",", "2408848", ",", "2415165", ",", "2421488", ",", 
   "2427817", ",", "2434154", ",", "2440497", ",", "2446850", ",", "2453209", 
   ",", "2459570", ",", "2465937", ",", "2472310", ",", "2478689", ",", 
   "2485078", ",", "2491475", ",", "2497896", ",", "2504323", ",", "2510772", 
   ",", "2517223", ",", "2523692", ",", "2530165", ",", "2536646", ",", 
   "2543137", ",", "2549658", ",", "2556187", ",", "2562734", ",", "2569285", 
   ",", "2575838", ",", "2582401", ",", "2588970", ",", "2595541", ",", 
   "2602118", ",", "2608699", ",", "2615298", ",", "2621905", ",", "2628524", 
   ",", "2635161", ",", "2641814", ",", "2648473", ",", "2655134", ",", 
   "2661807", ",", "2668486", ",", "2675175", ",", "2681866", ",", "2688567", 
   ",", "2695270", ",", "2701979", ",", "2708698", ",", "2715431", ",", 
   "2722168", ",", "2728929", ",", "2735692", ",", "2742471", ",", "2749252", 
   ",", "2756043", ",", "2762836", ",", "2769639", ",", "2776462", ",", 
   "2783289", ",", "2790118", ",", "2796951", ",", "2803792", ",", "2810649", 
   ",", "2817512", ",", "2824381", ",", "2831252", ",", "2838135", ",", 
   "2845034", ",", "2851941", ",", "2858852", ",", "2865769", ",", "2872716", 
   ",", "2879665", ",", "2886624", ",", "2893585", ",", "2900552", ",", 
   "2907523", ",", "2914500", ",", "2921483", ",", "2928474", ",", "2935471", 
   ",", "2942472", ",", "2949485", ",", "2956504", ",", "2963531", ",", 
   "2970570", ",", "2977613", ",", "2984670", ",", "2991739", ",", "2998818", 
   ",", "3005921", ",", "3013030", ",", "3020151", ",", "3027278", ",", 
   "3034407", ",", "3041558", ",", "3048717", ",", "3055894", ",", "3063081", 
   ",", "3070274", ",", "3077481", ",", "3084692", ",", "3091905", ",", 
   "3099124", ",", "3106353", ",", "3113590", ",", "3120833", ",", "3128080", 
   ",", "3135333", ",", "3142616", ",", "3149913", ",", "3157220", ",", 
   "3164529", ",", "3171850", ",", "3179181", ",", "3186514", ",", "3193863", 
   ",", "3201214", ",", "3208583", ",", "3215976", ",", "3223387", ",", 
   "3230804", ",", "3238237", ",", "3245688", ",", "3253145", ",", "3260604", 
   ",", "3268081", ",", "3275562", ",", "3283049", ",", "3290538", ",", 
   "3298037", ",", "3305544", ",", "3313061", ",", "3320584", ",", "3328113", 
   ",", "3335650", ",", "3343191", ",", "3350738", ",", "3358287", ",", 
   "3365846", ",", "3373407", ",", "3380980", ",", "3388557", ",", "3396140", 
   ",", "3403729", ",", "3411320", ",", "3418923", ",", "3426530", ",", 
   "3434151", ",", "3441790", ",", "3449433", ",", "3457082", ",", "3464751", 
   ",", "3472424", ",", "3480105", ",", "3487792", ",", "3495483", ",", 
   "3503182", ",", "3510885", ",", "3518602", ",", "3526325", ",", "3534052", 
   ",", "3541793", ",", "3549546", ",", "3557303", ",", "3565062", ",", 
   "3572851", ",", "3580644", ",", "3588461", ",", "3596284", ",", "3604113", 
   ",", "3611954", ",", "3619807", ",", "3627674", ",", "3635547", ",", 
   "3643424", ",", "3651303", ",", "3659186", ",", "3667087", ",", "3674994", 
   ",", "3682913"}], "}"}]], "Output",
 CellChangeTimes->{3.869330502672244*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f65a741c-0a40-4e6b-a821-95d28264dd3a"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteInverseLessThan", "[", 
  RowBox[{
   RowBox[{"Accumulate", "[", 
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", "#", "]"}], "]"}], "]"}], ",", 
   RowBox[{"1", " ", 
    SuperscriptBox["10", "6"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869330515635257*^9, 3.869330563367385*^9}, {
  3.8693305989433894`*^9, 3.8693306148433657`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"07bf3e41-7f9a-458d-a653-030fb338e0cf"],

Cell[BoxData[
 TemplateBox[{
  "Range", "range", 
   "\"Range specification in \\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
\\\"#1\\\", \\\"]\\\"}]\\) does not have appropriate bounds.\"", 2, 67, 2, 
   19461278825561380424, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8693305995433693`*^9, 3.869330619489368*^9}},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"e188442d-22b9-4b5c-a25c-37fb1b72ad7f"],

Cell[BoxData[
 RowBox[{"DiscreteInverseLessThan", "[", 
  RowBox[{
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", "#1", "]"}], "]"}], ",", "1000000"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.869330563800372*^9, {3.869330599902378*^9, 3.869330619805366*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"9d9536f9-8957-4b40-b365-4bab9d1923d7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NestWhileList", "[", "F", "]"}]], "Input",
 CellChangeTimes->{{3.869330627226369*^9, 
  3.8693306388143673`*^9}},ExpressionUUID->"d8e75cb5-de12-4265-b649-\
a4eb368bf6e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerPhi", "[", "1000000", "]"}]], "Input",
 CellChangeTimes->{{3.8693306643133726`*^9, 3.869330677515375*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"d12e63a4-1dfb-43d7-ae6d-1d9ec1adb4e1"],

Cell[BoxData["400000"], "Output",
 CellChangeTimes->{3.8693306782733817`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"1965bdcc-6219-456c-88ae-4a06870aabd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsequences", "[", 
  RowBox[{
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"EulerPhi", "[", "100", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", "21", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869330681074379*^9, 3.869330704697383*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"a7e69154-10ad-4553-9e46-3e0861310741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
     "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
     ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
     "73"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", "19", ",", 
     "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", "47", 
     ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", 
     "79"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23", ",",
      "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", "47", ",", "53", 
     ",", "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", 
     "83"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23", ",", "29", 
     ",", "31", ",", "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", 
     "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", 
     ",", "89"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "13", ",", "17", ",", "19", ",", "23", ",", "29", ",", "31", 
     ",", "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",", 
     "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", 
     ",", "97"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "13", ",", "17", ",", "19", ",", "23", ",", "29", ",", "31", ",", "37", 
     ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", 
     "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", 
     ",", "101"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17", ",", "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", 
     ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", 
     "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", 
     ",", "103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
     ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
     "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", "103",
      ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", "47", 
     ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", 
     "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", "103", ",", 
     "107", ",", "109"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", "47", ",", "53", 
     ",", "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", 
     "83", ",", "89", ",", "97", ",", "101", ",", "103", ",", "107", ",", 
     "109", ",", "113"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31", ",", "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", 
     ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", 
     "89", ",", "97", ",", "101", ",", "103", ",", "107", ",", "109", ",", 
     "113", ",", "127"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", 
     ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", 
     "97", ",", "101", ",", "103", ",", "107", ",", "109", ",", "113", ",", 
     "127", ",", "131"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "41", ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", 
     ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", 
     "101", ",", "103", ",", "107", ",", "109", ",", "113", ",", "127", ",", 
     "131", ",", "137"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", 
     ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", 
     "103", ",", "107", ",", "109", ",", "113", ",", "127", ",", "131", ",", 
     "137", ",", "139"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", "73", 
     ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", "103", ",", 
     "107", ",", "109", ",", "113", ",", "127", ",", "131", ",", "137", ",", 
     "139", ",", "149"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", 
     ",", "83", ",", "89", ",", "97", ",", "101", ",", "103", ",", "107", ",",
      "109", ",", "113", ",", "127", ",", "131", ",", "137", ",", "139", ",", 
     "149", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", 
     ",", "89", ",", "97", ",", "101", ",", "103", ",", "107", ",", "109", 
     ",", "113", ",", "127", ",", "131", ",", "137", ",", "139", ",", "149", 
     ",", "151", ",", "157"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", 
     ",", "97", ",", "101", ",", "103", ",", "107", ",", "109", ",", "113", 
     ",", "127", ",", "131", ",", "137", ",", "139", ",", "149", ",", "151", 
     ",", "157", ",", "163"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", 
     ",", "101", ",", "103", ",", "107", ",", "109", ",", "113", ",", "127", 
     ",", "131", ",", "137", ",", "139", ",", "149", ",", "151", ",", "157", 
     ",", "163", ",", "167"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", 
     ",", "103", ",", "107", ",", "109", ",", "113", ",", "127", ",", "131", 
     ",", "137", ",", "139", ",", "149", ",", "151", ",", "157", ",", "163", 
     ",", "167", ",", "173"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8693306932273655`*^9, 3.8693307051273685`*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"d4fbe7c6-5ddc-4173-bd12-efd16c117e20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsequences", "[", 
  RowBox[{
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", "21", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869330681074379*^9, 3.8693307150013733`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"383e6a0c-7b7a-4d29-a3ff-8eeb1b0ebdaf"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", 
             ",", "17", ",", "19", ",", "23", ",", "29", ",", "31", ",", "37",
              ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",", 
             "61", ",", "67", ",", "71", ",", "73"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", 
             ",", "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41",
              ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", 
             "67", ",", "71", ",", "73", ",", "79"}], "}"}], ",", 
         TemplateBox[{"399977"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"5799799", ",", "5799803", ",", "5799811", ",", "5799823", 
             ",", "5799851", ",", "5799853", ",", "5799869", ",", "5799929", 
             ",", "5799931", ",", "5799947", ",", "5799953", ",", "5799961", 
             ",", "5799977", ",", "5799991", ",", "5800019", ",", "5800021", 
             ",", "5800027", ",", "5800037", ",", "5800049", ",", "5800057", 
             ",", "5800079"}], "}"}]}], "}"}], Short[#, 5]& ], "line" -> 71, 
   "sessionID" -> 19461278825561380424, "byteCount" -> 220789040, "size" -> 5,
    "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8693307313874207`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"68bc01e0-aeb1-452a-b967-5a19723bc528"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Subsequences", "[", 
   RowBox[{
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", "21", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693307485054426`*^9, 3.8693307595404253`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"a0e3d8e1-f9db-40cc-98b1-9ea699f89957"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23",
              ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", 
             "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",",
              "73", ",", "79", ",", "83", ",", "89"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"17", ",", "19", ",", "23", ",", "29", ",", "31", ",", 
             "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",",
              "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", 
             ",", "89", ",", "97", ",", "101", ",", "103"}], "}"}], ",", 
         TemplateBox[{"45817"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"5799691", ",", "5799707", ",", "5799767", ",", "5799793", 
             ",", "5799799", ",", "5799803", ",", "5799811", ",", "5799823", 
             ",", "5799851", ",", "5799853", ",", "5799869", ",", "5799929", 
             ",", "5799931", ",", "5799947", ",", "5799953", ",", "5799961", 
             ",", "5799977", ",", "5799991", ",", "5800019", ",", "5800021", 
             ",", "5800027"}], "}"}]}], "}"}], Short[#, 5]& ], "line" -> 72, 
   "sessionID" -> 19461278825561380424, "byteCount" -> 25292720, "size" -> 5, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8693307653094225`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"72cf8d83-7641-40e1-96f8-499146b794a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeLargestBy", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"PrimeQ", "[", 
       RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Subsequences", "[", 
     RowBox[{
      RowBox[{"Prime", "[", 
       RowBox[{"Range", "[", 
        RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", "21", "}"}]}], "]"}], "]"}], ",", "Length", ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8693307708024216`*^9, 3.869330775993434*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f43dfdfb-4ded-4964-8b1d-faaad20cbadd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23", ",", "29", ",",
     "31", ",", "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", 
    ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", 
    "89"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8693307803164196`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"71543f2b-79d4-4db5-93d0-bed1161d650a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"First", "[", 
   RowBox[{"TakeLargestBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"PrimeQ", "[", 
         RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
      RowBox[{"Subsequences", "[", 
       RowBox[{
        RowBox[{"Prime", "[", 
         RowBox[{"Range", "[", 
          RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", "30", "}"}]}], "]"}], "]"}], ",", "Length", ",", "1"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.8693308522389774`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"c2ed4fcb-de66-4af9-8512-4beaffc462a2"],

Cell[BoxData[
 TemplateBox[{
  "TakeLargestBy", "insuff", 
   "\"Cannot take \\!\\(\\*RowBox[{\\\"1\\\"}]\\) element(s) from a list of \
length \\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"", 2, 76, 4, 19461278825561380424, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8693308567509737`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"a9778cfb-2da0-405f-b2cb-deec6ccd8b38"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8693307961524186`*^9, {3.8693308453519845`*^9, 3.8693308572859774`*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"4e1394cf-e0f4-471a-bd70-734aa4d9248a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Subsequences", "[", 
   RowBox[{
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", "22", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.869330895082553*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"27f3938e-858a-4e51-b76e-599eff099f5e"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8693308990885315`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"ca226d88-d490-430f-991d-b31472775202"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Subsequences", "[", 
   RowBox[{
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", "21", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.8693309093345428`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"a6ff1340-3525-453e-9362-3341b601bddb"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23",
              ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", 
             "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",",
              "73", ",", "79", ",", "83", ",", "89"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"17", ",", "19", ",", "23", ",", "29", ",", "31", ",", 
             "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",",
              "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", 
             ",", "89", ",", "97", ",", "101", ",", "103"}], "}"}], ",", 
         TemplateBox[{"45817"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"5799691", ",", "5799707", ",", "5799767", ",", "5799793", 
             ",", "5799799", ",", "5799803", ",", "5799811", ",", "5799823", 
             ",", "5799851", ",", "5799853", ",", "5799869", ",", "5799929", 
             ",", "5799931", ",", "5799947", ",", "5799953", ",", "5799961", 
             ",", "5799977", ",", "5799991", ",", "5800019", ",", "5800021", 
             ",", "5800027"}], "}"}]}], "}"}], Short[#, 5]& ], "line" -> 78, 
   "sessionID" -> 19461278825561380424, "byteCount" -> 25292720, "size" -> 5, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.869330915211531*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"24008445-d502-4d47-8e3b-57c3decaa7b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "<", 
      SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "23", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.8693309217460747`*^9}, {
  3.869330957393068*^9, 3.8693309981330767`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"e40f925e-2be1-40d6-b275-02bfeb5dc9f9"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23",
              ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", 
             "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",",
              "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101"}], 
           "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"17", ",", "19", ",", "23", ",", "29", ",", "31", ",", 
             "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",",
              "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", 
             ",", "89", ",", "97", ",", "101", ",", "103", ",", "107", ",", 
             "109"}], "}"}], ",", 
         TemplateBox[{"721"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"43159", ",", "43177", ",", "43189", ",", "43201", ",", 
             "43207", ",", "43223", ",", "43237", ",", "43261", ",", "43271", 
             ",", "43283", ",", "43291", ",", "43313", ",", "43319", ",", 
             "43321", ",", "43331", ",", "43391", ",", "43397", ",", "43399", 
             ",", "43403", ",", "43411", ",", "43427", ",", "43441", ",", 
             "43451"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"43291", ",", "43313", ",", "43319", ",", "43321", ",", 
             "43331", ",", "43391", ",", "43397", ",", "43399", ",", "43403", 
             ",", "43411", ",", "43427", ",", "43441", ",", "43451", ",", 
             "43457", ",", "43481", ",", "43487", ",", "43499", ",", "43517", 
             ",", "43541", ",", "43543", ",", "43573", ",", "43577", ",", 
             "43579"}], "}"}]}], "}"}], Short[#, 5]& ], "line" -> 81, 
   "sessionID" -> 19461278825561380424, "byteCount" -> 435088, "size" -> 5, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.86933092775007*^9, {3.8693309918640738`*^9, 3.869331002572071*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"63ec4f93-a257-463c-b67d-0e257536021f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "<", 
      SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "24", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.8693309217460747`*^9}, {
  3.869330957393068*^9, 3.8693310223170757`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"86baf90a-4110-438a-b64c-5a6744cb0bc8"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.869331026767085*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"6a1e75d4-ed77-46c9-86bd-2c9c2462a3da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "<", 
      SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "25", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.8693309217460747`*^9}, {
  3.869330957393068*^9, 3.869331035952071*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"efc4f84f-996e-4a53-8c79-86f8c3236f65"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"5", ",", "7", ",", "11", ",", "13", ",", "17", ",", "19", 
             ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43",
              ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", 
             "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", ",",
              "101", ",", "103"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23",
              ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", 
             "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",",
              "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", 
             ",", "103", ",", "107"}], "}"}], ",", 
         TemplateBox[{"637"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"39847", ",", "39857", ",", "39863", ",", "39869", ",", 
             "39877", ",", "39883", ",", "39887", ",", "39901", ",", "39929", 
             ",", "39937", ",", "39953", ",", "39971", ",", "39979", ",", 
             "39983", ",", "39989", ",", "40009", ",", "40013", ",", "40031", 
             ",", "40037", ",", "40039", ",", "40063", ",", "40087", ",", 
             "40093", ",", "40099", ",", "40111"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"39863", ",", "39869", ",", "39877", ",", "39883", ",", 
             "39887", ",", "39901", ",", "39929", ",", "39937", ",", "39953", 
             ",", "39971", ",", "39979", ",", "39983", ",", "39989", ",", 
             "40009", ",", "40013", ",", "40031", ",", "40037", ",", "40039", 
             ",", "40063", ",", "40087", ",", "40093", ",", "40099", ",", 
             "40111", ",", "40123", ",", "40127"}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 83, "sessionID" -> 19461278825561380424, 
   "byteCount" -> 415616, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.869331040476082*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"fe849b47-1d76-442f-9e99-91e890975975"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "<", 
      SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "31", ",", "2"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.8693309217460747`*^9}, {
  3.869330957393068*^9, 3.869331035952071*^9}, {3.869331071683096*^9, 
  3.869331107010089*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"ed18ddd9-b2ef-4cf2-9d66-f7a50ca03155"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23",
              ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", ",", 
             "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",",
              "73", ",", "79", ",", "83", ",", "89"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"17", ",", "19", ",", "23", ",", "29", ",", "31", ",", 
             "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",",
              "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", 
             ",", "89", ",", "97", ",", "101", ",", "103"}], "}"}], ",", 
         TemplateBox[{"3887"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"31859", ",", "31873", ",", "31883", ",", "31891", ",", 
             "31907", ",", "31957", ",", "31963", ",", "31973", ",", "31981", 
             ",", "31991", ",", "32003", ",", "32009", ",", "32027", ",", 
             "32029", ",", "32051", ",", "32057", ",", "32059", ",", "32063", 
             ",", "32069", ",", "32077", ",", "32083", ",", "32089", ",", 
             "32099", ",", "32117", ",", "32119", ",", "32141", ",", "32143", 
             ",", "32159", ",", "32173", ",", "32183", ",", "32189"}], "}"}], 
         ",", 
         RowBox[{"{", 
           
           RowBox[{"32063", ",", "32069", ",", "32077", ",", "32083", ",", 
             "32089", ",", "32099", ",", "32117", ",", "32119", ",", "32141", 
             ",", "32143", ",", "32159", ",", "32173", ",", "32183", ",", 
             "32189", ",", "32191", ",", "32203", ",", "32213", ",", "32233", 
             ",", "32237", ",", "32251", ",", "32257", ",", "32261", ",", 
             "32297", ",", "32299", ",", "32303", ",", "32309", ",", "32321", 
             ",", "32323", ",", "32327", ",", "32341", ",", "32353"}], 
           "}"}]}], "}"}], Short[#, 5]& ], "line" -> 85, "sessionID" -> 
   19461278825561380424, "byteCount" -> 2575648, "size" -> 5, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8693310942450867`*^9, 3.8693311279840784`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"004fc430-0670-4db3-bdd9-253c77d6e330"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "<", 
      SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "101", ",", "2"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869330782316435*^9, 3.8693309217460747`*^9}, {
  3.869330957393068*^9, 3.869331035952071*^9}, {3.869331071683096*^9, 
  3.8693311413330708`*^9}, {3.869331215620108*^9, 
  3.8693312181660786`*^9}},ExpressionUUID->"6c99aad4-cb13-49ed-9d32-\
83c13d595286"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.869331220534092*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"d3271088-7d8b-4fa5-82de-40f652557a30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", "#", "]"}], "<", 
     SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
  RowBox[{"Subsequences", "[", 
   RowBox[{
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", "21", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693312451340923`*^9, 3.86933124587307*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"e02dcb91-12c3-4edb-b93a-3b2b7ba3c8de"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", 
             ",", "17", ",", "19", ",", "23", ",", "29", ",", "31", ",", "37",
              ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",", 
             "61", ",", "67", ",", "71", ",", "73"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", 
             ",", "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41",
              ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", 
             "67", ",", "71", ",", "73", ",", "79"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"5", ",", "7", ",", "11", ",", "13", ",", "17", ",", "19", 
             ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43",
              ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", 
             "71", ",", "73", ",", "79", ",", "83"}], "}"}], ",", 
         TemplateBox[{"4893"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"47507", ",", "47513", ",", "47521", ",", "47527", ",", 
             "47533", ",", "47543", ",", "47563", ",", "47569", ",", "47581", 
             ",", "47591", ",", "47599", ",", "47609", ",", "47623", ",", 
             "47629", ",", "47639", ",", "47653", ",", "47657", ",", "47659", 
             ",", "47681", ",", "47699", ",", "47701"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"47513", ",", "47521", ",", "47527", ",", "47533", ",", 
             "47543", ",", "47563", ",", "47569", ",", "47581", ",", "47591", 
             ",", "47599", ",", "47609", ",", "47623", ",", "47629", ",", 
             "47639", ",", "47653", ",", "47657", ",", "47659", ",", "47681", 
             ",", "47699", ",", "47701", ",", "47711"}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 87, "sessionID" -> 19461278825561380424, 
   "byteCount" -> 2705472, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.869331250690069*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"778f99bb-cc37-4b5f-bbc8-7f0312ddd438"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "/@", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "#", "]"}], "<", 
      SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "21", "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8693312500720944`*^9, 3.869331310159092*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"51e9dc03-c6a1-426c-9921-1f7e1a9c1dc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "712", ",", "789", ",", "869", ",", "953", ",", "1043", ",", "1133", ",", 
   "1223", ",", "1313", ",", "1403", ",", "1493", ",", "1591", ",", "1691", 
   ",", "1791", ",", "1889", ",", "1995", ",", "2099", ",", "2203", ",", 
   "2307", ",", "2413", ",", "2519", ",", "2627", ",", "2735", ",", "2847", 
   ",", "2957", ",", "3065", ",", "3167", ",", "3277", ",", "3397", ",", 
   "3517", ",", "3637", ",", "3757", ",", "3869", ",", "3979", ",", "4093", 
   ",", "4211", ",", "4325", ",", "4443", ",", "4557", ",", "4671", ",", 
   "4785", ",", "4895", ",", "5009", ",", "5135", ",", "5255", ",", "5375", 
   ",", "5495", ",", "5627", ",", "5753", ",", "5877", ",", "5999", ",", 
   "6123", ",", "6249", ",", "6377", ",", "6509", ",", "6637", ",", "6763", 
   ",", "6889", ",", "7017", ",", "7147", ",", "7279", ",", "7417", ",", 
   "7555", ",", "7693", ",", "7819", ",", "7947", ",", "8077", ",", "8209", 
   ",", "8335", ",", "8459", ",", "8575", ",", "8693", ",", "8819", ",", 
   "8947", ",", "9071", ",", "9197", ",", "9321", ",", "9447", ",", "9579", 
   ",", "9705", ",", "9845", ",", "9983", ",", "10121", ",", "10263", ",", 
   "10401", ",", "10539", ",", "10677", ",", "10821", ",", "10965", ",", 
   "11107", ",", "11247", ",", "11391", ",", "11537", ",", "11675", ",", 
   "11807", ",", "11947", ",", "12089", ",", "12229", ",", "12367", ",", 
   "12499", ",", "12635", ",", "12755", ",", "12881", ",", "13001", ",", 
   "13121", ",", "13243", ",", "13373", ",", "13505", ",", "13637", ",", 
   "13771", ",", "13905", ",", "14043", ",", "14179", ",", "14317", ",", 
   "14457", ",", "14599", ",", "14737", ",", "14869", ",", "15013", ",", 
   "15163", ",", "15319", ",", "15471", ",", "15631", ",", "15781", ",", 
   "15931", ",", "16077", ",", "16225", ",", "16377", ",", "16525", ",", 
   "16665", ",", "16801", ",", "16945", ",", "17087", ",", "17227", ",", 
   "17363", ",", "17513", ",", "17663", ",", "17813", ",", "17969", ",", 
   "18119", ",", "18263", ",", "18401", ",", "18543", ",", "18689", ",", 
   "18837", ",", "18987", ",", "19141", ",", "19293", ",", "19437", ",", 
   "19589", ",", "19743", ",", "19899", ",", "20043", ",", "20193", ",", 
   "20343", ",", "20495", ",", "20637", ",", "20777", ",", "20919", ",", 
   "21053", ",", "21185", ",", "21331", ",", "21475", ",", "21615", ",", 
   "21745", ",", "21877", ",", "22009", ",", "22143", ",", "22275", ",", 
   "22407", ",", "22549", ",", "22689", ",", "22833", ",", "22983", ",", 
   "23133", ",", "23287", ",", "23441", ",", "23593", ",", "23755", ",", 
   "23911", ",", "24071", ",", "24231", ",", "24375", ",", "24521", ",", 
   "24677", ",", "24839", ",", "25013", ",", "25183", ",", "25349", ",", 
   "25515", ",", "25677", ",", "25823", ",", "25971", ",", "26111", ",", 
   "26247", ",", "26385", ",", "26519", ",", "26653", ",", "26813", ",", 
   "26967", ",", "27123", ",", "27281", ",", "27451", ",", "27629", ",", 
   "27815", ",", "27993", ",", "28163", ",", "28319", ",", "28479", ",", 
   "28643", ",", "28805", ",", "28967", ",", "29129", ",", "29299", ",", 
   "29477", ",", "29653", ",", "29821", ",", "29989", ",", "30155", ",", 
   "30293", ",", "30437", ",", "30587", ",", "30737", ",", "30881", ",", 
   "31021", ",", "31151", ",", "31283", ",", "31421", ",", "31559", ",", 
   "31699", ",", "31835", ",", "31981", ",", "32129", ",", "32277", ",", 
   "32415", ",", "32547", ",", "32683", ",", "32817", ",", "32955", ",", 
   "33099", ",", "33257", ",", "33409", ",", "33553", ",", "33691", ",", 
   "33841", ",", "33989", ",", "34135", ",", "34285", ",", "34439", ",", 
   "34591", ",", "34745", ",", "34903", ",", "35053", ",", "35205", ",", 
   "35357", ",", "35525", ",", "35695", ",", "35863", ",", "36031", ",", 
   "36205", ",", "36379", ",", "36545", ",", "36713", ",", "36893", ",", 
   "37085", ",", "37259", ",", "37433", ",", "37607", ",", "37775", ",", 
   "37933", ",", "38099", ",", "38267", ",", "38433", ",", "38599", ",", 
   "38777", ",", "38951", ",", "39123", ",", "39291", ",", "39477", ",", 
   "39667", ",", "39853", ",", "40035", ",", "40209", ",", "40377", ",", 
   "40533", ",", "40683", ",", "40833", ",", "40989", ",", "41145", ",", 
   "41307", ",", "41481", ",", "41655", ",", "41823", ",", "41997", ",", 
   "42167", ",", "42323", ",", "42479", ",", "42629", ",", "42789", ",", 
   "42929", ",", "43079", ",", "43223", ",", "43367", ",", "43511", ",", 
   "43655", ",", "43805", ",", "43955", ",", "44117", ",", "44293", ",", 
   "44471", ",", "44645", ",", "44813", ",", "44987", ",", "45157", ",", 
   "45319", ",", "45487", ",", "45667", ",", "45847", ",", "46021", ",", 
   "46191", ",", "46365", ",", "46529", ",", "46695", ",", "46867", ",", 
   "47037", ",", "47227", ",", "47413", ",", "47593", ",", "47761", ",", 
   "47909", ",", "48059", ",", "48217", ",", "48373", ",", "48517", ",", 
   "48661", ",", "48807", ",", "48949", ",", "49081", ",", "49223", ",", 
   "49367", ",", "49509", ",", "49659", ",", "49807", ",", "49957", ",", 
   "50107", ",", "50263", ",", "50403", ",", "50541", ",", "50703", ",", 
   "50877", ",", "51057", ",", "51239", ",", "51411", ",", "51583", ",", 
   "51753", ",", "51927", ",", "52117", ",", "52315", ",", "52509", ",", 
   "52707", ",", "52907", ",", "53105", ",", "53301", ",", "53507", ",", 
   "53717", ",", "53917", ",", "54113", ",", "54311", ",", "54511", ",", 
   "54691", ",", "54857", ",", "55015", ",", "55169", ",", "55325", ",", 
   "55483", ",", "55643", ",", "55799", ",", "55939", ",", "56077", ",", 
   "56215", ",", "56347", ",", "56479", ",", "56611", ",", "56745", ",", 
   "56875", ",", "57007", ",", "57139", ",", "57273", ",", "57403", ",", 
   "57529", ",", "57665", ",", "57811", ",", "57959", ",", "58109", ",", 
   "58261", ",", "58411", ",", "58561", ",", "58727", ",", "58895", ",", 
   "59063", ",", "59235", ",", "59403", ",", "59571", ",", "59745", ",", 
   "59917", ",", "60093", ",", "60261", ",", "60433", ",", "60605", ",", 
   "60775", ",", "60971", ",", "61153", ",", "61331", ",", "61513", ",", 
   "61693", ",", "61879", ",", "62063", ",", "62251", ",", "62433", ",", 
   "62613", ",", "62795", ",", "62975", ",", "63155", ",", "63347", ",", 
   "63539", ",", "63721", ",", "63905", ",", "64111", ",", "64315", ",", 
   "64515", ",", "64725", ",", "64913", ",", "65103", ",", "65295", ",", 
   "65485", ",", "65679", ",", "65863", ",", "66051", ",", "66253", ",", 
   "66445", ",", "66635", ",", "66815", ",", "67003", ",", "67213", ",", 
   "67405", ",", "67593", ",", "67785", ",", "67967", ",", "68127", ",", 
   "68289", ",", "68451", ",", "68613", ",", "68773", ",", "68941", ",", 
   "69099", ",", "69261", ",", "69417", ",", "69585", ",", "69747", ",", 
   "69903", ",", "70063", ",", "70239", ",", "70429", ",", "70615", ",", 
   "70777", ",", "70939", ",", "71099", ",", "71255", ",", "71427", ",", 
   "71603", ",", "71785", ",", "71971", ",", "72155", ",", "72337", ",", 
   "72511", ",", "72689", ",", "72859", ",", "73033", ",", "73201", ",", 
   "73369", ",", "73533", ",", "73701", ",", "73851", ",", "73995", ",", 
   "74145", ",", "74297", ",", "74451", ",", "74607", ",", "74769", ",", 
   "74915", ",", "75059", ",", "75207", ",", "75361", ",", "75507", ",", 
   "75655", ",", "75813", ",", "75971", ",", "76131", ",", "76293", ",", 
   "76455", ",", "76623", ",", "76785", ",", "76943", ",", "77121", ",", 
   "77295", ",", "77457", ",", "77623", ",", "77799", ",", "77973", ",", 
   "78145", ",", "78329", ",", "78509", ",", "78683", ",", "78859", ",", 
   "79037", ",", "79213", ",", "79385", ",", "79565", ",", "79745", ",", 
   "79925", ",", "80113", ",", "80297", ",", "80481", ",", "80661", ",", 
   "80823", ",", "80985", ",", "81147", ",", "81311", ",", "81465", ",", 
   "81635", ",", "81821", ",", "82001", ",", "82181", ",", "82355", ",", 
   "82521", ",", "82689", ",", "82857", ",", "83021", ",", "83193", ",", 
   "83363", ",", "83531", ",", "83697", ",", "83865", ",", "84039", ",", 
   "84213", ",", "84389", ",", "84571", ",", "84767", ",", "84953", ",", 
   "85139", ",", "85311", ",", "85475", ",", "85631", ",", "85787", ",", 
   "85957", ",", "86145", ",", "86337", ",", "86533", ",", "86725", ",", 
   "86905", ",", "87085", ",", "87269", ",", "87439", ",", "87613", ",", 
   "87781", ",", "87949", ",", "88121", ",", "88283", ",", "88439", ",", 
   "88599", ",", "88763", ",", "88951", ",", "89135", ",", "89317", ",", 
   "89507", ",", "89687", ",", "89849", ",", "90011", ",", "90185", ",", 
   "90363", ",", "90543", ",", "90733", ",", "90915", ",", "91113", ",", 
   "91307", ",", "91499", ",", "91695", ",", "91887", ",", "92095", ",", 
   "92295", ",", "92499", ",", "92709", ",", "92895", ",", "93075", ",", 
   "93255", ",", "93429", ",", "93619", ",", "93805", ",", "93993", ",", 
   "94169", ",", "94355", ",", "94537", ",", "94713", ",", "94893", ",", 
   "95073", ",", "95263", ",", "95451", ",", "95637", ",", "95823", ",", 
   "95993", ",", "96167", ",", "96337", ",", "96503", ",", "96669", ",", 
   "96843", ",", "97027", ",", "97225", ",", "97401", ",", "97581", ",", 
   "97753", ",", "97937", ",", "98113", ",", "98305", ",", "98495", ",", 
   "98681", ",", "98853", ",", "99015", ",", "99177", ",", "99347", ",", 
   "99515", ",", "99695", ",", "99899", ",", "100107", ",", "100311", ",", 
   "100521", ",", "100733", ",", "100939", ",", "101137", ",", "101345", ",", 
   "101549", ",", "101753", ",", "101945", ",", "102137", ",", "102311", ",", 
   "102491", ",", "102671", ",", "102851", ",", "103039", ",", "103231", ",", 
   "103417", ",", "103603", ",", "103781", ",", "103931", ",", "104081", ",", 
   "104227", ",", "104377", ",", "104525", ",", "104675", ",", "104833", ",", 
   "104983", ",", "105137", ",", "105299", ",", "105457", ",", "105613", ",", 
   "105769", ",", "105921", ",", "106099", ",", "106279", ",", "106459", ",", 
   "106637", ",", "106817", ",", "107003", ",", "107191", ",", "107389", ",", 
   "107595", ",", "107803", ",", "107997", ",", "108183", ",", "108385", ",", 
   "108581", ",", "108779", ",", "108973", ",", "109171", ",", "109373", ",", 
   "109575", ",", "109785", ",", "109999", ",", "110199", ",", "110397", ",", 
   "110611", ",", "110827", ",", "111041", ",", "111251", ",", "111461", ",", 
   "111665", ",", "111855", ",", "112043", ",", "112241", ",", "112441", ",", 
   "112621", ",", "112791", ",", "112961", ",", "113151", ",", "113331", ",", 
   "113507", ",", "113681", ",", "113859", ",", "114029", ",", "114189", ",", 
   "114357", ",", "114497", ",", "114637", ",", "114775", ",", "114933", ",", 
   "115089", ",", "115245", ",", "115401", ",", "115563", ",", "115723", ",", 
   "115909", ",", "116107", ",", "116305", ",", "116503", ",", "116683", ",", 
   "116859", ",", "117037", ",", "117213", ",", "117381", ",", "117561", ",", 
   "117743", ",", "117917", ",", "118097", ",", "118281", ",", "118467", ",", 
   "118647", ",", "118825", ",", "118999", ",", "119175", ",", "119373", ",", 
   "119565", ",", "119733", ",", "119895", ",", "120061", ",", "120227", ",", 
   "120397", ",", "120571", ",", "120753", ",", "120937", ",", "121117", ",", 
   "121285", ",", "121453", ",", "121621", ",", "121787", ",", "121945", ",", 
   "122107", ",", "122251", ",", "122407", ",", "122567", ",", "122741", ",", 
   "122889", ",", "123045", ",", "123207", ",", "123387", ",", "123567", ",", 
   "123761", ",", "123951", ",", "124153", ",", "124351", ",", "124551", ",", 
   "124749", ",", "124951", ",", "125161", ",", "125373", ",", "125585", ",", 
   "125805", ",", "126017", ",", "126237", ",", "126453", ",", "126671", ",", 
   "126879", ",", "127085", ",", "127289", ",", "127487", ",", "127669", ",", 
   "127855", ",", "128045", ",", "128233", ",", "128407", ",", "128581", ",", 
   "128755", ",", "128929", ",", "129105", ",", "129285", ",", "129469", ",", 
   "129653", ",", "129833", ",", "130013", ",", "130189", ",", "130363", ",", 
   "130541", ",", "130711", ",", "130889", ",", "131063", ",", "131235", ",", 
   "131401", ",", "131565", ",", "131711", ",", "131865", ",", "132021", ",", 
   "132171", ",", "132321", ",", "132473", ",", "132623", ",", "132765", ",", 
   "132905", ",", "133063", ",", "133221", ",", "133399", ",", "133573", ",", 
   "133755", ",", "133929", ",", "134109", ",", "134289", ",", "134493", ",", 
   "134699", ",", "134917", ",", "135131", ",", "135341", ",", "135551", ",", 
   "135761", ",", "135971", ",", "136181", ",", "136389", ",", "136609", ",", 
   "136827", ",", "137049", ",", "137265", ",", "137491", ",", "137701", ",", 
   "137911", ",", "138115", ",", "138321", ",", "138529", ",", "138729", ",", 
   "138909", ",", "139083", ",", "139245", ",", "139413", ",", "139593", ",", 
   "139767", ",", "139959", ",", "140151", ",", "140353", ",", "140553", ",", 
   "140745", ",", "140931", ",", "141115", ",", "141301", ",", "141475", ",", 
   "141645", ",", "141817", ",", "141985", ",", "142163", ",", "142337", ",", 
   "142515", ",", "142685", ",", "142865", ",", "143055", ",", "143243", ",", 
   "143421", ",", "143601", ",", "143787", ",", "143973", ",", "144153", ",", 
   "144333", ",", "144509", ",", "144687", ",", "144861", ",", "145021", ",", 
   "145185", ",", "145353", ",", "145521", ",", "145693", ",", "145855", ",", 
   "146019", ",", "146189", ",", "146361", ",", "146535", ",", "146705", ",", 
   "146877", ",", "147069", ",", "147261", ",", "147435", ",", "147613", ",", 
   "147783", ",", "147973", ",", "148165", ",", "148371", ",", "148581", ",", 
   "148791", ",", "149007", ",", "149221", ",", "149433", ",", "149639", ",", 
   "149849", ",", "150059", ",", "150263", ",", "150467", ",", "150663", ",", 
   "150877", ",", "151095", ",", "151299", ",", "151499", ",", "151699", ",", 
   "151903", ",", "152107", ",", "152305", ",", "152497", ",", "152689", ",", 
   "152895", ",", "153113", ",", "153323", ",", "153545", ",", "153783", ",", 
   "154021", ",", "154251", ",", "154491", ",", "154729", ",", "154969", ",", 
   "155205", ",", "155421", ",", "155631", ",", "155841", ",", "156055", ",", 
   "156263", ",", "156469", ",", "156677", ",", "156875", ",", "157073", ",", 
   "157263", ",", "157431", ",", "157593", ",", "157753", ",", "157903", ",", 
   "158041", ",", "158175", ",", "158319", ",", "158449", ",", "158589", ",", 
   "158741", ",", "158895", ",", "159045", ",", "159207", ",", "159363", ",", 
   "159521", ",", "159679", ",", "159833", ",", "159991", ",", "160147", ",", 
   "160315", ",", "160479", ",", "160645", ",", "160813", ",", "160989", ",", 
   "161163", ",", "161333", ",", "161531", ",", "161721", ",", "161931", ",", 
   "162133", ",", "162323", ",", "162521", ",", "162725", ",", "162923", ",", 
   "163123", ",", "163319", ",", "163511", ",", "163703", ",", "163905", ",", 
   "164109", ",", "164311", ",", "164515", ",", "164721", ",", "164917", ",", 
   "165113", ",", "165307", ",", "165511", ",", "165715", ",", "165931", ",", 
   "166125", ",", "166319", ",", "166529", ",", "166741", ",", "166947", ",", 
   "167149", ",", "167357", ",", "167567", ",", "167777", ",", "167987", ",", 
   "168187", ",", "168391", ",", "168589", ",", "168785", ",", "168999", ",", 
   "169223", ",", "169441", ",", "169661", ",", "169877", ",", "170075", ",", 
   "170275", ",", "170483", ",", "170687", ",", "170879", ",", "171059", ",", 
   "171237", ",", "171411", ",", "171593", ",", "171775", ",", "171959", ",", 
   "172153", ",", "172343", ",", "172525", ",", "172705", ",", "172893", ",", 
   "173063", ",", "173231", ",", "173417", ",", "173609", ",", "173799", ",", 
   "173985", ",", "174163", ",", "174333", ",", "174531", ",", "174723", ",", 
   "174919", ",", "175113", ",", "175313", ",", "175497", ",", "175689", ",", 
   "175883", ",", "176097", ",", "176319", ",", "176547", ",", "176777", ",", 
   "177003", ",", "177225", ",", "177439", ",", "177649", ",", "177859", ",", 
   "178071", ",", "178291", ",", "178503", ",", "178723", ",", "178927", ",", 
   "179131", ",", "179331", ",", "179541", ",", "179745", ",", "179961", ",", 
   "180169", ",", "180379", ",", "180559", ",", "180735", ",", "180907", ",", 
   "181079", ",", "181249", ",", "181423", ",", "181599", ",", "181767", ",", 
   "181931", ",", "182091", ",", "182241", ",", "182395", ",", "182547", ",", 
   "182703", ",", "182859", ",", "183033", ",", "183199", ",", "183371", ",", 
   "183529", ",", "183691", ",", "183851", ",", "184009", ",", "184169", ",", 
   "184337", ",", "184501", ",", "184661", ",", "184835", ",", "185009", ",", 
   "185201", ",", "185393", ",", "185585", ",", "185779", ",", "185977", ",", 
   "186179", ",", "186369", ",", "186557", ",", "186753", ",", "186947", ",", 
   "187135", ",", "187325", ",", "187507", ",", "187699", ",", "187901", ",", 
   "188095", ",", "188283", ",", "188479", ",", "188679", ",", "188883", ",", 
   "189093", ",", "189279", ",", "189477", ",", "189677", ",", "189873", ",", 
   "190073", ",", "190267", ",", "190459", ",", "190661", ",", "190843", ",", 
   "191029", ",", "191221", ",", "191413", ",", "191609", ",", "191801", ",", 
   "191987", ",", "192183", ",", "192375", ",", "192573", ",", "192783", ",", 
   "192973", ",", "193153", ",", "193337", ",", "193521", ",", "193707", ",", 
   "193893", ",", "194079", ",", "194263", ",", "194445", ",", "194621", ",", 
   "194811", ",", "195001", ",", "195193", ",", "195387", ",", "195581", ",", 
   "195773", ",", "195965", ",", "196147", ",", "196337", ",", "196513", ",", 
   "196673", ",", "196831", ",", "197009", ",", "197179", ",", "197335", ",", 
   "197489", ",", "197645", ",", "197799", ",", "197955", ",", "198123", ",", 
   "198295", ",", "198457", ",", "198619", ",", "198775", ",", "198929", ",", 
   "199113", ",", "199301", ",", "199495", ",", "199693", ",", "199885", ",", 
   "200081", ",", "200275", ",", "200479", ",", "200667", ",", "200865", ",", 
   "201075", ",", "201281", ",", "201491", ",", "201697", ",", "201919", ",", 
   "202129", ",", "202341", ",", "202547", ",", "202751", ",", "202953", ",", 
   "203169", ",", "203351", ",", "203531", ",", "203705", ",", "203877", ",", 
   "204057", ",", "204239", ",", "204425", ",", "204611", ",", "204795", ",", 
   "204973", ",", "205147", ",", "205325", ",", "205495", ",", "205669", ",", 
   "205833", ",", "205999", ",", "206167", ",", "206335", ",", "206515", ",", 
   "206695", ",", "206859", ",", "207031", ",", "207199", ",", "207379", ",", 
   "207561", ",", "207765", ",", "207963", ",", "208183", ",", "208393", ",", 
   "208621", ",", "208849", ",", "209067", ",", "209289", ",", "209521", ",", 
   "209743", ",", "209959", ",", "210175", ",", "210385", ",", "210611", ",", 
   "210827", ",", "211039", ",", "211259", ",", "211477", ",", "211691", ",", 
   "211893", ",", "212097", ",", "212271", ",", "212455", ",", "212629", ",", 
   "212813", ",", "212995", ",", "213175", ",", "213359", ",", "213539", ",", 
   "213715", ",", "213893", ",", "214067", ",", "214253", ",", "214443", ",", 
   "214613", ",", "214787", ",", "214967", ",", "215147", ",", "215321", ",", 
   "215495", ",", "215669", ",", "215849", ",", "216037", ",", "216235", ",", 
   "216423", ",", "216627", ",", "216813", ",", "216999", ",", "217199", ",", 
   "217397", ",", "217589", ",", "217781", ",", "217985", ",", "218183", ",", 
   "218381", ",", "218579", ",", "218779", ",", "218987", ",", "219187", ",", 
   "219413", ",", "219643", ",", "219889", ",", "220129", ",", "220361", ",", 
   "220577", ",", "220791", ",", "220991", ",", "221193", ",", "221399", ",", 
   "221597", ",", "221797", ",", "222001", ",", "222205", ",", "222415", ",", 
   "222619", ",", "222829", ",", "223039", ",", "223249", ",", "223449", ",", 
   "223651", ",", "223831", ",", "224017", ",", "224199", ",", "224383", ",", 
   "224571", ",", "224763", ",", "224981", ",", "225191", ",", "225407", ",", 
   "225621", ",", "225829", ",", "226033", ",", "226237", ",", "226453", ",", 
   "226655", ",", "226855", ",", "227049", ",", "227247", ",", "227461", ",", 
   "227671", ",", "227887", ",", "228105", ",", "228325", ",", "228533", ",", 
   "228739", ",", "228943", ",", "229147", ",", "229343", ",", "229553", ",", 
   "229763", ",", "229969", ",", "230179", ",", "230389", ",", "230605", ",", 
   "230809", ",", "231013", ",", "231235", ",", "231449", ",", "231659", ",", 
   "231853", ",", "232063", ",", "232273", ",", "232477", ",", "232675", ",", 
   "232869", ",", "233059", ",", "233263", ",", "233473", ",", "233685", ",", 
   "233881", ",", "234075", ",", "234273", ",", "234465", ",", "234667", ",", 
   "234863", ",", "235063", ",", "235269", ",", "235467", ",", "235667", ",", 
   "235869", ",", "236067", ",", "236269", ",", "236463", ",", "236671", ",", 
   "236883", ",", "237103", ",", "237325", ",", "237539", ",", "237749", ",", 
   "237947", ",", "238147", ",", "238343", ",", "238553", ",", "238763", ",", 
   "238973", ",", "239183", ",", "239387", ",", "239585", ",", "239777", ",", 
   "239979", ",", "240185", ",", "240405", ",", "240605", ",", "240831", ",", 
   "241049", ",", "241259", ",", "241463", ",", "241681", ",", "241891", ",", 
   "242101", ",", "242321", ",", "242555", ",", "242789", ",", "243011", ",", 
   "243239", ",", "243457", ",", "243685", ",", "243913", ",", "244147", ",", 
   "244387", ",", "244645", ",", "244897", ",", "245131", ",", "245369", ",", 
   "245591", ",", "245811", ",", "246031", ",", "246255", ",", "246465", ",", 
   "246675", ",", "246875", ",", "247057", ",", "247243", ",", "247429", ",", 
   "247627", ",", "247825", ",", "248027", ",", "248219", ",", "248423", ",", 
   "248619", ",", "248809", ",", "248971", ",", "249133", ",", "249303", ",", 
   "249473", ",", "249641", ",", "249805", ",", "249973", ",", "250139", ",", 
   "250319", ",", "250499", ",", "250703", ",", "250905", ",", "251085", ",", 
   "251267", ",", "251451", ",", "251627", ",", "251821", ",", "252013", ",", 
   "252197", ",", "252379", ",", "252559", ",", "252739", ",", "252941", ",", 
   "253137", ",", "253335", ",", "253527", ",", "253719", ",", "253935", ",", 
   "254151", ",", "254355", ",", "254571", ",", "254773", ",", "254973", ",", 
   "255181", ",", "255385", ",", "255577", ",", "255773", ",", "255953", ",", 
   "256133", ",", "256315", ",", "256507", ",", "256717", ",", "256927", ",", 
   "257127", ",", "257325", ",", "257541", ",", "257757", ",", "257973", ",", 
   "258167", ",", "258365", ",", "258563", ",", "258749", ",", "258931", ",", 
   "259123", ",", "259309", ",", "259507", ",", "259701", ",", "259905", ",", 
   "260107", ",", "260313", ",", "260515", ",", "260711", ",", "260891", ",", 
   "261073", ",", "261247", ",", "261427", ",", "261593", ",", "261757", ",", 
   "261925", ",", "262087", ",", "262255", ",", "262423", ",", "262593", ",", 
   "262761", ",", "262929", ",", "263103", ",", "263265", ",", "263427", ",", 
   "263591", ",", "263753", ",", "263913", ",", "264075", ",", "264237", ",", 
   "264405", ",", "264583", ",", "264763", ",", "264939", ",", "265113", ",", 
   "265293", ",", "265485", ",", "265675", ",", "265863", ",", "266049", ",", 
   "266247", ",", "266449", ",", "266647", ",", "266845", ",", "267053", ",", 
   "267257", ",", "267449", ",", "267649", ",", "267855", ",", "268091", ",", 
   "268325", ",", "268553", ",", "268771", ",", "268985", ",", "269199", ",", 
   "269405", ",", "269607", ",", "269809", ",", "270019", ",", "270221", ",", 
   "270425", ",", "270617", ",", "270805", ",", "270989", ",", "271181", ",", 
   "271363", ",", "271547", ",", "271727", ",", "271919", ",", "272103", ",", 
   "272257", ",", "272413", ",", "272577", ",", "272763", ",", "272951", ",", 
   "273137", ",", "273327", ",", "273525", ",", "273711", ",", "273905", ",", 
   "274097", ",", "274289", ",", "274479", ",", "274671", ",", "274865", ",", 
   "275047", ",", "275231", ",", "275441", ",", "275651", ",", "275847", ",", 
   "276051", ",", "276257", ",", "276467", ",", "276671", ",", "276869", ",", 
   "277067", ",", "277273", ",", "277477", ",", "277683", ",", "277887", ",", 
   "278077", ",", "278265", ",", "278473", ",", "278691", ",", "278917", ",", 
   "279139", ",", "279367", ",", "279597", ",", "279801", ",", "280023", ",", 
   "280245", ",", "280461", ",", "280675", ",", "280885", ",", "281095", ",", 
   "281291", ",", "281493", ",", "281697", ",", "281907", ",", "282117", ",", 
   "282339", ",", "282569", ",", "282807", ",", "283031", ",", "283247", ",", 
   "283463", ",", "283683", ",", "283899", ",", "284115", ",", "284343", ",", 
   "284571", ",", "284799", ",", "285023", ",", "285247", ",", "285469", ",", 
   "285685", ",", "285895", ",", "286105", ",", "286303", ",", "286501", ",", 
   "286687", ",", "286863", ",", "287047", ",", "287227", ",", "287395", ",", 
   "287561", ",", "287729", ",", "287899", ",", "288071", ",", "288245", ",", 
   "288425", ",", "288587", ",", "288749", ",", "288927", ",", "289113", ",", 
   "289299", ",", "289485", ",", "289671", ",", "289863", ",", "290055", ",", 
   "290241", ",", "290431", ",", "290623", ",", "290803", ",", "290979", ",", 
   "291183", ",", "291387", ",", "291603", ",", "291813", ",", "292023", ",", 
   "292227", ",", "292427", ",", "292629", ",", "292839", ",", "293037", ",", 
   "293235", ",", "293439", ",", "293643", ",", "293847", ",", "294053", ",", 
   "294293", ",", "294535", ",", "294775", ",", "295013", ",", "295255", ",", 
   "295499", ",", "295733", ",", "295973", ",", "296197", ",", "296441", ",", 
   "296681", ",", "296921", ",", "297173", ",", "297433", ",", "297685", ",", 
   "297949", ",", "298201", ",", "298447", ",", "298705", ",", "298965", ",", 
   "299227", ",", "299471", ",", "299711", ",", "299959", ",", "300207", ",", 
   "300445", ",", "300687", ",", "300913", ",", "301137", ",", "301353", ",", 
   "301557", ",", "301757", ",", "301967", ",", "302165", ",", "302361", ",", 
   "302561", ",", "302759", ",", "302969", ",", "303179", ",", "303381", ",", 
   "303583", ",", "303765", ",", "303935", ",", "304107", ",", "304269", ",", 
   "304453", ",", "304635", ",", "304837", ",", "305041", ",", "305239", ",", 
   "305435", ",", "305627", ",", "305831", ",", "306027", ",", "306217", ",", 
   "306411", ",", "306607", ",", "306801", ",", "306985", ",", "307171", ",", 
   "307359", ",", "307547", ",", "307737", ",", "307927", ",", "308119", ",", 
   "308315", ",", "308491", ",", "308669", ",", "308827", ",", "308983", ",", 
   "309151", ",", "309331", ",", "309513", ",", "309687", ",", "309861", ",", 
   "310035", ",", "310203", ",", "310371", ",", "310527", ",", "310689", ",", 
   "310853", ",", "311013", ",", "311173", ",", "311355", ",", "311537", ",", 
   "311723", ",", "311911", ",", "312095", ",", "312281", ",", "312471", ",", 
   "312671", ",", "312887", ",", "313091", ",", "313301", ",", "313527", ",", 
   "313757", ",", "313987", ",", "314213", ",", "314429", ",", "314651", ",", 
   "314873", ",", "315093", ",", "315323", ",", "315557", ",", "315771", ",", 
   "315981", ",", "316191", ",", "316405", ",", "316627", ",", "316857", ",", 
   "317081", ",", "317297", ",", "317501", ",", "317711", ",", "317913", ",", 
   "318101", ",", "318299", ",", "318489", ",", "318681", ",", "318869", ",", 
   "319055", ",", "319241", ",", "319423", ",", "319601", ",", "319777", ",", 
   "319953", ",", "320133", ",", "320313", ",", "320483", ",", "320659", ",", 
   "320831", ",", "320999", ",", "321173", ",", "321333", ",", "321489", ",", 
   "321647", ",", "321807", ",", "321961", ",", "322125", ",", "322295", ",", 
   "322467", ",", "322641", ",", "322815", ",", "322993", ",", "323167", ",", 
   "323353", ",", "323537", ",", "323729", ",", "323927", ",", "324137", ",", 
   "324339", ",", "324539", ",", "324747", ",", "324955", ",", "325161", ",", 
   "325379", ",", "325595", ",", "325813", ",", "326029", ",", "326243", ",", 
   "326447", ",", "326651", ",", "326849", ",", "327049", ",", "327249", ",", 
   "327447", ",", "327633", ",", "327819", ",", "328035", ",", "328239", ",", 
   "328431", ",", "328617", ",", "328797", ",", "328977", ",", "329157", ",", 
   "329341", ",", "329513", ",", "329693", ",", "329865", ",", "330033", ",", 
   "330195", ",", "330361", ",", "330531", ",", "330705", ",", "330903", ",", 
   "331113", ",", "331323", ",", "331531", ",", "331737", ",", "331911", ",", 
   "332087", ",", "332267", ",", "332449", ",", "332633", ",", "332821", ",", 
   "333019", ",", "333223", ",", "333423", ",", "333627", ",", "333837", ",", 
   "334047", ",", "334277", ",", "334525", ",", "334769", ",", "335009", ",", 
   "335217", ",", "335409", ",", "335601", ",", "335801", ",", "336003", ",", 
   "336199", ",", "336395", ",", "336593", ",", "336801", ",", "337017", ",", 
   "337221", ",", "337445", ",", "337661", ",", "337877", ",", "338079", ",", 
   "338295", ",", "338511", ",", "338707", ",", "338881", ",", "339069", ",", 
   "339259", ",", "339459", ",", "339663", ",", "339891", ",", "340123", ",", 
   "340365", ",", "340607", ",", "340853", ",", "341103", ",", "341339", ",", 
   "341569", ",", "341809", ",", "342037", ",", "342267", ",", "342499", ",", 
   "342733", ",", "342949", ",", "343173", ",", "343395", ",", "343617", ",", 
   "343845", ",", "344073", ",", "344293", ",", "344513", ",", "344731", ",", 
   "344941", ",", "345155", ",", "345369", ",", "345581", ",", "345787", ",", 
   "345997", ",", "346231", ",", "346457", ",", "346665", ",", "346879", ",", 
   "347091", ",", "347313", ",", "347531", ",", "347741", ",", "347951", ",", 
   "348171", ",", "348385", ",", "348597", ",", "348809", ",", "349019", ",", 
   "349229", ",", "349441", ",", "349641", ",", "349847", ",", "350049", ",", 
   "350269", ",", "350507", ",", "350727", ",", "350949", ",", "351161", ",", 
   "351373", ",", "351611", ",", "351841", ",", "352073", ",", "352305", ",", 
   "352545", ",", "352775", ",", "353005", ",", "353239", ",", "353471", ",", 
   "353705", ",", "353919", ",", "354141", ",", "354373", ",", "354595", ",", 
   "354819", ",", "355025", ",", "355225", ",", "355423", ",", "355621", ",", 
   "355819", ",", "356009", ",", "356179", ",", "356347", ",", "356517", ",", 
   "356705", ",", "356897", ",", "357093", ",", "357279", ",", "357469", ",", 
   "357661", ",", "357861", ",", "358077", ",", "358281", ",", "358485", ",", 
   "358693", ",", "358897", ",", "359107", ",", "359303", ",", "359491", ",", 
   "359695", ",", "359905", ",", "360129", ",", "360379", ",", "360625", ",", 
   "360871", ",", "361111", ",", "361339", ",", "361567", ",", "361793", ",", 
   "362017", ",", "362245", ",", "362467", ",", "362685", ",", "362901", ",", 
   "363105", ",", "363305", ",", "363507", ",", "363705", ",", "363915", ",", 
   "364125", ",", "364325", ",", "364529", ",", "364721", ",", "364897", ",", 
   "365075", ",", "365253", ",", "365419", ",", "365587", ",", "365751", ",", 
   "365915", ",", "366083", ",", "366251", ",", "366431", ",", "366605", ",", 
   "366791", ",", "366977", ",", "367167", ",", "367355", ",", "367551", ",", 
   "367733", ",", "367923", ",", "368115", ",", "368299", ",", "368507", ",", 
   "368699", ",", "368897", ",", "369101", ",", "369301", ",", "369519", ",", 
   "369741", ",", "369973", ",", "370201", ",", "370429", ",", "370639", ",", 
   "370849", ",", "371063", ",", "371279", ",", "371491", ",", "371717", ",", 
   "371947", ",", "372185", ",", "372415", ",", "372643", ",", "372879", ",", 
   "373103", ",", "373335", ",", "373569", ",", "373797", ",", "374025", ",", 
   "374239", ",", "374449", ",", "374649", ",", "374851", ",", "375061", ",", 
   "375271", ",", "375481", ",", "375675", ",", "375867", ",", "376063", ",", 
   "376245", ",", "376431", ",", "376635", ",", "376839", ",", "377035", ",", 
   "377221", ",", "377399", ",", "377569", ",", "377743", ",", "377923", ",", 
   "378109", ",", "378307", ",", "378505", ",", "378703", ",", "378895", ",", 
   "379071", ",", "379255", ",", "379433", ",", "379625", ",", "379825", ",", 
   "380029", ",", "380239", ",", "380437", ",", "380613", ",", "380793", ",", 
   "380975", ",", "381159", ",", "381351", ",", "381543", ",", "381723", ",", 
   "381903", ",", "382093", ",", "382263", ",", "382443", ",", "382623", ",", 
   "382803", ",", "382983", ",", "383169", ",", "383361", ",", "383545", ",", 
   "383731", ",", "383911", ",", "384091", ",", "384277", ",", "384461", ",", 
   "384651", ",", "384849", ",", "385049", ",", "385237", ",", "385427", ",", 
   "385621", ",", "385809", ",", "385983", ",", "386175", ",", "386367", ",", 
   "386563", ",", "386769", ",", "386977", ",", "387171", ",", "387369", ",", 
   "387557", ",", "387743", ",", "387955", ",", "388163", ",", "388359", ",", 
   "388575", ",", "388799", ",", "389033", ",", "389271", ",", "389511", ",", 
   "389759", ",", "390009", ",", "390265", ",", "390523", ",", "390773", ",", 
   "391023", ",", "391269", ",", "391509", ",", "391761", ",", "392025", ",", 
   "392279", ",", "392535", ",", "392785", ",", "393041", ",", "393313", ",", 
   "393589", ",", "393871", ",", "394145", ",", "394397", ",", "394643", ",", 
   "394883", ",", "395139", ",", "395397", ",", "395657", ",", "395917", ",", 
   "396187", ",", "396453", ",", "396717", ",", "396991", ",", "397255", ",", 
   "397519", ",", "397795", ",", "398071", ",", "398347", ",", "398589", ",", 
   "398817", ",", "399069", ",", "399309", ",", "399539", ",", "399783", ",", 
   "400029", ",", "400291", ",", "400527", ",", "400775", ",", "401013", ",", 
   "401247", ",", "401465", ",", "401687", ",", "401911", ",", "402129", ",", 
   "402351", ",", "402567", ",", "402771", ",", "402987", ",", "403209", ",", 
   "403437", ",", "403669", ",", "403881", ",", "404115", ",", "404353", ",", 
   "404577", ",", "404801", ",", "405011", ",", "405231", ",", "405441", ",", 
   "405651", ",", "405861", ",", "406069", ",", "406267", ",", "406463", ",", 
   "406655", ",", "406843", ",", "407033", ",", "407223", ",", "407403", ",", 
   "407573", ",", "407741", ",", "407905", ",", "408061", ",", "408189", ",", 
   "408317", ",", "408467", ",", "408621", ",", "408773", ",", "408923", ",", 
   "409065", ",", "409215", ",", "409369", ",", "409525", ",", "409693", ",", 
   "409863", ",", "410031", ",", "410245", ",", "410469", ",", "410693", ",", 
   "410921", ",", "411149", ",", "411381", ",", "411615", ",", "411853", ",", 
   "412091", ",", "412335", ",", "412557", ",", "412775", ",", "412995", ",", 
   "413219", ",", "413453", ",", "413683", ",", "413919", ",", "414155", ",", 
   "414399", ",", "414639", ",", "414883", ",", "415083", ",", "415269", ",", 
   "415471", ",", "415665", ",", "415879", ",", "416089", ",", "416299", ",", 
   "416509", ",", "416719", ",", "416929", ",", "417139", ",", "417353", ",", 
   "417569", ",", "417783", ",", "417983", ",", "418179", ",", "418377", ",", 
   "418579", ",", "418761", ",", "418947", ",", "419141", ",", "419331", ",", 
   "419527", ",", "419709", ",", "419907", ",", "420095", ",", "420283", ",", 
   "420469", ",", "420649", ",", "420823", ",", "420991", ",", "421171", ",", 
   "421345", ",", "421515", ",", "421685", ",", "421865", ",", "422045", ",", 
   "422217", ",", "422397", ",", "422593", ",", "422795", ",", "422981", ",", 
   "423179", ",", "423377", ",", "423575", ",", "423773", ",", "423969", ",", 
   "424185", ",", "424399", ",", "424615", ",", "424833", ",", "425051", ",", 
   "425261", ",", "425471", ",", "425681", ",", "425889", ",", "426105", ",", 
   "426321", ",", "426537", ",", "426743", ",", "426935", ",", "427135", ",", 
   "427343", ",", "427537", ",", "427753", ",", "427963", ",", "428159", ",", 
   "428369", ",", "428555", ",", "428749", ",", "428949", ",", "429151", ",", 
   "429353", ",", "429551", ",", "429757", ",", "429991", ",", "430221", ",", 
   "430443", ",", "430677", ",", "430917", ",", "431151", ",", "431403", ",", 
   "431653", ",", "431905", ",", "432169", ",", "432409", ",", "432649", ",", 
   "432897", ",", "433133", ",", "433371", ",", "433599", ",", "433819", ",", 
   "434035", ",", "434257", ",", "434479", ",", "434705", ",", "434919", ",", 
   "435129", ",", "435367", ",", "435597", ",", "435831", ",", "436069", ",", 
   "436293", ",", "436509", ",", "436715", ",", "436911", ",", "437115", ",", 
   "437325", ",", "437533", ",", "437737", ",", "437949", ",", "438163", ",", 
   "438391", ",", "438615", ",", "438845", ",", "439083", ",", "439307", ",", 
   "439517", ",", "439727", ",", "439901", ",", "440075", ",", "440261", ",", 
   "440443", ",", "440623", ",", "440815", ",", "441017", ",", "441221", ",", 
   "441421", ",", "441631", ",", "441835", ",", "442037", ",", "442235", ",", 
   "442435", ",", "442623", ",", "442819", ",", "443005", ",", "443185", ",", 
   "443365", ",", "443559", ",", "443761", ",", "443965", ",", "444181", ",", 
   "444391", ",", "444607", ",", "444823", ",", "445047", ",", "445263", ",", 
   "445475", ",", "445677", ",", "445879", ",", "446083", ",", "446311", ",", 
   "446533", ",", "446753", ",", "446975", ",", "447193", ",", "447407", ",", 
   "447623", ",", "447849", ",", "448071", ",", "448317", ",", "448571", ",", 
   "448811", ",", "449033", ",", "449249", ",", "449465", ",", "449655", ",", 
   "449855", ",", "450057", ",", "450257", ",", "450445", ",", "450655", ",", 
   "450837", ",", "451021", ",", "451207", ",", "451393", ",", "451583", ",", 
   "451771", ",", "451963", ",", "452145", ",", "452323", ",", "452469", ",", 
   "452605", ",", "452765", ",", "452923", ",", "453091", ",", "453265", ",", 
   "453445", ",", "453629", ",", "453821", ",", "454025", ",", "454233", ",", 
   "454415", ",", "454607", ",", "454801", ",", "454999", ",", "455195", ",", 
   "455395", ",", "455605", ",", "455809", ",", "456025", ",", "456235", ",", 
   "456461", ",", "456685", ",", "456889", ",", "457099", ",", "457301", ",", 
   "457499", ",", "457697", ",", "457889", ",", "458087", ",", "458289", ",", 
   "458489", ",", "458693", ",", "458903", ",", "459123", ",", "459347", ",", 
   "459571", ",", "459787", ",", "460001", ",", "460225", ",", "460439", ",", 
   "460655", ",", "460855", ",", "461065", ",", "461277", ",", "461485", ",", 
   "461695", ",", "461903", ",", "462113", ",", "462313", ",", "462511", ",", 
   "462693", ",", "462879", ",", "463065", ",", "463237", ",", "463407", ",", 
   "463569", ",", "463729", ",", "463885", ",", "464043", ",", "464205", ",", 
   "464367", ",", "464559", ",", "464767", ",", "464975", ",", "465183", ",", 
   "465389", ",", "465593", ",", "465793", ",", "465985", ",", "466183", ",", 
   "466377", ",", "466573", ",", "466793", ",", "467013", ",", "467247", ",", 
   "467469", ",", "467697", ",", "467931", ",", "468169", ",", "468407", ",", 
   "468651", ",", "468899", ",", "469117", ",", "469323", ",", "469533", ",", 
   "469743", ",", "469953", ",", "470177", ",", "470409", ",", "470657", ",", 
   "470907", ",", "471147", ",", "471389", ",", "471613", ",", "471835", ",", 
   "472041", ",", "472285", ",", "472523", ",", "472753", ",", "472993", ",", 
   "473223", ",", "473433", ",", "473643", ",", "473865", ",", "474091", ",", 
   "474313", ",", "474529", ",", "474745", ",", "474953", ",", "475159", ",", 
   "475349", ",", "475535", ",", "475731", ",", "475923", ",", "476107", ",", 
   "476305", ",", "476509", ",", "476679", ",", "476847", ",", "477033", ",", 
   "477207", ",", "477385", ",", "477595", ",", "477803", ",", "477995", ",", 
   "478187", ",", "478373", ",", "478577", ",", "478785", ",", "478997", ",", 
   "479217", ",", "479439", ",", "479673", ",", "479897", ",", "480129", ",", 
   "480371", ",", "480605", ",", "480839", ",", "481073", ",", "481307", ",", 
   "481527", ",", "481745", ",", "481967", ",", "482155", ",", "482349", ",", 
   "482545", ",", "482733", ",", "482919", ",", "483089", ",", "483263", ",", 
   "483429", ",", "483591", ",", "483765", ",", "483935", ",", "484115", ",", 
   "484301", ",", "484475", ",", "484645", ",", "484823", ",", "485003", ",", 
   "485183", ",", "485359", ",", "485539", ",", "485727", ",", "485937", ",", 
   "486153", ",", "486375", ",", "486607", ",", "486837", ",", "487063", ",", 
   "487293", ",", "487527", ",", "487755", ",", "487971", ",", "488179", ",", 
   "488393", ",", "488603", ",", "488807", ",", "489033", ",", "489261", ",", 
   "489495", ",", "489741", ",", "489997", ",", "490261", ",", "490531", ",", 
   "490789", ",", "491051", ",", "491309", ",", "491557", ",", "491813", ",", 
   "492073", ",", "492323", ",", "492565", ",", "492805", ",", "493053", ",", 
   "493307", ",", "493549", ",", "493783", ",", "494021", ",", "494245", ",", 
   "494455", ",", "494653", ",", "494839", ",", "495043", ",", "495239", ",", 
   "495413", ",", "495581", ",", "495737", ",", "495889", ",", "496069", ",", 
   "496261", ",", "496447", ",", "496633", ",", "496823", ",", "497017", ",", 
   "497203", ",", "497383", ",", "497573", ",", "497771", ",", "497975", ",", 
   "498171", ",", "498371", ",", "498573", ",", "498773", ",", "498967", ",", 
   "499167", ",", "499369", ",", "499571", ",", "499771", ",", "499975", ",", 
   "500155", ",", "500323", ",", "500491", ",", "500661", ",", "500837", ",", 
   "501033", ",", "501237", ",", "501441", ",", "501633", ",", "501825", ",", 
   "502013", ",", "502201", ",", "502393", ",", "502585", ",", "502781", ",", 
   "502967", ",", "503147", ",", "503335", ",", "503527", ",", "503717", ",", 
   "503907", ",", "504099", ",", "504287", ",", "504479", ",", "504669", ",", 
   "504849", ",", "505005", ",", "505155", ",", "505311", ",", "505467", ",", 
   "505625", ",", "505793", ",", "505965", ",", "506127", ",", "506301", ",", 
   "506475", ",", "506655", ",", "506835", ",", "507013", ",", "507189", ",", 
   "507363", ",", "507561", ",", "507787", ",", "508019", ",", "508253", ",", 
   "508505", ",", "508767", ",", "509027", ",", "509285", ",", "509543", ",", 
   "509813", ",", "510075", ",", "510325", ",", "510567", ",", "510825", ",", 
   "511071", ",", "511337", ",", "511587", ",", "511839", ",", "512099", ",", 
   "512361", ",", "512627", ",", "512873", ",", "513089", ",", "513307", ",", 
   "513521", ",", "513733", ",", "513955", ",", "514193", ",", "514437", ",", 
   "514677", ",", "514929", ",", "515187", ",", "515445", ",", "515707", ",", 
   "515959", ",", "516213", ",", "516453", ",", "516713", ",", "516981", ",", 
   "517245", ",", "517503", ",", "517767", ",", "518033", ",", "518299", ",", 
   "518561", ",", "518831", ",", "519101", ",", "519355", ",", "519595", ",", 
   "519831", ",", "520077", ",", "520307", ",", "520543", ",", "520783", ",", 
   "521019", ",", "521251", ",", "521497", ",", "521741", ",", "521975", ",", 
   "522197", ",", "522411", ",", "522623", ",", "522831", ",", "523051", ",", 
   "523283", ",", "523507", ",", "523723", ",", "523939", ",", "524165", ",", 
   "524401", ",", "524639", ",", "524873", ",", "525101", ",", "525315", ",", 
   "525525", ",", "525753", ",", "525983", ",", "526203", ",", "526419", ",", 
   "526623", ",", "526835", ",", "527047", ",", "527287", ",", "527527", ",", 
   "527751", ",", "527963", ",", "528177", ",", "528393", ",", "528597", ",", 
   "528825", ",", "529041", ",", "529251", ",", "529449", ",", "529653", ",", 
   "529871", ",", "530087", ",", "530289", ",", "530493", ",", "530697", ",", 
   "530901", ",", "531121", ",", "531347", ",", "531569", ",", "531773", ",", 
   "531983", ",", "532193", ",", "532403", ",", "532613", ",", "532823", ",", 
   "533031", ",", "533201", ",", "533421", ",", "533651", ",", "533883", ",", 
   "534123", ",", "534361", ",", "534597", ",", "534831", ",", "535063", ",", 
   "535297", ",", "535527", ",", "535745", ",", "535957", ",", "536179", ",", 
   "536395", ",", "536599", ",", "536809", ",", "537023", ",", "537239", ",", 
   "537455", ",", "537679", ",", "537911", ",", "538105", ",", "538301", ",", 
   "538501", ",", "538687", ",", "538869", ",", "539053", ",", "539241", ",", 
   "539445", ",", "539643", ",", "539841", ",", "540051", ",", "540271", ",", 
   "540485", ",", "540695", ",", "540919", ",", "541135", ",", "541357", ",", 
   "541587", ",", "541821", ",", "542047", ",", "542275", ",", "542491", ",", 
   "542697", ",", "542899", ",", "543103", ",", "543313", ",", "543531", ",", 
   "543757", ",", "543963", ",", "544167", ",", "544383", ",", "544585", ",", 
   "544773", ",", "544967", ",", "545171", ",", "545387", ",", "545613", ",", 
   "545831", ",", "546039", ",", "546239", ",", "546439", ",", "546649", ",", 
   "546869", ",", "547091", ",", "547319", ",", "547545", ",", "547759", ",", 
   "547967", ",", "548173", ",", "548383", ",", "548607", ",", "548827", ",", 
   "549055", ",", "549277", ",", "549497", ",", "549707", ",", "549891", ",", 
   "550085", ",", "550275", ",", "550473", ",", "550677", ",", "550879", ",", 
   "551077", ",", "551271", ",", "551467", ",", "551667", ",", "551877", ",", 
   "552087", ",", "552297", ",", "552501", ",", "552709", ",", "552905", ",", 
   "553099", ",", "553287", ",", "553485", ",", "553683", ",", "553899", ",", 
   "554121", ",", "554325", ",", "554529", ",", "554733", ",", "554955", ",", 
   "555191", ",", "555413", ",", "555639", ",", "555873", ",", "556099", ",", 
   "556339", ",", "556579", ",", "556821", ",", "557061", ",", "557313", ",", 
   "557571", ",", "557823", ",", "558073", ",", "558317", ",", "558557", ",", 
   "558779", ",", "559001", ",", "559217", ",", "559433", ",", "559643", ",", 
   "559833", ",", "560007", ",", "560183", ",", "560369", ",", "560555", ",", 
   "560741", ",", "560915", ",", "561095", ",", "561275", ",", "561461", ",", 
   "561631", ",", "561799", ",", "561977", ",", "562153", ",", "562339", ",", 
   "562521", ",", "562711", ",", "562893", ",", "563083", ",", "563287", ",", 
   "563491", ",", "563709", ",", "563929", ",", "564145", ",", "564345", ",", 
   "564549", ",", "564753", ",", "564945", ",", "565143", ",", "565339", ",", 
   "565537", ",", "565741", ",", "565951", ",", "566151", ",", "566355", ",", 
   "566549", ",", "566745", ",", "566945", ",", "567155", ",", "567359", ",", 
   "567547", ",", "567747", ",", "567943", ",", "568171", ",", "568409", ",", 
   "568647", ",", "568877", ",", "569129", ",", "569377", ",", "569619", ",", 
   "569861", ",", "570101", ",", "570335", ",", "570557", ",", "570779", ",", 
   "571011", ",", "571267", ",", "571527", ",", "571797", ",", "572061", ",", 
   "572351", ",", "572649", ",", "572931", ",", "573215", ",", "573467", ",", 
   "573713", ",", "573965", ",", "574211", ",", "574451", ",", "574691", ",", 
   "574925", ",", "575175", ",", "575431", ",", "575683", ",", "575941", ",", 
   "576199", ",", "576451", ",", "576703", ",", "576949", ",", "577199", ",", 
   "577449", ",", "577683", ",", "577923", ",", "578167", ",", "578413", ",", 
   "578671", ",", "578925", ",", "579173", ",", "579417", ",", "579671", ",", 
   "579927", ",", "580179", ",", "580413", ",", "580635", ",", "580857", ",", 
   "581081", ",", "581307", ",", "581529", ",", "581727", ",", "581935", ",", 
   "582117", ",", "582299", ",", "582471", ",", "582633", ",", "582797", ",", 
   "582947", ",", "583085", ",", "583241", ",", "583395", ",", "583577", ",", 
   "583737", ",", "583901", ",", "584079", ",", "584255", ",", "584447", ",", 
   "584639", ",", "584823", ",", "585009", ",", "585197", ",", "585385", ",", 
   "585577", ",", "585781", ",", "585983", ",", "586199", ",", "586417", ",", 
   "586631", ",", "586859", ",", "587089", ",", "587311", ",", "587541", ",", 
   "587745", ",", "587949", ",", "588147", ",", "588339", ",", "588531", ",", 
   "588713", ",", "588921", ",", "589137", ",", "589365", ",", "589587", ",", 
   "589821", ",", "590049", ",", "590271", ",", "590499", ",", "590757", ",", 
   "591009", ",", "591261", ",", "591499", ",", "591739", ",", "591977", ",", 
   "592205", ",", "592437", ",", "592689", ",", "592941", ",", "593219", ",", 
   "593501", ",", "593781", ",", "594039", ",", "594287", ",", "594535", ",", 
   "594785", ",", "595023", ",", "595259", ",", "595503", ",", "595751", ",", 
   "595967", ",", "596187", ",", "596417", ",", "596645", ",", "596885", ",", 
   "597119", ",", "597357", ",", "597587", ",", "597797", ",", "598017", ",", 
   "598203", ",", "598389", ",", "598577", ",", "598765", ",", "598957", ",", 
   "599135", ",", "599321", ",", "599503", ",", "599683", ",", "599851", ",", 
   "600017", ",", "600173", ",", "600331", ",", "600479", ",", "600625", ",", 
   "600757", ",", "600903", ",", "601053", ",", "601207", ",", "601359", ",", 
   "601511", ",", "601667", ",", "601839", ",", "602001", ",", "602163", ",", 
   "602331", ",", "602513", ",", "602687", ",", "602873", ",", "603059", ",", 
   "603245", ",", "603439", ",", "603633", ",", "603835", ",", "604041", ",", 
   "604249", ",", "604459", ",", "604673", ",", "604885", ",", "605103", ",", 
   "605319", ",", "605529", ",", "605749", ",", "605959", ",", "606185", ",", 
   "606435", ",", "606681", ",", "606913", ",", "607143", ",", "607363", ",", 
   "607583", ",", "607825", ",", "608051", ",", "608285", ",", "608527", ",", 
   "608783", ",", "609041", ",", "609293", ",", "609529", ",", "609767", ",", 
   "609999", ",", "610239", ",", "610479", ",", "610709", ",", "610939", ",", 
   "611161", ",", "611359", ",", "611551", ",", "611751", ",", "611959", ",", 
   "612175", ",", "612393", ",", "612603", ",", "612827", ",", "613047", ",", 
   "613249", ",", "613437", ",", "613635", ",", "613837", ",", "614039", ",", 
   "614239", ",", "614449", ",", "614665", ",", "614879", ",", "615089", ",", 
   "615297", ",", "615497", ",", "615701", ",", "615915", ",", "616123", ",", 
   "616329", ",", "616529", ",", "616731", ",", "616935", ",", "617131", ",", 
   "617335", ",", "617559", ",", "617779", ",", "617989", ",", "618223", ",", 
   "618453", ",", "618679", ",", "618897", ",", "619101", ",", "619313", ",", 
   "619535", ",", "619765", ",", "619997", ",", "620227", ",", "620467", ",", 
   "620707", ",", "620941", ",", "621181", ",", "621445", ",", "621695", ",", 
   "621953", ",", "622205", ",", "622437", ",", "622667", ",", "622919", ",", 
   "623155", ",", "623405", ",", "623665", ",", "623921", ",", "624185", ",", 
   "624449", ",", "624705", ",", "624949", ",", "625195", ",", "625435", ",", 
   "625689", ",", "625941", ",", "626197", ",", "626461", ",", "626703", ",", 
   "626963", ",", "627211", ",", "627469", ",", "627723", ",", "627991", ",", 
   "628249", ",", "628505", ",", "628757", ",", "629013", ",", "629267", ",", 
   "629513", ",", "629753", ",", "629995", ",", "630235", ",", "630475", ",", 
   "630727", ",", "630947", ",", "631165", ",", "631399", ",", "631621", ",", 
   "631843", ",", "632047", ",", "632255", ",", "632447", ",", "632645", ",", 
   "632839", ",", "633033", ",", "633227", ",", "633415", ",", "633595", ",", 
   "633775", ",", "633971", ",", "634175", ",", "634379", ",", "634585", ",", 
   "634789", ",", "634997", ",", "635207", ",", "635435", ",", "635663", ",", 
   "635885", ",", "636107", ",", "636347", ",", "636581", ",", "636827", ",", 
   "637083", ",", "637329", ",", "637579", ",", "637819", ",", "638057", ",", 
   "638297", ",", "638543", ",", "638779", ",", "639011", ",", "639251", ",", 
   "639489", ",", "639725", ",", "639961", ",", "640207", ",", "640471", ",", 
   "640719", ",", "640971", ",", "641217", ",", "641451", ",", "641691", ",", 
   "641919", ",", "642141", ",", "642369", ",", "642581", ",", "642795", ",", 
   "643011", ",", "643229", ",", "643469", ",", "643703", ",", "643937", ",", 
   "644165", ",", "644411", ",", "644661", ",", "644901", ",", "645137", ",", 
   "645345", ",", "645549", ",", "645757", ",", "645961", ",", "646159", ",", 
   "646357", ",", "646551", ",", "646743", ",", "646939", ",", "647147", ",", 
   "647371", ",", "647595", ",", "647809", ",", "648001", ",", "648209", ",", 
   "648413", ",", "648615", ",", "648825", ",", "649035", ",", "649251", ",", 
   "649461", ",", "649673", ",", "649895", ",", "650113", ",", "650339", ",", 
   "650561", ",", "650783", ",", "651033", ",", "651275", ",", "651521", ",", 
   "651757", ",", "651977", ",", "652193", ",", "652411", ",", "652639", ",", 
   "652849", ",", "653055", ",", "653261", ",", "653441", ",", "653641", ",", 
   "653831", ",", "654023", ",", "654209", ",", "654393", ",", "654573", ",", 
   "654747", ",", "654925", ",", "655101", ",", "655251", ",", "655405", ",", 
   "655573", ",", "655745", ",", "655915", ",", "656089", ",", "656263", ",", 
   "656423", ",", "656599", ",", "656795", ",", "656993", ",", "657191", ",", 
   "657365", ",", "657539", ",", "657777", ",", "658017", ",", "658251", ",", 
   "658491", ",", "658749", ",", "659003", ",", "659253", ",", "659513", ",", 
   "659777", ",", "660013", ",", "660241", ",", "660487", ",", "660733", ",", 
   "660983", ",", "661247", ",", "661497", ",", "661745", ",", "662001", ",", 
   "662259", ",", "662523", ",", "662789", ",", "662987", ",", "663197", ",", 
   "663415", ",", "663647", ",", "663859", ",", "664073", ",", "664285", ",", 
   "664495", ",", "664705", ",", "664931", ",", "665155", ",", "665381", ",", 
   "665607", ",", "665841", ",", "666087", ",", "666329", ",", "666561", ",", 
   "666791", ",", "667025", ",", "667259", ",", "667503", ",", "667793", ",", 
   "668069", ",", "668343", ",", "668603", ",", "668871", ",", "669147", ",", 
   "669427", ",", "669713", ",", "669991", ",", "670273", ",", "670559", ",", 
   "670825", ",", "671089", ",", "671341", ",", "671571", ",", "671805", ",", 
   "672035", ",", "672261", ",", "672495", ",", "672723", ",", "672957", ",", 
   "673143", ",", "673339", ",", "673539", ",", "673741", ",", "673939", ",", 
   "674127", ",", "674321", ",", "674507", ",", "674711", ",", "674897", ",", 
   "675091", ",", "675289", ",", "675487", ",", "675715", ",", "675937", ",", 
   "676157", ",", "676377", ",", "676599", ",", "676805", ",", "677013", ",", 
   "677213", ",", "677423", ",", "677623", ",", "677813", ",", "677999", ",", 
   "678181", ",", "678367", ",", "678545", ",", "678733", ",", "678911", ",", 
   "679087", ",", "679259", ",", "679431", ",", "679611", ",", "679757", ",", 
   "679925", ",", "680101", ",", "680283", ",", "680459", ",", "680639", ",", 
   "680819", ",", "681009", ",", "681189", ",", "681367", ",", "681565", ",", 
   "681759", ",", "681957", ",", "682153", ",", "682351", ",", "682537", ",", 
   "682729", ",", "682925", ",", "683113", ",", "683305", ",", "683497", ",", 
   "683701", ",", "683887", ",", "684095", ",", "684297", ",", "684507", ",", 
   "684717", ",", "684927", ",", "685115", ",", "685331", ",", "685565", ",", 
   "685783", ",", "686003", ",", "686223", ",", "686447", ",", "686669", ",", 
   "686885", ",", "687113", ",", "687337", ",", "687565", ",", "687787", ",", 
   "688023", ",", "688263", ",", "688519", ",", "688743", ",", "688967", ",", 
   "689193", ",", "689419", ",", "689643", ",", "689881", ",", "690101", ",", 
   "690301", ",", "690505", ",", "690709", ",", "690913", ",", "691115", ",", 
   "691327", ",", "691547", ",", "691745", ",", "691949", ",", "692159", ",", 
   "692369", ",", "692571", ",", "692757", ",", "692931", ",", "693111", ",", 
   "693301", ",", "693481", ",", "693661", ",", "693869", ",", "694063", ",", 
   "694255", ",", "694463", ",", "694661", ",", "694865", ",", "695071", ",", 
   "695275", ",", "695473", ",", "695673", ",", "695891", ",", "696141", ",", 
   "696381", ",", "696629", ",", "696869", ",", "697113", ",", "697359", ",", 
   "697599", ",", "697835", ",", "698069", ",", "698299", ",", "698503", ",", 
   "698711", ",", "698927", ",", "699139", ",", "699361", ",", "699579", ",", 
   "699793", ",", "700017", ",", "700263", ",", "700501", ",", "700723", ",", 
   "700915", ",", "701113", ",", "701305", ",", "701497", ",", "701701", ",", 
   "701901", ",", "702103", ",", "702307", ",", "702523", ",", "702743", ",", 
   "702967", ",", "703189", ",", "703399", ",", "703597", ",", "703793", ",", 
   "703985", ",", "704185", ",", "704375", ",", "704537", ",", "704699", ",", 
   "704859", ",", "705017", ",", "705171", ",", "705325", ",", "705501", ",", 
   "705683", ",", "705867", ",", "706055", ",", "706247", ",", "706433", ",", 
   "706615", ",", "706795", ",", "706981", ",", "707163", ",", "707347", ",", 
   "707539", ",", "707735", ",", "707931", ",", "708125", ",", "708333", ",", 
   "708539", ",", "708761", ",", "708981", ",", "709203", ",", "709427", ",", 
   "709637", ",", "709827", ",", "710025", ",", "710227", ",", "710419", ",", 
   "710607", ",", "710797", ",", "711001", ",", "711201", ",", "711429", ",", 
   "711675", ",", "711915", ",", "712151", ",", "712381", ",", "712627", ",", 
   "712861", ",", "713155", ",", "713431", ",", "713703", ",", "713981", ",", 
   "714257", ",", "714525", ",", "714791", ",", "715051", ",", "715311", ",", 
   "715591", ",", "715867", ",", "716143", ",", "716413", ",", "716699", ",", 
   "716961", ",", "717203", ",", "717439", ",", "717679", ",", "717923", ",", 
   "718163", ",", "718403", ",", "718583", ",", "718769", ",", "718959", ",", 
   "719145", ",", "719335", ",", "719529", ",", "719731", ",", "719927", ",", 
   "720113", ",", "720283", ",", "720473", ",", "720677", ",", "720875", ",", 
   "721061", ",", "721259", ",", "721467", ",", "721671", ",", "721881", ",", 
   "722085", ",", "722287", ",", "722487", ",", "722695", ",", "722895", ",", 
   "723095", ",", "723305", ",", "723511", ",", "723709", ",", "723931", ",", 
   "724153", ",", "724375", ",", "724597", ",", "724801", ",", "724993", ",", 
   "725195", ",", "725405", ",", "725599", ",", "725797", ",", "725999", ",", 
   "726195", ",", "726395", ",", "726589", ",", "726791", ",", "727001", ",", 
   "727217", ",", "727437", ",", "727647", ",", "727861", ",", "728071", ",", 
   "728251", ",", "728443", ",", "728659", ",", "728875", ",", "729109", ",", 
   "729339", ",", "729555", ",", "729755", ",", "729975", ",", "730185", ",", 
   "730395", ",", "730613", ",", "730839", ",", "731065", ",", "731301", ",", 
   "731529", ",", "731761", ",", "731985", ",", "732219", ",", "732485", ",", 
   "732753", ",", "733041", ",", "733313", ",", "733565", ",", "733815", ",", 
   "734055", ",", "734295", ",", "734537", ",", "734787", ",", "735023", ",", 
   "735257", ",", "735491", ",", "735723", ",", "735951", ",", "736181", ",", 
   "736395", ",", "736605", ",", "736815", ",", "737053", ",", "737293", ",", 
   "737497", ",", "737721", ",", "737927", ",", "738141", ",", "738361", ",", 
   "738573", ",", "738783", ",", "739011", ",", "739239", ",", "739463", ",", 
   "739683", ",", "739911", ",", "740147", ",", "740381", ",", "740621", ",", 
   "740865", ",", "741113", ",", "741361", ",", "741609", ",", "741831", ",", 
   "742047", ",", "742267", ",", "742465", ",", "742669", ",", "742893", ",", 
   "743121", ",", "743349", ",", "743579", ",", "743795", ",", "744009", ",", 
   "744219", ",", "744429", ",", "744633", ",", "744849", ",", "745059", ",", 
   "745269", ",", "745469", ",", "745665", ",", "745861", ",", "746059", ",", 
   "746307", ",", "746547", ",", "746829", ",", "747111", ",", "747397", ",", 
   "747659", ",", "747911", ",", "748173", ",", "748449", ",", "748723", ",", 
   "748995", ",", "749271", ",", "749565", ",", "749859", ",", "750129", ",", 
   "750407", ",", "750679", ",", "750955", ",", "751237", ",", "751531", ",", 
   "751813", ",", "752053", ",", "752299", ",", "752503", ",", "752723", ",", 
   "752939", ",", "753155", ",", "753373", ",", "753585", ",", "753781", ",", 
   "753979", ",", "754183", ",", "754385", ",", "754567", ",", "754747", ",", 
   "754945", ",", "755155", ",", "755359", ",", "755563", ",", "755767", ",", 
   "755967", ",", "756175", ",", "756373", ",", "756581", ",", "756785", ",", 
   "756985", ",", "757183", ",", "757401", ",", "757615", ",", "757841", ",", 
   "758065", ",", "758295", ",", "758529", ",", "758769", ",", "759019", ",", 
   "759271", ",", "759511", ",", "759743", ",", "759975", ",", "760209", ",", 
   "760439", ",", "760661", ",", "760895", ",", "761129", ",", "761351", ",", 
   "761587", ",", "761819", ",", "762047", ",", "762293", ",", "762553", ",", 
   "762801", ",", "763051", ",", "763291", ",", "763523", ",", "763751", ",", 
   "763981", ",", "764209", ",", "764455", ",", "764689", ",", "764919", ",", 
   "765153", ",", "765391", ",", "765631", ",", "765853", ",", "766081", ",", 
   "766311", ",", "766525", ",", "766741", ",", "766959", ",", "767155", ",", 
   "767341", ",", "767527", ",", "767713", ",", "767915", ",", "768119", ",", 
   "768323", ",", "768521", ",", "768721", ",", "768907", ",", "769093", ",", 
   "769285", ",", "769483", ",", "769681", ",", "769883", ",", "770087", ",", 
   "770295", ",", "770493", ",", "770693", ",", "770885", ",", "771071", ",", 
   "771251", ",", "771435", ",", "771625", ",", "771819", ",", "772005", ",", 
   "772199", ",", "772393", ",", "772589", ",", "772791", ",", "772983", ",", 
   "773183", ",", "773381", ",", "773565", ",", "773745", ",", "773915", ",", 
   "774091", ",", "774259", ",", "774451", ",", "774643", ",", "774849", ",", 
   "775059", ",", "775263", ",", "775461", ",", "775649", ",", "775841", ",", 
   "776033", ",", "776219", ",", "776403", ",", "776603", ",", "776801", ",", 
   "777017", ",", "777227", ",", "777447", ",", "777683", ",", "777925", ",", 
   "778175", ",", "778421", ",", "778673", ",", "778901", ",", "779139", ",", 
   "779365", ",", "779605", ",", "779845", ",", "780099", ",", "780355", ",", 
   "780623", ",", "780883", ",", "781139", ",", "781399", ",", "781649", ",", 
   "781891", ",", "782131", ",", "782369", ",", "782593", ",", "782803", ",", 
   "783011", ",", "783227", ",", "783447", ",", "783671", ",", "783911", ",", 
   "784141", ",", "784381", ",", "784621", ",", "784857", ",", "785077", ",", 
   "785301", ",", "785501", ",", "785703", ",", "785907", ",", "786115", ",", 
   "786315", ",", "786523", ",", "786715", ",", "786915", ",", "787119", ",", 
   "787321", ",", "787515", ",", "787697", ",", "787877", ",", "788045", ",", 
   "788211", ",", "788383", ",", "788553", ",", "788713", ",", "788873", ",", 
   "789037", ",", "789199", ",", "789383", ",", "789565", ",", "789747", ",", 
   "789935", ",", "790145", ",", "790379", ",", "790613", ",", "790851", ",", 
   "791095", ",", "791337", ",", "791595", ",", "791863", ",", "792127", ",", 
   "792397", ",", "792661", ",", "792921", ",", "793177", ",", "793431", ",", 
   "793689", ",", "793983", ",", "794277", ",", "794549", ",", "794823", ",", 
   "795111", ",", "795385", ",", "795631", ",", "795847", ",", "796075", ",", 
   "796315", ",", "796551", ",", "796791", ",", "797029", ",", "797265", ",", 
   "797525", ",", "797783", ",", "798061", ",", "798335", ",", "798613", ",", 
   "798893", ",", "799169", ",", "799407", ",", "799647", ",", "799885", ",", 
   "800137", ",", "800381", ",", "800627", ",", "800873", ",", "801137", ",", 
   "801399", ",", "801641", ",", "801881", ",", "802127", ",", "802361", ",", 
   "802595", ",", "802803", ",", "803011", ",", "803191", ",", "803371", ",", 
   "803555", ",", "803749", ",", "803943", ",", "804147", ",", "804381", ",", 
   "804627", ",", "804857", ",", "805079", ",", "805301", ",", "805523", ",", 
   "805763", ",", "806033", ",", "806309", ",", "806583", ",", "806851", ",", 
   "807117", ",", "807393", ",", "807675", ",", "807957", ",", "808239", ",", 
   "808535", ",", "808823", ",", "809103", ",", "809379", ",", "809655", ",", 
   "809895", ",", "810125", ",", "810369", ",", "810615", ",", "810863", ",", 
   "811113", ",", "811325", ",", "811505", ",", "811677", ",", "811853", ",", 
   "812033", ",", "812213", ",", "812387", ",", "812567", ",", "812749", ",", 
   "812941", ",", "813133", ",", "813327", ",", "813515", ",", "813713", ",", 
   "813905", ",", "814101", ",", "814297", ",", "814495", ",", "814699", ",", 
   "814909", ",", "815119", ",", "815329", ",", "815539", ",", "815763", ",", 
   "815985", ",", "816209", ",", "816437", ",", "816663", ",", "816899", ",", 
   "817131", ",", "817369", ",", "817591", ",", "817805", ",", "818045", ",", 
   "818283", ",", "818519", ",", "818755", ",", "818989", ",", "819211", ",", 
   "819427", ",", "819643", ",", "819861", ",", "820095", ",", "820323", ",", 
   "820533", ",", "820755", ",", "820975", ",", "821197", ",", "821413", ",", 
   "821611", ",", "821815", ",", "822003", ",", "822193", ",", "822385", ",", 
   "822547", ",", "822709", ",", "822905", ",", "823103", ",", "823309", ",", 
   "823513", ",", "823717", ",", "823925", ",", "824129", ",", "824331", ",", 
   "824537", ",", "824745", ",", "824937", ",", "825129", ",", "825327", ",", 
   "825527", ",", "825729", ",", "825941", ",", "826155", ",", "826373", ",", 
   "826595", ",", "826853", ",", "827105", ",", "827321", ",", "827531", ",", 
   "827739", ",", "827963", ",", "828191", ",", "828413", ",", "828639", ",", 
   "828861", ",", "829101", ",", "829349", ",", "829599", ",", "829847", ",", 
   "830109", ",", "830367", ",", "830619", ",", "830859", ",", "831119", ",", 
   "831377", ",", "831635", ",", "831863", ",", "832093", ",", "832333", ",", 
   "832583", ",", "832831", ",", "833069", ",", "833309", ",", "833545", ",", 
   "833797", ",", "834043", ",", "834265", ",", "834485", ",", "834703", ",", 
   "834919", ",", "835117", ",", "835313", ",", "835511", ",", "835709", ",", 
   "835889", ",", "836067", ",", "836249", ",", "836451", ",", "836655", ",", 
   "836859", ",", "837069", ",", "837279", ",", "837483", ",", "837681", ",", 
   "837891", ",", "838083", ",", "838287", ",", "838495", ",", "838695", ",", 
   "838917", ",", "839157", ",", "839393", ",", "839629", ",", "839871", ",", 
   "840117", ",", "840361", ",", "840603", ",", "840853", ",", "841077", ",", 
   "841303", ",", "841519", ",", "841725", ",", "841935", ",", "842145", ",", 
   "842369", ",", "842591", ",", "842815", ",", "843025", ",", "843241", ",", 
   "843479", ",", "843699", ",", "843901", ",", "844151", ",", "844403", ",", 
   "844649", ",", "844887", ",", "845147", ",", "845441", ",", "845717", ",", 
   "845993", ",", "846263", ",", "846553", ",", "846847", ",", "847141", ",", 
   "847435", ",", "847715", ",", "847983", ",", "848253", ",", "848531", ",", 
   "848807", ",", "849061", ",", "849321", ",", "849591", ",", "849825", ",", 
   "850057", ",", "850291", ",", "850527", ",", "850749", ",", "850953", ",", 
   "851163", ",", "851373", ",", "851633", ",", "851871", ",", "852099", ",", 
   "852325", ",", "852577", ",", "852835", ",", "853095", ",", "853351", ",", 
   "853603", ",", "853861", ",", "854131", ",", "854401", ",", "854661", ",", 
   "854907", ",", "855153", ",", "855403", ",", "855653", ",", "855893", ",", 
   "856119", ",", "856349", ",", "856589", ",", "856779", ",", "856979", ",", 
   "857183", ",", "857401", ",", "857595", ",", "857783", ",", "857973", ",", 
   "858171", ",", "858373", ",", "858579", ",", "858789", ",", "858993", ",", 
   "859197", ",", "859413", ",", "859631", ",", "859841", ",", "860051", ",", 
   "860279", ",", "860507", ",", "860753", ",", "860991", ",", "861239", ",", 
   "861483", ",", "861723", ",", "861945", ",", "862173", ",", "862411", ",", 
   "862641", ",", "862863", ",", "863079", ",", "863287", ",", "863479", ",", 
   "863675", ",", "863873", ",", "864061", ",", "864245", ",", "864427", ",", 
   "864613", ",", "864793", ",", "864975", ",", "865131", ",", "865295", ",", 
   "865463", ",", "865655", ",", "865853", ",", "866055", ",", "866251", ",", 
   "866455", ",", "866663", ",", "866869", ",", "867079", ",", "867289", ",", 
   "867499", ",", "867729", ",", "867961", ",", "868201", ",", "868449", ",", 
   "868707", ",", "868971", ",", "869227", ",", "869483", ",", "869735", ",", 
   "869993", ",", "870237", ",", "870453", ",", "870691", ",", "870933", ",", 
   "871173", ",", "871395", ",", "871617", ",", "871839", ",", "872057", ",", 
   "872267", ",", "872481", ",", "872679", ",", "872873", ",", "873057", ",", 
   "873237", ",", "873415", ",", "873589", ",", "873763", ",", "873963", ",", 
   "874171", ",", "874369", ",", "874585", ",", "874797", ",", "874989", ",", 
   "875173", ",", "875377", ",", "875583", ",", "875787", ",", "876019", ",", 
   "876251", ",", "876481", ",", "876717", ",", "876955", ",", "877195", ",", 
   "877437", ",", "877675", ",", "877909", ",", "878139", ",", "878379", ",", 
   "878601", ",", "878819", ",", "879035", ",", "879233", ",", "879431", ",", 
   "879629", ",", "879833", ",", "880015", ",", "880205", ",", "880405", ",", 
   "880579", ",", "880749", ",", "880921", ",", "881101", ",", "881283", ",", 
   "881467", ",", "881647", ",", "881833", ",", "882019", ",", "882209", ",", 
   "882413", ",", "882611", ",", "882821", ",", "883037", ",", "883259", ",", 
   "883481", ",", "883699", ",", "883911", ",", "884125", ",", "884335", ",", 
   "884543", ",", "884749", ",", "884957", ",", "885173", ",", "885387", ",", 
   "885607", ",", "885819", ",", "886039", ",", "886255", ",", "886473", ",", 
   "886695", ",", "886895", ",", "887093", ",", "887285", ",", "887475", ",", 
   "887669", ",", "887867", ",", "888071", ",", "888275", ",", "888481", ",", 
   "888679", ",", "888867", ",", "889077", ",", "889287", ",", "889491", ",", 
   "889685", ",", "889861", ",", "890039", ",", "890209", ",", "890377", ",", 
   "890543", ",", "890707", ",", "890867", ",", "891029", ",", "891189", ",", 
   "891363", ",", "891547", ",", "891737", ",", "891917", ",", "892097", ",", 
   "892283", ",", "892487", ",", "892719", ",", "892929", ",", "893141", ",", 
   "893365", ",", "893591", ",", "893817", ",", "894045", ",", "894279", ",", 
   "894513", ",", "894743", ",", "894965", ",", "895193", ",", "895421", ",", 
   "895649", ",", "895859", ",", "896053", ",", "896251", ",", "896453", ",", 
   "896663", ",", "896867", ",", "897053", ",", "897233", ",", "897419", ",", 
   "897609", ",", "897783", ",", "897959", ",", "898135", ",", "898309", ",", 
   "898511", ",", "898711", ",", "898931", ",", "899151", ",", "899369", ",", 
   "899585", ",", "899801", ",", "900019", ",", "900235", ",", "900447", ",", 
   "900663", ",", "900879", ",", "901099", ",", "901321", ",", "901537", ",", 
   "901757", ",", "901969", ",", "902191", ",", "902405", ",", "902639", ",", 
   "902879", ",", "903097", ",", "903329", ",", "903557", ",", "903787", ",", 
   "904027", ",", "904273", ",", "904521", ",", "904767", ",", "905023", ",", 
   "905281", ",", "905553", ",", "905821", ",", "906091", ",", "906363", ",", 
   "906639", ",", "906909", ",", "907179", ",", "907447", ",", "907771", ",", 
   "908075", ",", "908371", ",", "908657", ",", "908935", ",", "909211", ",", 
   "909493", ",", "909767", ",", "910035", ",", "910315", ",", "910595", ",", 
   "910871", ",", "911151", ",", "911431", ",", "911703", ",", "911993", ",", 
   "912279", ",", "912545", ",", "912817", ",", "913093", ",", "913369", ",", 
   "913587", ",", "913803", ",", "914031", ",", "914261", ",", "914499", ",", 
   "914723", ",", "914943", ",", "915161", ",", "915395", ",", "915625", ",", 
   "915855", ",", "916077", ",", "916313", ",", "916531", ",", "916765", ",", 
   "916973", ",", "917179", ",", "917387", ",", "917585", ",", "917781", ",", 
   "917975", ",", "918219", ",", "918473", ",", "918735", ",", "918993", ",", 
   "919257", ",", "919539", ",", "919821", ",", "920103", ",", "920373", ",", 
   "920625", ",", "920877", ",", "921129", ",", "921363", ",", "921595", ",", 
   "921815", ",", "922051", ",", "922289", ",", "922529", ",", "922769", ",", 
   "923017", ",", "923269", ",", "923475", ",", "923679", ",", "923877", ",", 
   "924075", ",", "924263", ",", "924441", ",", "924617", ",", "924789", ",", 
   "924957", ",", "925125", ",", "925315", ",", "925513", ",", "925705", ",", 
   "925903", ",", "926107", ",", "926293", ",", "926479", ",", "926673", ",", 
   "926893", ",", "927109", ",", "927319", ",", "927527", ",", "927725", ",", 
   "927911", ",", "928101", ",", "928281", ",", "928463", ",", "928695", ",", 
   "928929", ",", "929171", ",", "929421", ",", "929645", ",", "929863", ",", 
   "930101", ",", "930361", ",", "930613", ",", "930893", ",", "931177", ",", 
   "931453", ",", "931705", ",", "931955", ",", "932211", ",", "932475", ",", 
   "932739", ",", "933003", ",", "933267", ",", "933535", ",", "933805", ",", 
   "934033", ",", "934263", ",", "934509", ",", "934749", ",", "934989", ",", 
   "935233", ",", "935457", ",", "935655", ",", "935853", ",", "936027", ",", 
   "936219", ",", "936409", ",", "936607", ",", "936801", ",", "936993", ",", 
   "937191", ",", "937399", ",", "937615", ",", "937843", ",", "938067", ",", 
   "938281", ",", "938491", ",", "938701", ",", "938893", ",", "939091", ",", 
   "939307", ",", "939517", ",", "939727", ",", "939947", ",", "940175", ",", 
   "940405", ",", "940615", ",", "940837", ",", "941055", ",", "941281", ",", 
   "941509", ",", "941733", ",", "941951", ",", "942161", ",", "942361", ",", 
   "942571", ",", "942781", ",", "942999", ",", "943215", ",", "943459", ",", 
   "943701", ",", "943939", ",", "944179", ",", "944447", ",", "944701", ",", 
   "944949", ",", "945193", ",", "945437", ",", "945667", ",", "945911", ",", 
   "946163", ",", "946405", ",", "946643", ",", "946881", ",", "947151", ",", 
   "947427", ",", "947703", ",", "947979", ",", "948253", ",", "948529", ",", 
   "948769", ",", "949015", ",", "949255", ",", "949491", ",", "949701", ",", 
   "949917", ",", "950131", ",", "950343", ",", "950567", ",", "950805", ",", 
   "951033", ",", "951257", ",", "951489", ",", "951725", ",", "951961", ",", 
   "952167", ",", "952401", ",", "952633", ",", "952867", ",", "953089", ",", 
   "953323", ",", "953563", ",", "953797", ",", "954033", ",", "954271", ",", 
   "954511", ",", "954761", ",", "955009", ",", "955265", ",", "955517", ",", 
   "955771", ",", "956023", ",", "956279", ",", "956533", ",", "956779", ",", 
   "957023", ",", "957275", ",", "957491", ",", "957707", ",", "957947", ",", 
   "958195", ",", "958429", ",", "958659", ",", "958885", ",", "959111", ",", 
   "959371", ",", "959623", ",", "959859", ",", "960097", ",", "960331", ",", 
   "960559", ",", "960781", ",", "961003", ",", "961213", ",", "961433", ",", 
   "961653", ",", "961919", ",", "962177", ",", "962433", ",", "962685", ",", 
   "962919", ",", "963147", ",", "963379", ",", "963637", ",", "963897", ",", 
   "964167", ",", "964401", ",", "964641", ",", "964891", ",", "965155", ",", 
   "965415", ",", "965673", ",", "965923", ",", "966193", ",", "966465", ",", 
   "966725", ",", "966985", ",", "967213", ",", "967445", ",", "967675", ",", 
   "967903", ",", "968131", ",", "968371", ",", "968611", ",", "968827", ",", 
   "969061", ",", "969283", ",", "969505", ",", "969723", ",", "969951", ",", 
   "970167", ",", "970383", ",", "970611", ",", "970845", ",", "971061", ",", 
   "971271", ",", "971505", ",", "971751", ",", "971991", ",", "972249", ",", 
   "972507", ",", "972767", ",", "973019", ",", "973257", ",", "973499", ",", 
   "973739", ",", "973967", ",", "974195", ",", "974429", ",", "974661", ",", 
   "974883", ",", "975125", ",", "975375", ",", "975615", ",", "975851", ",", 
   "976091", ",", "976331", ",", "976551", ",", "976771", ",", "976993", ",", 
   "977193", ",", "977395", ",", "977597", ",", "977809", ",", "978031", ",", 
   "978241", ",", "978451", ",", "978653", ",", "978857", ",", "979073", ",", 
   "979289", ",", "979513", ",", "979715", ",", "979913", ",", "980115", ",", 
   "980313", ",", "980531", ",", "980751", ",", "980967", ",", "981167", ",", 
   "981363", ",", "981555", ",", "981765", ",", "981977", ",", "982181", ",", 
   "982379", ",", "982587", ",", "982801", ",", "983029", ",", "983259", ",", 
   "983493", ",", "983759", ",", "984009", ",", "984275", ",", "984559", ",", 
   "984841", ",", "985127", ",", "985379", ",", "985655", ",", "985931", ",", 
   "986223", ",", "986513", ",", "986805", ",", "987081", ",", "987357", ",", 
   "987633", ",", "987903", ",", "988163", ",", "988423", ",", "988693", ",", 
   "988967", ",", "989231", ",", "989475", ",", "989729", ",", "989981", ",", 
   "990219", ",", "990455", ",", "990691", ",", "990929", ",", "991145", ",", 
   "991361", ",", "991567", ",", "991787", ",", "992015", ",", "992239", ",", 
   "992465", ",", "992703", ",", "992943", ",", "993183", ",", "993429", ",", 
   "993657", ",", "993869", ",", "994079", ",", "994283", ",", "994491", ",", 
   "994713", ",", "994931", ",", "995145", ",", "995359", ",", "995575", ",", 
   "995793", ",", "996011", ",", "996227", ",", "996431", ",", "996643", ",", 
   "996859", ",", "997077", ",", "997287", ",", "997499", ",", "997719", ",", 
   "997935", ",", "998147", ",", "998367", ",", "998589", ",", "998805", ",", 
   "999005", ",", "999195", ",", "999397", ",", "999597", ",", "999801"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8693312640370855`*^9, 3.8693313147340813`*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"a3d83b69-cf0c-4655-90db-78378b3f2dcc"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"Total", "/@", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "<", 
        SuperscriptBox["10", "6"]}], "&"}], "]"}], "[", 
     RowBox[{"Subsequences", "[", 
      RowBox[{
       RowBox[{"Prime", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", "21", "}"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"x_", "?", "PrimeQ"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8693313305280848`*^9, 3.86933134053107*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"542581fb-d2af-442a-9813-362b9fedbdf7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.869331344887072*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"136653ef-a333-4079-947f-c71eceba03d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", "2"}], "&"}], ",", "21", ",", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Total", "/@", 
       RowBox[{"Subsequences", "[", 
        RowBox[{
         RowBox[{"Prime", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"EulerPhi", "[", "1000000", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", "#", "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"x_", "?", "PrimeQ"}], "/;", 
       RowBox[{"(", 
        RowBox[{"x", "<", 
         SuperscriptBox["10", "6"]}], ")"}]}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869331351201104*^9, 3.8693313783890853`*^9}, {
  3.8693314275340796`*^9, 3.8693314708721085`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"f693183d-6f9e-4add-9426-8b08b6c964cb"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.869331494131093*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"ac1a8a87-1ffc-4f3c-843a-e4c09dc0c917"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", "2"}], "&"}], ",", "21", ",", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Total", "/@", 
       RowBox[{"Subsequences", "[", 
        RowBox[{
         RowBox[{"Prime", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"EulerPhi", "[", "1000", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", "#", "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"x_", "?", "PrimeQ"}], "/;", 
       RowBox[{"(", 
        RowBox[{"x", "<", 
         SuperscriptBox["10", "3"]}], ")"}]}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869331351201104*^9, 3.8693313783890853`*^9}, {
  3.8693314275340796`*^9, 3.8693315152910786`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"8b2b99d5-7962-478c-a8df-afe5e67cfc81"],

Cell[BoxData["23"], "Output",
 CellChangeTimes->{3.869331516119089*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"7ee8e657-0494-4882-9915-622264a45dbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", "2"}], "&"}], ",", "21", ",", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Total", "/@", 
       RowBox[{"Subsequences", "[", 
        RowBox[{
         RowBox[{"Prime", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"EulerPhi", "[", "10000", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", "#", "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"x_", "?", "PrimeQ"}], "/;", 
       RowBox[{"(", 
        RowBox[{"x", "<", 
         SuperscriptBox["10", "4"]}], ")"}]}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869331351201104*^9, 3.8693313783890853`*^9}, {
  3.8693314275340796`*^9, 3.869331550291068*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"e9c34bc4-e874-47ae-b3e5-ce451ecde48f"],

Cell[BoxData["57"], "Output",
 CellChangeTimes->{3.869331551163067*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"6b6c9a19-34b2-4726-a7e0-c67689742cd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", "2"}], "&"}], ",", "21", ",", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Total", "/@", 
       RowBox[{"Subsequences", "[", 
        RowBox[{
         RowBox[{"Prime", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"EulerPhi", "[", "100000", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", "#", "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"x_", "?", "PrimeQ"}], "/;", 
       RowBox[{"(", 
        RowBox[{"x", "<", 
         SuperscriptBox["10", "5"]}], ")"}]}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869331351201104*^9, 3.8693313783890853`*^9}, {
  3.8693314275340796`*^9, 3.8693315680430775`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"505c7eb7-65af-4025-9b74-4dcd7de77828"],

Cell[BoxData["175"], "Output",
 CellChangeTimes->{{3.8693315627280817`*^9, 3.8693315811850677`*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"d40926e6-dcba-4a39-8406-7ca7c6d55c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", 
     RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"Subsequences", "[", 
   RowBox[{
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"EulerPhi", "[", "100000", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", "175", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693316294315968`*^9, 3.8693316410586224`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"3de7a170-102c-4e9c-9336-fa50a0d444b0"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], Short[#, 5]& ], 
   "line" -> 99, "sessionID" -> 19461278825561380424, "byteCount" -> 20625680,
    "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.8693316379936*^9, 3.8693316440446205`*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"979aa310-731b-449f-a986-9c84123f9e25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"PrimeQ", "[", 
      RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "100000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "175", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693316925191965`*^9, 3.869331694763199*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"6bbed476-90dd-49a3-9e6e-6d38b48d1fb9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "477497", ",", "477511", ",", "477517", ",", "477523", ",", "477539", ",", 
   "477551", ",", "477553", ",", "477557", ",", "477571", ",", "477577", ",", 
   "477593", ",", "477619", ",", "477623", ",", "477637", ",", "477671", ",", 
   "477677", ",", "477721", ",", "477727", ",", "477731", ",", "477739", ",", 
   "477767", ",", "477769", ",", "477791", ",", "477797", ",", "477809", ",", 
   "477811", ",", "477821", ",", "477823", ",", "477839", ",", "477847", ",", 
   "477857", ",", "477863", ",", "477881", ",", "477899", ",", "477913", ",", 
   "477941", ",", "477947", ",", "477973", ",", "477977", ",", "477991", ",", 
   "478001", ",", "478039", ",", "478063", ",", "478067", ",", "478069", ",", 
   "478087", ",", "478099", ",", "478111", ",", "478129", ",", "478139", ",", 
   "478157", ",", "478169", ",", "478171", ",", "478189", ",", "478199", ",", 
   "478207", ",", "478213", ",", "478241", ",", "478243", ",", "478253", ",", 
   "478259", ",", "478271", ",", "478273", ",", "478321", ",", "478339", ",", 
   "478343", ",", "478351", ",", "478391", ",", "478399", ",", "478403", ",", 
   "478411", ",", "478417", ",", "478421", ",", "478427", ",", "478433", ",", 
   "478441", ",", "478451", ",", "478453", ",", "478459", ",", "478481", ",", 
   "478483", ",", "478493", ",", "478523", ",", "478531", ",", "478571", ",", 
   "478573", ",", "478579", ",", "478589", ",", "478603", ",", "478627", ",", 
   "478631", ",", "478637", ",", "478651", ",", "478679", ",", "478697", ",", 
   "478711", ",", "478727", ",", "478729", ",", "478739", ",", "478741", ",", 
   "478747", ",", "478763", ",", "478769", ",", "478787", ",", "478801", ",", 
   "478811", ",", "478813", ",", "478823", ",", "478831", ",", "478843", ",", 
   "478853", ",", "478861", ",", "478871", ",", "478879", ",", "478897", ",", 
   "478901", ",", "478913", ",", "478927", ",", "478931", ",", "478937", ",", 
   "478943", ",", "478963", ",", "478967", ",", "478991", ",", "478999", ",", 
   "479023", ",", "479027", ",", "479029", ",", "479041", ",", "479081", ",", 
   "479131", ",", "479137", ",", "479147", ",", "479153", ",", "479189", ",", 
   "479191", ",", "479201", ",", "479209", ",", "479221", ",", "479231", ",", 
   "479239", ",", "479243", ",", "479263", ",", "479267", ",", "479287", ",", 
   "479299", ",", "479309", ",", "479317", ",", "479327", ",", "479357", ",", 
   "479371", ",", "479377", ",", "479387", ",", "479419", ",", "479429", ",", 
   "479431", ",", "479441", ",", "479461", ",", "479473", ",", "479489", ",", 
   "479497", ",", "479509", ",", "479513", ",", "479533", ",", "479543", ",", 
   "479561", ",", "479569", ",", "479581", ",", "479593", ",", "479599", ",", 
   "479623", ",", "479629", ",", "479639", ",", "479701", ",", "479749"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.869331696268182*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"d18e28ff-b346-40cb-a353-9cb1898ac459"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"PrimeQ", "[", 
      RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "100000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "177", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693316925191965`*^9, 3.869331694763199*^9}, {
  3.8693317729071846`*^9, 3.8693317837121906`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"ea12c53d-17f7-4a01-8d65-21aa6eeec6ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "477557", ",", "477571", ",", "477577", ",", "477593", ",", "477619", ",", 
   "477623", ",", "477637", ",", "477671", ",", "477677", ",", "477721", ",", 
   "477727", ",", "477731", ",", "477739", ",", "477767", ",", "477769", ",", 
   "477791", ",", "477797", ",", "477809", ",", "477811", ",", "477821", ",", 
   "477823", ",", "477839", ",", "477847", ",", "477857", ",", "477863", ",", 
   "477881", ",", "477899", ",", "477913", ",", "477941", ",", "477947", ",", 
   "477973", ",", "477977", ",", "477991", ",", "478001", ",", "478039", ",", 
   "478063", ",", "478067", ",", "478069", ",", "478087", ",", "478099", ",", 
   "478111", ",", "478129", ",", "478139", ",", "478157", ",", "478169", ",", 
   "478171", ",", "478189", ",", "478199", ",", "478207", ",", "478213", ",", 
   "478241", ",", "478243", ",", "478253", ",", "478259", ",", "478271", ",", 
   "478273", ",", "478321", ",", "478339", ",", "478343", ",", "478351", ",", 
   "478391", ",", "478399", ",", "478403", ",", "478411", ",", "478417", ",", 
   "478421", ",", "478427", ",", "478433", ",", "478441", ",", "478451", ",", 
   "478453", ",", "478459", ",", "478481", ",", "478483", ",", "478493", ",", 
   "478523", ",", "478531", ",", "478571", ",", "478573", ",", "478579", ",", 
   "478589", ",", "478603", ",", "478627", ",", "478631", ",", "478637", ",", 
   "478651", ",", "478679", ",", "478697", ",", "478711", ",", "478727", ",", 
   "478729", ",", "478739", ",", "478741", ",", "478747", ",", "478763", ",", 
   "478769", ",", "478787", ",", "478801", ",", "478811", ",", "478813", ",", 
   "478823", ",", "478831", ",", "478843", ",", "478853", ",", "478861", ",", 
   "478871", ",", "478879", ",", "478897", ",", "478901", ",", "478913", ",", 
   "478927", ",", "478931", ",", "478937", ",", "478943", ",", "478963", ",", 
   "478967", ",", "478991", ",", "478999", ",", "479023", ",", "479027", ",", 
   "479029", ",", "479041", ",", "479081", ",", "479131", ",", "479137", ",", 
   "479147", ",", "479153", ",", "479189", ",", "479191", ",", "479201", ",", 
   "479209", ",", "479221", ",", "479231", ",", "479239", ",", "479243", ",", 
   "479263", ",", "479267", ",", "479287", ",", "479299", ",", "479309", ",", 
   "479317", ",", "479327", ",", "479357", ",", "479371", ",", "479377", ",", 
   "479387", ",", "479419", ",", "479429", ",", "479431", ",", "479441", ",", 
   "479461", ",", "479473", ",", "479489", ",", "479497", ",", "479509", ",", 
   "479513", ",", "479533", ",", "479543", ",", "479561", ",", "479569", ",", 
   "479581", ",", "479593", ",", "479599", ",", "479623", ",", "479629", ",", 
   "479639", ",", "479701", ",", "479749", ",", "479753", ",", "479761", ",", 
   "479771", ",", "479777", ",", "479783", ",", "479797", ",", "479813", ",", 
   "479821", ",", "479833"}], "}"}]], "Output",
 CellChangeTimes->{{3.8693317792572002`*^9, 3.869331785344187*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"f1ddc8cd-8612-4e1a-91fa-6fa2779e9d82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"PrimeQ", "[", 
      RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "100000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "181", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693316925191965`*^9, 3.869331694763199*^9}, {
  3.8693317729071846`*^9, 3.8693317837121906`*^9}, {3.8693318182201834`*^9, 
  3.8693318214171824`*^9}, {3.86933191873919*^9, 3.8693319325421925`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"b28ff617-303a-44c8-b690-d1784a1e0f73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "477539", ",", "477551", ",", "477553", ",", "477557", ",", "477571", ",", 
   "477577", ",", "477593", ",", "477619", ",", "477623", ",", "477637", ",", 
   "477671", ",", "477677", ",", "477721", ",", "477727", ",", "477731", ",", 
   "477739", ",", "477767", ",", "477769", ",", "477791", ",", "477797", ",", 
   "477809", ",", "477811", ",", "477821", ",", "477823", ",", "477839", ",", 
   "477847", ",", "477857", ",", "477863", ",", "477881", ",", "477899", ",", 
   "477913", ",", "477941", ",", "477947", ",", "477973", ",", "477977", ",", 
   "477991", ",", "478001", ",", "478039", ",", "478063", ",", "478067", ",", 
   "478069", ",", "478087", ",", "478099", ",", "478111", ",", "478129", ",", 
   "478139", ",", "478157", ",", "478169", ",", "478171", ",", "478189", ",", 
   "478199", ",", "478207", ",", "478213", ",", "478241", ",", "478243", ",", 
   "478253", ",", "478259", ",", "478271", ",", "478273", ",", "478321", ",", 
   "478339", ",", "478343", ",", "478351", ",", "478391", ",", "478399", ",", 
   "478403", ",", "478411", ",", "478417", ",", "478421", ",", "478427", ",", 
   "478433", ",", "478441", ",", "478451", ",", "478453", ",", "478459", ",", 
   "478481", ",", "478483", ",", "478493", ",", "478523", ",", "478531", ",", 
   "478571", ",", "478573", ",", "478579", ",", "478589", ",", "478603", ",", 
   "478627", ",", "478631", ",", "478637", ",", "478651", ",", "478679", ",", 
   "478697", ",", "478711", ",", "478727", ",", "478729", ",", "478739", ",", 
   "478741", ",", "478747", ",", "478763", ",", "478769", ",", "478787", ",", 
   "478801", ",", "478811", ",", "478813", ",", "478823", ",", "478831", ",", 
   "478843", ",", "478853", ",", "478861", ",", "478871", ",", "478879", ",", 
   "478897", ",", "478901", ",", "478913", ",", "478927", ",", "478931", ",", 
   "478937", ",", "478943", ",", "478963", ",", "478967", ",", "478991", ",", 
   "478999", ",", "479023", ",", "479027", ",", "479029", ",", "479041", ",", 
   "479081", ",", "479131", ",", "479137", ",", "479147", ",", "479153", ",", 
   "479189", ",", "479191", ",", "479201", ",", "479209", ",", "479221", ",", 
   "479231", ",", "479239", ",", "479243", ",", "479263", ",", "479267", ",", 
   "479287", ",", "479299", ",", "479309", ",", "479317", ",", "479327", ",", 
   "479357", ",", "479371", ",", "479377", ",", "479387", ",", "479419", ",", 
   "479429", ",", "479431", ",", "479441", ",", "479461", ",", "479473", ",", 
   "479489", ",", "479497", ",", "479509", ",", "479513", ",", "479533", ",", 
   "479543", ",", "479561", ",", "479569", ",", "479581", ",", "479593", ",", 
   "479599", ",", "479623", ",", "479629", ",", "479639", ",", "479701", ",", 
   "479749", ",", "479753", ",", "479761", ",", "479771", ",", "479777", ",", 
   "479783", ",", "479797", ",", "479813", ",", "479821", ",", "479833", ",", 
   "479839"}], "}"}]], "Output",
 CellChangeTimes->{3.869331922453185*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"ada95b16-2a16-4ce9-a618-b8ce8014c422"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"PrimeQ", "[", 
      RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"EulerPhi", "[", "100000", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "93", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693316925191965`*^9, 3.869331694763199*^9}, {
  3.8693317729071846`*^9, 3.8693317837121906`*^9}, {3.8693318182201834`*^9, 
  3.8693318214171824`*^9}, {3.86933191873919*^9, 3.8693319325421925`*^9}, {
  3.8693319890812054`*^9, 3.8693320079851885`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"6bc882bf-9c06-4eb3-b74d-435c70b3bbbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "478729", ",", "478739", ",", "478741", ",", "478747", ",", "478763", ",", 
   "478769", ",", "478787", ",", "478801", ",", "478811", ",", "478813", ",", 
   "478823", ",", "478831", ",", "478843", ",", "478853", ",", "478861", ",", 
   "478871", ",", "478879", ",", "478897", ",", "478901", ",", "478913", ",", 
   "478927", ",", "478931", ",", "478937", ",", "478943", ",", "478963", ",", 
   "478967", ",", "478991", ",", "478999", ",", "479023", ",", "479027", ",", 
   "479029", ",", "479041", ",", "479081", ",", "479131", ",", "479137", ",", 
   "479147", ",", "479153", ",", "479189", ",", "479191", ",", "479201", ",", 
   "479209", ",", "479221", ",", "479231", ",", "479239", ",", "479243", ",", 
   "479263", ",", "479267", ",", "479287", ",", "479299", ",", "479309", ",", 
   "479317", ",", "479327", ",", "479357", ",", "479371", ",", "479377", ",", 
   "479387", ",", "479419", ",", "479429", ",", "479431", ",", "479441", ",", 
   "479461", ",", "479473", ",", "479489", ",", "479497", ",", "479509", ",", 
   "479513", ",", "479533", ",", "479543", ",", "479561", ",", "479569", ",", 
   "479581", ",", "479593", ",", "479599", ",", "479623", ",", "479629", ",", 
   "479639", ",", "479701", ",", "479749", ",", "479753", ",", "479761", ",", 
   "479771", ",", "479777", ",", "479783", ",", "479797", ",", "479813", ",", 
   "479821", ",", "479833", ",", "479839", ",", "479861", ",", "479879", ",", 
   "479881", ",", "479891", ",", "479903"}], "}"}]], "Output",
 CellChangeTimes->{{3.869332000561191*^9, 3.869332009330185*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"1fe3b0a1-8a51-43d0-ae96-36f4c72e6fff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Last", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"PrimeQ", "[", 
         RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
      RowBox[{"Subsequences", "[", 
       RowBox[{
        RowBox[{"Prime", "[", 
         RowBox[{"Range", "[", 
          RowBox[{"EulerPhi", "[", "100000", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", "#", "}"}]}], "]"}], "]"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"181", ",", 
     RowBox[{"big", " ", "bang"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869331928389187*^9, 
  3.869331959618188*^9}},ExpressionUUID->"193f518d-8793-46f7-b02a-\
9c3e39cfa4e5"],

Cell[CellGroupData[{

Cell["Consecutive Partitions", "Section",
 CellChangeTimes->{{3.869335825356781*^9, 
  3.8693358310618095`*^9}},ExpressionUUID->"6436b543-730b-4e17-9015-\
14bd0fcfe04f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "DivisorPairs", "]"}], "=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DivisorPairs", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"Reverse", "[", "#", "]"}]}], "}"}], "]"}], "[", 
     RowBox[{"[", " ", 
      RowBox[{";;", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "/", "2"}], "]"}]}], "]"}], "]"}],
     "&"}], "[", 
   RowBox[{"Divisors", "[", "n", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8693358489488*^9, 3.8693358489517975`*^9}, {
  3.86933593156903*^9, 3.869335943670049*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"eb9ba1bb-d19e-4c57-b258-f2c0870586b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "CoreyFastPartition", "]"}], "=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoreyFastPartition", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"Pick", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"#", ",", "4"}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], ",", "2"}], "]"}], "]"}], "&"}], 
    "[", 
    RowBox[{"DivisorPairs", "[", 
     RowBox[{"8", " ", "n"}], "]"}], "]"}], "/.", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r_Integer", ",", "s_Integer"}], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "r", "+", "2"}], ")"}], "/", "4"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "+", "r", "-", "2"}], ")"}], "/", "4"}]}], 
     "}"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.8693358321627817`*^9, 3.8693358321647816`*^9}, {
  3.8693359488480387`*^9, 3.869335965660037*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"4cbf1d85-b8d2-46d9-aaf1-85b58f2fae53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoreyFastPartition", "[", "1009", "]"}]], "Input",
 CellChangeTimes->{{3.869335834249798*^9, 3.869335836589817*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"5f7dccff-98fb-4e24-9471-2ec1acdfc60b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"504", ",", "505"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1009", ",", "1009"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.869335838359783*^9, 3.8693358528357882`*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"d95cfe01-c1a9-46b5-8167-be96842018f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoreyFastPartition", "[", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", "1000", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8693359061420417`*^9, 3.8693359162480397`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"2be1358d-59e8-4966-b061-8e36e98a8e9b"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"{", 
             RowBox[{"2", ",", "2"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "5"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "7"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"5", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"11", ",", "11"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"6", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"13", ",", "13"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"8", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"17", ",", "17"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"9", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"19", ",", "19"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"11", ",", "12"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"23", ",", "23"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"14", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"29", ",", "29"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"15", ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"31", ",", "31"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"18", ",", "19"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"37", ",", "37"}], "}"}]}], "}"}], ",", 
         TemplateBox[{"976"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3911", ",", "3912"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7823", ",", "7823"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3914", ",", "3915"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7829", ",", "7829"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3920", ",", "3921"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7841", ",", "7841"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3926", ",", "3927"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7853", ",", "7853"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3933", ",", "3934"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7867", ",", "7867"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3936", ",", "3937"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7873", ",", "7873"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3938", ",", "3939"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7877", ",", "7877"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3939", ",", "3940"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7879", ",", "7879"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3941", ",", "3942"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7883", ",", "7883"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3950", ",", "3951"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7901", ",", "7901"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3953", ",", "3954"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7907", ",", "7907"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"3959", ",", "3960"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"7919", ",", "7919"}], "}"}]}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 118, "sessionID" -> 19461278825561380424, 
   "byteCount" -> 240096, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.869335919461026*^9, 3.8693359705130343`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"677d5a7c-29a1-4079-94b9-fd3c21160fe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", "%118", ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[119]:=",ExpressionUUID->"77f6b3bb-f806-48fe-aa9d-481641e04174"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.869335984070035*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"a3814d5f-9da4-4526-bbbd-1dc2fedb8a41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New try 14 August", "Section",
 CellChangeTimes->{{3.869517613458825*^9, 
  3.869517617121395*^9}},ExpressionUUID->"35c430a5-bdb7-499c-8f1e-\
a404e530c432"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
udlpwpPXXu/ovzo2Lv1p/Ha8f8+6PSfl7yqfpPDMT1/acOzamPSZoT2a6lJn
AuqxAZf4o/fHFX8tfN2C6lmWr2bPkmvzgvG+DcoCvLFmz0BmEcTk5+rQwZ3v
bv5M83SGPNrbJcSHPI5I9XZXXc+qiGaGhAmaR3wuWrY9Eh/JBB7jo7cuRvf5
3+ooeJuH6QZWTksgTAAAAABgA6Ontr9iJk/IdXzUHSKDl+q8f+lhQuFZvOQ/
9dB0YZSzKxaeZHtwpz4y98gATSagfARDXtUVDhO0Z7rll7dvXPOxqbGBLXnX
k6hfeY96zGN27IUl/gHFHRAzJUwQLxhYqz92osF08phvYKW3BMIEAAAAAPYw
eav/o+WvFekuqTo+Vw+uMxgJX3g99/YHfSOqOwgqGia8si6iunV97NTOgoXX
zG40fmCNYWc814MbPeV/SWfRWrb37DYeM8Ggp28uTJi6f7BFOzv9R2xMXouo
b/DXvEoNE1a3rNSrQMVDDWQzJ0yYmnpwetdqnYETDaaTp4QGVnJLIEwAAAAA
YCPidf5dfu/rL7+R66M999orL7+9csPuruMXb+d94W78WHDD2leXvJb78HLv
R/sGruX3f0sOE8av9e3xvbs6N/Fnfrrk5dWtm/ZE4nf1BjoYT5w68NG7q1+p
y07ntR9Lnz84NKL3+bsX+/Z4V769JHOVwqK6t19duTnYd3VU8aHRa8d2vtsi
f0b4wMpNB7++X3gARtHk/cGDm9YqSmI6TFDd6SDNdEO/8SMn7salRfjx95Qr
a61314GofhWp5NX53a97/Ctffk0OiOqXrPXu6c/PCmZSmCCavDUgtdjXsrlW
/ZK3X3/XH+wZLPYch9IaWGktgTABAAAAADAX0W8FAAAAAAAlIUwAAAAAAAAl
IUwAAAAAAAAlIUwAAAAAAAAlIUwAAAAAAAAlIUwAAAAAAAAlIUwAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgKp59OjR2NjYQ8nExMTjx4/Nf/H27euJRLz4
65v4ndsJM9O8cefbn3x4qG7d3n9a80kZr++v3bvkg/2/3T8w+nDcQpUApsQ+
mCdx7y3UumMb56n9bO/IEysiAAAAAFTa48ePJycn7927d+XKldOnT589e/ab
b75JpVIm84SJibGRkX+YCRP+cXXw0oWTt29dLzpNK0lCJk/4ZNF7od/uH7Bc
PZh9Rj51q/vt3130I8/64NGL96oyu9kaJiT2aqrJqGAjJ/dufGPRd+Wq/OGy
lR3RkcnpKTIAAACAmePRo0ejo6Pnz5/v6enZsWPHH/7wh7/85S+XL19++PCh
mTxhYmLs5s2rJsOEoXP9F8/Hbt26VniaFpOEbJ7wow+6K1RJmE3ywoSM5zzd
w5WfnbkwIffxjbMpTBiLbXnxqfzP/HBj7NvpKzkAAACAGWBycvLGjRtffPHF
Rx99tGbNmrVr13744YeHDh2S84SiXy81TDCTJ1hPEuTXwrV7K1dPmDUyYUKm
dz9579ynqxbJveCluyseJ2TChJWHTF35MNPChEIZyNgX6+UkYVHb0eExqSZ3
ueV3nmqLjj3BwgIAAACYUR4/fjw+Pn716tXu7u4NGza88847zc3Nra2tfr//
yJEjw8PDY2NFegylhgmDZ6NF84RKhQnCq9IVhllAGyaIxo6uTV8/0J3pw6dD
gPejU5PDRz/wLHpO7CK7/n393vPqNn/vXPcHnhe/J/ehv7voJysDX6pigEyY
sDE2ORL1Z6bz841Hr+iWrkiYMHblaOCdl1zPSB32773o+aD73D31d3+29+L5
3SvF8nz3JX9s7NtzgZ98V5pj4FxJVwsUDxOGdy+Vivr9bedy9zUINSlXhaf7
TimzAwAAADCHPHr06P79+2fPng0Gg+vWrfvFL37x9ttvv/POO8K/f/e73/X1
9X3zzTeF8wTzYcL16xf/cXXwqvT6x9WhROLy5OSE7jSLRgStuyL7vjzTGuwj
TEA+vTBhanjPMs2b6RDg1Y0bf66+kP+ZlYcy3eSxS7vdz+Rf5f/Ui1ti2a0i
e5uDWzsdd7dOP71QmDA2sHGRzj0Fqw4lFN99ZtGi72f/tujFF3IzfSlYymUX
RcOEzH0QC//zXK6E5/eu+mF6duu/4NoEAAAAwEYeSx49ejQxMTE6Onr58uUj
R45s3br1V7/61duS5ubm1atX/+Y3v9m1a1c0Gk0kEgXyBP0w4ZtL4ivvf7/5
5lL2JXxL+K7uNItGBL5Pj8WGLv92/wnCBOTTCxPudb8pd/A3xjIn2TMhgPDm
S5ukiw2Gg+lRBFb2SFcDTJ7b9sN0d777ktRW75zbnU4MFm0bzJvOvEXrI+J0
7vWnM4GnPojllc44TLhzaKUUXKTvKRCmczodZWTuKch8VxyyYHjvq+kIIXB+
7OLOF8V/rj1aQvdeM2bCc4tefGP9buVFFwMbNaHB8IFVyqxj2Z4qjEABAAAA
YEaSn93w8OHD27dvX7t27dy5c0eOHNm+ffuaNWtWrlz5i1/8orm5+Ze//OXq
1avXrVvn8/mCweBXX31169Yt4Vu6E9QJE74+fqNry42/7s+9c/bLG+GPbxzd
o0wYrIQJL/92/xvbD7/kO0CYgHzaMGFsJHun/8IP8q8oWLixP/Oe+lz82Bfr
5U+siiga6pXdL8lBwZaYejpPuT/Ndq5H9v5Mjik25aUJhmHCcFCe8MaoYlOL
vj9P8ab83afk3r08XzlnSC9ySeMwGAzAuChTRfd6VqbnPTA1NTly9H1pJMbn
PLsjgfQXdaISAAAAAHOQfEHC/fv3L126FI1Ge3p6/vSnP3344Ydr165tbm7O
JgmrVq369a9/vWbNmra2ti1btuzbt+/ChQupVEp3mtow4fyJm53v3+h8P3H6
i9yb8VM3Dv/+ZmDVjaOfZPMEK2ECYyagAKOnOTz179uUowrkxjowmE5sy1Oq
UCLt3Lbvq9IA3ac5ZN/s1nbvjcKEke6f65ZaOXH5u+kZybNwfzoyVV6YoDQ5
NnI6e//Cwm2npQL9OV2NGw8c3SjdTCFUYOyeIoUgTAAAAADs4fHjx6lU6sqV
K0eOHOno6Ghvb29ra1u1apUmSWhtbV27du26devee++9TZs27d27d2hoyFSY
cOXMjT/95sYfvYnYkcS186rLFS787Ub445s7WxP93VbChNe3Hdy6r29HONpx
8MTbO3oJE5BPGyY843rxJysDkYv31BfXFA8T9D+QuerAXJiQNyKBYZiQnqxB
mCCFElULE2QDG9PpiTTN7G0Okqde+s9YugKH9y5TfgwAAADAXPf48eMHDx7I
wy2+9957LS0t8q0NmmsS1q1bt3Hjxs2bN2/btm337t1Hjx69du3a+Pi47jRV
YcLl0zc/fPPGng8S5we0oyhcu3Dj6Cc3t/z8xud/shImrA9+3ve3M0NDQ5f/
ce3jw38nTEA+3QEY85kOEzTTiW2Sh2T8eXeBMCFze8L6vFEMioUJP9p90bjI
1Q0TMpccpFOCS7tfTKcxL278IjfhzN0fT4m3PwAAAACwgcePHz98+PD8+fOf
fvrpxo0bW1pa8pOEtrY2n8+3c+fO7u7u3t7eEydOXLlyZXR0VPiu7jRVYcL1
Czc+/9ONHa03Du1MXPq7MklInDh44w/rbny6KfH1cSthwrItB369K9L9xcCN
Gzf+ePQsYQLyVSpMyA4aoBozIdPFfnHXRfV0FLMbi65/RjcxmCowZkLsA/m6
gJd2XzIsclXDhLEv1sslSI8/mb2hQ/VoyOxQluujPMwBAAAAsI2JiYmRkZGv
vvpq586d69evf+edd5RJgvCOPOhiX1/fhQsXrl+/fvv27YcPHz569Mh4guox
E66dv9HbeaNzw40TBxVDMp648dn2G3t9iaGvKjIA49auY4QJMFKpMCH7eAWd
pzkoHh+Zmc6ydAhw79zed9MPc8j0ylWzNXyaw+C29LMSfri++1L6i2OJi9FP
N248MKL4blXGTBj+ctNL6YXdlB2kMnvDyKK2oyOTwsfuZYeyfGmX8QUUAAAA
AOYc+eKEq1evHj58eMuWLa2tre++++7q1at//etfr1279je/+c3vf//7L7/8
cnh4+Ntvv52YmHj06JHRNQkynac5XDt/o/9A4swx5YAJiRMHlUkCYQKqp2Jh
wtTUcI/qYYgZi9YrLvtXPBpS6akXt+SeHKEef0AtlwCMnfvPl57S+0hmdIJK
hgn6w1T+cNUh5fMeJ4e73/xu/qe++2b3sP7TXQAAAADMTY8fPx4bG7t27drn
n3++ffv2DRs2tLW1rVu3bs2aNevXr9+6detnn3126dKlBw8eFM4QsnTCBHMv
wgRUSQXDBMG9S0cD77zkks/aP7do2TuBqHqy907vDaz1vPiCK50DPON68Y2N
ewfU3XpTYYI0tcHujW+8mJ6dOKn1u3NDR1YtTJDGqNx04Ny9/Ihg8t65Axs9
6aV7yvXvOkNZAgAAAJjbHj9+PD4+fuvWrZMnT3Z1dQUkv/vd77Zs2fL+++9v
2LCho6Ojr6/v5s2bk5NmewuECQAAAAAAzFXZJOHvf/97d3f3H//4x/3793/5
5Zd9fX1dXV3bt2/3+/2ffPKJ8Nd79+4VGCRBYzz17Uj8lPj4hhJfwreE7+pO
kzABAAAAAIBp9/jx44mJCTlJ2L9//x//+McDBw6cOnXqG8np06ePHDkivCOP
ljA2NmbyHgfB2MjwrU833dy1rtSX8C3hu7rTNEoG6tbtXbblwJvbD3Ye+erG
jRu9p6+07PqiyX9QeJ8wAQAAAACAypqcnLxz586pU6f279+/e/fu7u7u06dP
3759e0ySTCavXr168eLF69evf/vtt+YvSxCkLsRu/3fX7TeeG/nJ/yW8bi1/
5tbr37395n+9s/Kfbv/32tuvf/fWa8+k//TaM7d+/qz435/+3yP/USN8S/iu
7jSNkoF/eT8UPPLV0NDXQ0NDN27cGB8fH33w8M9fnf+X9/cRJgAAAAAAUEGP
Hz9+8ODB119//dlnnymThImJCfkKhMnJybGxsYcPHwrd85KShKlMmDAaWC1G
Cm/+l7sbl93d+Oro7979du9v7/vfvPfbn93b8vqdlh/c+cV/u7fVc2/T8rsf
/OTOyn8qL0xY/N6nm0Nf9HwZE159py6cunxj4ML1/zx4crG3izABAAAAAIAK
evz48b1792Kx2L59+3p6es6cOXPnzp1skmCRHCakIp3J9UuT7700+vs1d1r+
Odm29P62Xwj/uLvx1YdHdt3/3bv3Nr2WOhYa/eP7ozt/nWx9obwwoYyX9QUE
AAAAAMCG5CsTLl26dPLkyYsXLyaTyUolCVPZMOHYpw+6/seD/dsehLZow4TD
v3/w5w+//aT94eE/POEwYeHavRVZRgAAAAAAbOjRo0cPHjy4d+/ew4cPJycn
K5UkTGXChIeH/3DnnR/cafnB/Y5fCv9Nrv/xff9bwj/ubmi8H1j9bWhL6ljo
3rZfjO5qG93567vrl9762dO33/qvRmFC3XrDARXNv76/9pMffdBdqcUEAAAA
AMCGHj9+/OjRowrGCLLUxb/ffvO/ZMZMcN3d+KrwX/GahPdeFt658+7ipPiP
2ju/+G/J9Q33fMvvf9zy4MD20V3r7/z6ReG7utNs8h8q8IAGk0nCove6frt/
oLILCwAAAAAArJu4nbi96l9Gls0b+Y+aEl7L/k/hW8J3dad54863VvKE76/d
u+SD/b/dPzD6cPwJ1wYAAAAAAAAAAAAAAADs7DEAAAAAAMVMd+cV02y6GyAA
AAAAYNab7q4tqqsHAAAAAABrHqmRKsx5wkqf7iIAAAAAAGYxoV85oTApUaYK
011AVB5hAgAAAADACqFf+fDhw5RkTDI+Pi6nCuQJcxVhAgAAAADACqFfee/e
vfv3749KHjx48PDhw7GxMfKEOYwwAQAAAABghdCvHBkZuXXr1u3bt+/cuXP3
7t379+8/ePAglUqNj49n84TpLiYqiTABAAAAAGCF0K/8xz/+MTw8fP369UQi
cfPmzTt37ty7d+/bb7+Vr0/g4oQ5RliVhAkAAAAAACuEfuX58+cvXLhw6dKl
K1euDA8P37hx4/bt2/fv33/48CEXJ8w9hAkAAAAAAIuEfuWpU6dOnz597ty5
r7/++tKlS3KekEwmv/3221Qqlb04YbpLisogTAAAAAAAWCT0K48fP37ixIlY
LHb69OmhoaF4PH79+vVbt27JFydwp8McQ5gAAAAAALBI6Ff29fX99a9//eqr
r/72t7+dOXPmwoUL//jHP27evHn37t0HDx7IdzoQJswZhAkAAAAAAIuEfuXn
n3/+xRdffPnll8ePH//73/8+NDR05coV+U6HbJjAnQ5zgxwKESYAAAAAAKwQ
+pV/+ctfent7jx071t/fH4vFBgcHL1++nEgk5GETxsbGCBPmDMIEAAAAAIB1
Qr/yyJEjkUjk6NGjf/3rX//2t7+dO3cuHo9/8803d+7cIUyYYwgTAAAAAADW
Cf3Kw4cP/+Uvf/n888//+te/DgwMnD179tKlS4QJcxJhAgAAAADAOmWY8OWX
XxImzG2ECQAAAAAA64R+5aFDh44cOaIJE65fv06YMPcQJgAAAAAArCNMsBXC
BAAAAACAdYQJtkKYAAAAAACwjjDBVggTAAAAAADWESbYCmECAAAAAMA6wgRb
IUwAAAAAAFhHmGArhAkAAAAAAOsIE2yFMAEAAAAAYB1hgq0QJgAAAAAArCNM
sBXCBAAAAACAdYQJtkKYAAAAAACwjjDBVggTAAAAAADWESbYCmECAAAAAMA6
wgRbIUwAAAAAAFhHmGArhAkAAAAAAOsIE2yFMAEAAAAAYB1hgq0QJgAAAAAA
rCNMsBXCBAAAAACAdYQJtkKYAAAAAACwjjDBVggTAAAAAADWESbYCmECAAAA
AMA6wgRbIUwAAAAAAFhHmGArhAkAAAAAAOsIE2yFMAEAAAAAYB1hgq0QJgAA
AAAArCNMsJVqhAmJzgaHoyE4XMFJWpLoctc463wnUtNdkNmv3+twOLz9010M
HYlQU41zoS9ml5WcCC51OJYGE9NdjmmVjLa7XfOEJlnjO1HaN9knlCwV8y10
1jSFZl6Ts9u2DwDAjEaYYCulhgnRNkcBDZ3ikSZhgp5kqMlRqFoS4daFzhnZ
T1cgTJgpCBNS0TULHA6Xe2so0uULEiZUG2ECAAAwgTDBVkoNE+LdPl97+tW6
TDiYX9C4KvdOoD85NfPChJkg1e9d4DAIE0ZiobaGGimNmZH9dIWZGybkGY74
VtS79yaKvznjpU4Gm5tcPlW12z5MSIY9wt6nPTbd5ZiTUrHOZnetLzrd5QAA
ALMOYYKtWLnNwSg0IEzIEw8sdjidzrxqSYRXzBfedcxraF5RNwv66bMoTJCK
Kl8qU+TNGU/aoDTVbvswYTjYMAtX5SwhtS6HlzABAACUijDBVggTnoDE3kan
szmwLb9aEqHl9c07ookJ3Q7jzEOYMB0IE3QQJlQRYQIAACgTYYKtVDVMSPb5
PS/IZ95d7vZoUvO55GCoTR4/zeF8ur65c1D7AZWo2A9si05NJCLpUdccNbVu
b9eg4k7ZbA8rGW0XbxxwbohN5fXFssWL93gbnxZLV7O4OXRZ/FNqKOR9RSqw
c35jfoGFEnd53bXSHQnO+fUtwcIlThsONTqdnu5k4Yyl/DBBqJCtnga5VI4a
11JvJFuqRMS/okGuq7xVoKirrZ76TH36+gouUjZMSER8Ta4aeY5N3tBQ3u3K
4qzrpaqUJttr2OmLbV6grRbpCnbHGmVXRirtirBUuExLGB0MrqwT5tAo3rag
7P5IH1AP5hEc1n0zO8cCTbGsipoqXPmCVLzH516YriHXUk/ogt5EpC6zmryM
6lLJzVi3VKZXRLomTgSal7rSTXyh29efnqA0WIq2d6l+M1OkiXi4rVGaY019
Syg+IS6ssOHI25rz6cbiVTeVXiN10leEgtQ1+cKXs20sf1UadXsNK1m5uSW7
PU5tLhHz1TociwPxAiVUr9+GtohyqRK9fk+6GoVqb2jeEVMtc2Y7Uu5wxP3J
qKnCpyuoyL5I+kD66+KqDMpf1w1hFG/KNaPSJteuVO1SfpXqbRUm6+7SzjLa
JrzdHMmuqJLanql9S9Ftf8pSOyz8kzQaD7dn2qSwxleE5OaROuGrczrr2hmz
AQAAEWGCrVQvTPB3el3zGryd4UhP0LtUPDZ0bVAcbo1GvbXiEZ34gd5QoEXs
+7vaosbHY9Jh5JpgcFnN/Fe8wZ5IpEvo9Wgmmz6MjHTUKw+DdcME74bG+UvF
6YS2usWjUmdz+Eyw0SmN59Yb8je5xClvVt6RnYq2ucSQoS0Y7o2EdjQ3CMec
td7o6FRB8eAyp3OZOGpZVcKEy2FPrSNbKqFOWlc0h4ZzNeYU+oNiDYeDq+qd
OnXlD7bV1S33CfUQ7vSKS+Rw+U4az0464G/dFWycp64Hh8urHMvuslCTjprF
Hn9XRFj7vuVCBTsbOw16Zv1esQdyJPd1oXMnrrtnfbnal+KFTA9I7lCEIy3O
dCjQqelQJAeFqtjmFv6/bo2wNiOR3lgipfumNL0iTbGsiipS+anYBqGB1TS0
BEK9wgSFPqPB2JupREyo5DXiLTDubRGp2HIHJ1sqV43UjLOlKn9FyJfQOJzy
YsrbV7bXaTpM8HqXzW8Q20bIv1zasFrCg52Nzlq3WIYuv7u2aNVNpS4EhHI4
5tV7xI1R0cb65UWTVuXe1rrcqtRN9QpVsnpzi4slf9abW+XiXwsVMt7tcTmy
bUYoYaunJTsyYTKySvxjejeVrnaHc1kwV+/Z7ejphuYd0g5H/kw6LitS+OL7
otGY7wWn2Ile4Re+LpTB39KYfuBFsTAhNRwTytP6vNji/L1SkxuSC5ULE8R/
C5NvCqmqPRVpFVrPqkyWUGLbM7dvKbrtT5XfDgvvB1Ix4a/i/Wji+goH24Vf
jfQcCRMAAFAiTLCVqoUJmo62OGiA4qRVMrzC6VgakM4WZT6xS/jWAuMD+PTp
yIYdysPRZFg8qqwPpM/ZSYeRP2poWNgaHs4d2emFCeJRcXZCqSPN8vk7RZdW
KrAz13uSTl82BC4rZn5ZPAJfsLnQEHBx4fDV2Ri8nJ1vZcMEuZDp6eeJhTqU
nayUdATuyXRX5CNwdYBzIVDvUHQH8vWnV4KqHpJhsfpyp3HFs7oL1ihP1MoD
72dnrSb3Qdqiuf9vcSxY2lDnqAtkT8X2tTpy/yt3ahoalwViI9mp5F2YbfY2
h6JNsayKKlz5qUizQ3PpRTJpnEoZ3uagVypHS7ZUJa4IoTkJXcgfBVUbWDI9
MbNhglC9u3IbVrrT52yOZJdOrrq2AlfQS1cFaGI6oXcsNvXWXI0Xvc2hYCVr
q1QqVX2HVPLRiNCeXQW2a3kRlgV1O8bSjkLba052iRc/1Gf3XfJ2pNpy5brK
7MoKFr7YvkieVDZ7USsWJkh0b3NQhglTsXahIblDuQ1Qvlwhu9WU2vZM7lvM
bPvltcMi+wHhN0LMOvqUZUuSHgAAkI8wwVaqFyZoLoKVDswa0gfP4oFc3qlY
+ezzLqNTV9JhpPJs9VR6UnW5b8mHkdpEQjdMUJ4KTx+6P6+6qjneUadYOmkE
RW0PSDj+1Ha+lFInvC6hw5B5dkDlwwTpnH7+xcZG1AWQ66pZ3R/W6U5q5ujQ
G0I/XVfyrSJinyJvMU/6FmgOxXPE9ECxZqNep9PbJ576zPZuxFshlB8QOwaq
jkz5YULxplhWReVRVb7c3t4Mm+yMGIcJmkqIB3+UK1XpK0JaqOf9g3p/Mx0m
qCpK7oLVdag2LHEuxqM9SMV2tvZq60a+tD632ZoMEwwqOb9KY5uFjdUTHpEu
Caj1FjjNLF3Mr6n5LCnf07k/Qno/u4eR2qG6WtTd1UKFL7YvkmrG8DkXFQoT
5Iak2PmkIquc2Y209LZnat9ibtsvqx0W2w/IU/D0kB8AAFAEYYKtVHHMhMv5
b+ZuUnYYMTxlKR1GtuSfC87cRSvNRHfcMP0xEy7nTUR1HlC9dPJd/PoM7teW
LppVnjiueJggHWY3FnzueypxMhzc6mtd0VCXvns6Owv5Kg5Nd7jYwGvSAb8q
h1G8L09ZGgNBn1HXT2oPmTUi9jiEjoCUMKRXt3jYr+g9qTs1RiU3FyaYaIpl
VZSoQOVLl6mLNxT4w0PFsyDDMKFgqcpYEeKFNA6HeN9Ef0Kzjs2GCZoiydeu
q/qPRYaOlIqtd/46EWpUXghUfADGQpWsU6Wj0dZnHa4md71jQWtfgT6j1Ald
ZrDZyQ+s1LuqIbZBcWmKTrVoGqdx4Yvti6Rur9N7wqD4lQoT5HrI3ukgpR/Z
Sy/KaHtm9i3mtv1y2mHx/YC0PxdWiHtreFA/RwIAACLCBFt5Yk9zUB69S/+u
a90r3wOufhn2rZShgdH7+v0UowEYC09c9THpYDtzg7bmpXu/tjhUgqNWdR1F
xcME3f5djjycgjT2WnO7z98Zlm+9V4UJRbvkGkZPc1C8L5Uqc7e1+hUbNuij
SdXr6RYrUuyGSBmCeHgv32Yi9iKVp6p1W0KZYYKJplhWRRWp/Cnxxv/OZnk4
R+dCt7/gmISmn+agKlU5K0IcOdDXmB5irkE5umkJAzAqP6HTYIqECcatWr3e
TT3NwbCSdTe3dI9SMxRA4WJoGJdKtfnrbkfaxmlQ+GL7oiIP06lYmDAV31Gf
vUhASjCyt5uV1fZM7FvMbfvltENTP0nJwWBLvTzkZd1yf5RIAQAAPYQJtjI9
YcLexkLnzvQZHMNL5+nkpzZUMUyQzopm5mJCf9548+qzc0b3hpQUJqjOdWol
Q00Ox7OtypuW1bOoZJgg9cLSK1QqVeHrJfJJZznFDEH8h5wqSLeBi3esSP0U
5UXLFQ0TijfFMiqqaOXnPhnv8bsXiuPDpZdatwRlhQllrYjMhPozg6ZmTrI/
sTDBsFVLW3ruSvUSHg2pU8l6VSrd5l/rchYZHzIm3ly0wmCz01w+ofyaeLI+
04xNhQkGhS+2L5KatPHgM5ULE+RhB6Q7HaSbLBQhTDltz8S+pYphgvmfpGQ8
nB6z1xMmTwAAIA9hgq1MS5gg3zyruWW4GOkw8nntzcjqO6mrFiYIHY1ndeZu
6ELY1+7TvFqXCQu9oHGV8O9A/lMnywgT5MPs/LvLjZZIvvbYepiQt+Kk26Uz
HSX59K7O5coFiWVzeqNigKCq84ZdcfEWdVXfzVyYcMKb97w/vTeLN8UyKqpo
5atJF9gbXjmf7umUHCaUtyIUpGccOL2xXPk13cMKdOLyGbVq7VgKJYQJEnUl
G4+ZIBWv0EMhpY6zcihIFWlHYTRmwmLVmAnmwoT8whfbF0lNun6Hwd9V6Wtu
1urtIhFaZiJMkFdlUygpTTP/gSyltT0T+5bqhQml/iSl+loXpB9MCQAAVAgT
bGV6wgR5wHbtYwiS0b1h44Mzeegtp0c53qB8H2vumW7VCxOkvkb+IO19oQIl
1qj8AIzScxDEce91zpJKS6S8YFt6UltFwgRhJahGce/3ClWzIDs6xEjY48wb
jX8iHuwqeF2HeDBf17qqUVkkKUbwep/X9LDMhQny1eCa3oHOm0WbYrlhQoHK
TyWTE8rPSxdmGJ3sntK9ndxEqUpeEUKxVP+rHBhTHoBOOT6q3J+qeJgwlYp6
nzV4moPyvqHiAzAWqmTt5nbS58pOTfp3vXG/Ug4wXW16m116yrpPc1BcfFI0
TChY+GL7osIPeZEm9Wyr8lE76ccfKCpTuuZEM+iozngFyS63w+EJ7PBo05Uy
dgJm9i3VCxOK7Qc024Y88G+Bq4kAALAtwgRbmaYwQTxKlK4UrXO3px8pLt6p
XaCLIR9Gvun11mafve6Vbu5WPgGtimGCGFxIFxvXLfeJj4/vCjS/Ml9nxHJj
ZYQJ0ilpo3HjRelqnFfvkapRKFXriuaQOAv5OfXivb2h9BPbXZ4VlbnNwbOq
tSb7vPW2xvl5vYb4Xrd4iXzumewe8dbvQk8DnJKfXO90OpU9fbEDK7ylfEak
/EkzYYJ8AtdZ7+2KhHf4w8OGbxZrimVUVLHKFzrCzvmNUjOO9AR9TS7DB/nJ
RkJCn81R6wn0REIbAjHTpSpxRQgVW1O/QmrevaHAynrVIw5TMTG4c9Q0tAm1
JKz3hppar/fNKoQJyla9VRwZIL1GNB29omFCwUrWyTZzlxPIDzHUDiGrLGB0
g1jAmsUeX2dYKmGrpyV71UY81FQjDpfxilesSWHWK8Qb7VUP8SwaJhRuIUX3
RZdD7nliEbJT8Lc0+jLX8At7Fac8DkOX8F2/e2FNY1urpjKllMDhejMQ7g15
d8gJgN7gh/J1Dk6nzlMYSt0JyPuWNq+r0L6lemFCkf2A0GCcTzdKBRN+enxu
xdNLUyd8dcKOq73AA0AAALARwgRbma4wQXor4muqk4e5dz5d524L6Q5lmJE5
jByJCofW0ihYNa4mb2io6OnaCoUJgolEpN1dJw9P55xfJ8z9TAlnpkoPE6RT
w0WGgxOr0b+iPv20gHmuhhWBzEFtMtruds2TyvpCc3AoVcExE5J9wuF0jTxH
ccWNaj+YPBNsXiqvJkdNbYNnayQxoTdBzcJq7vWWB67XPg/UZJgwlRoKNi+u
kVpXc/asv+6bBZtiWRVVuPJT8XBbaQ1JqHB5XMSaxYHBUkpVyopIRrd6GmrT
n3Ut9fh71ZNXbXq+6EhVxkzIfEpo1Q1SBWbamKaGil+ZUKiSlatDOtHv8p5Q
7EmkE+tO4xtPxCn0+j0vpDc7sWJ3KPuSycEurzv9CA+hAeTVZPErE4q1kKL7
ouRgqM2drkDpA5HcniclDu0ofdf5dH1z52BKpzKFBiz15R019R3yw0J1n6Sg
t9lmJ1HSTsDUvqWKYYL0nuF+IHUh7DX6E2ECAAAKhAm2YiVMeLIKDqI+N0mD
Bpi/KxwAZimjpzkAAIBZhTDBVggTZi7VaIQAMHcRJgAAMCcQJtgKYcKMJY6I
XvRqcACYAwgTAACYEwgTbIUwAQAwzQgTAACYEwgTbIUwAQAwzQgTAACYEwgT
bGX2hAkAAAAAgJmLMMFWCBMAAAAAANYRJtgKYQIAAAAAwDrCBFshTAAAAAAA
WEeYYCuECQAAAAAA6wgTbIUwAQAAAABgHWGCrRAmAAAAAACsI0ywFcIEAAAA
AIB1hAm2QpgAAAAAALCOMMFWCBMAAAAAANYRJtgKYQIAAAAAwDrCBFshTAAA
AAAAWEeYYCuECQAAAAAA6wgTbIUwAQAAAABgHWGCrRAmAAAAAACsI0ywFcIE
AAAAAIB1hAm2QpgAAAAAALCOMMFWCBMAAAAAANYRJtgKYQIAAAAAwDrCBFsh
TAAAAAAAWEeYYCuECQAAAAAA6wgTbIUwAQAAAABgHWGCrRAmAAAAAACsI0yw
FcIEAAAAAIB1hAm2QpgAAAAAALCOMMFWCBMAAAAAANYRJtgKYQIAAAAAwDrC
BFshTAAAAAAAWEeYYCuECQAAAAAA6wgTbIUwAQBmk5O+BQ6Hoy1q8Ofk4A53
zdJgoqplSA6G2tx1TzuFgjic8+tX+CNVnF8q3u3zLK2bL8/t6Tp3eyQxUb3Z
TU0NBxscWg2dVVnCaFvenLIMV3GlFG8qiZ7WOqe32uUoMruRaKDFXVdbI1VK
jWtpc/BM8kmVCABQMsIEWyFMAIDZIxFcatTTTCV6/e6FUpe7umFCzDfP4ZjX
0Lw1GO6NhLZ66oX/dTYGL1dpdonQCndzeyDUG4n0hgItDUKv0rksGK/S3AQn
vEIl1q/w+dpzr0B/VTqw8W7VXOSXd3mdsIjNR1LVmKOkeFNJngx5l8r99ycR
JhSa3Qlf/YpWf2c40hsJd/qkYru8/dWrHACAJYQJtkKYAACzRepIs1OQHyac
8Lvmieft61Z6GqofJgQ2x1Rd68viqXznqsiT6eDFd4lza+2t2tz6vQ7HAt/J
ak2+GCkvqt4aLNpUEmGPdM1JzdJmz/PVDxNKnd1otPVZh2NxoIppEgDAAsIE
WyFMAIDZIRXz1jrqOwKt+WFCv8/V5AtfELr4UW/Vw4R8idAyh+NZX+zJzE26
DaFK9x2I+oQKbggOV2vyhaX6vQscC6p45r1oUxkOuV9oDvQnMpfBVDlMKH12
0r0hT+7mCwBASQgTbIUwAQBmg1Rsg8tRK3TYpT6g4Q310xImpCItDofTazZM
ENMAC731UsOEEmeX6GywFCZYWrrSL0sof3ZFm0p5YYI4WW9/GeUhTACAuYAw
wVYIEwBg5kv1e10Ol/dEamomhgkx37MOx4qw2WEFrIUJ4r0ejvrABdNfKCdM
sNBXtbJ04uiaJd7BYbswIR5Y/OTuqQEAlIowwVYIEwBgphuNemsdrrao1IGq
UJggjgxgqKTOYLyz0VlSF7js/m8qOdjjrXc667fGSuhLlji72OYF2XoQHx7R
FoyWFM2U37tPhppKHw3ATmFC6nI08KbLUesJT9NNKACAoggTbIUwAQBmtkRo
mdNR6830nysUJowMRsTnI+i/BkfMFi7Z53U5skGHOSX3f6OK4KPRd6LEyy5K
nF2825d5doC/dUW9+IwBZ73/ZPWjkguBeofD3VXiYyNsECZI14qkuVaGBkfL
mDgA4AkhTLAVwgQAmMnE8/6qBy/OnNsckoM73DUOZ92GaPEOsKULIZKDcsrR
FZB79zVNgSI9yspddzF1OdjoLHbBQCVmF2sXb3Ewdfl+ZZaucmGCNIqFEdOj
WxjOLjUckzKucHBrc+PTTqHFtR6pypM6AQDWESbYCmECAMxY0lAJTk+3sus0
M8KE0cFAU43DWe/tM9etU14Isbe1zlHXurecCyFEUu/eWXiIhgrOTu7mOxpD
Beq0ArMTx51wGq7Wis9uqpJhQioRy13W4nc7HO5tufLEhk1e1GFydqlom3gt
zPQ9uxMAUAhhgq0QJgDATCV3r4zp9D2fyJgJ0hgOzhd8sfLOD1t8moOwkGvM
dXIrNLvSnu9Q3uz6vU6Hs5y7A2xwm4PW5So/GxQAYAFhgq0QJgDATJWM7vD5
2jUvT73Q5VrsEf/dnX/p/RMYM0Ecw8G5LBifKHexZluYIF2Z4DH7sIqyZieO
+ugs6xEShAkAgJmEMMFWCBMAYFaZ7tscxMcXLrB0kXkp/d9Ejz90Wf2WfJuD
+YcDWgwTLgeErmuVZxcPPO9wtJT1uMM5HibEAps117/ItzmU8mxQAMATRJhg
K4QJADCrTHOYIF3zv6BxVf4lE75Av7mT9+It9rGEuZ6zNLua+hW+YE8k0hP0
tzTOdzoctd6o+SH9S5mdUIG+WndzeyDUK8+uQXyaQxVnJ0mEGh2Ohl2lPROy
/NmlVSlMEEfLLHVUCuPZiYV0Pt3YvCMU6Y2EdrR6FgsrxNnYWVZdAQCqjzDB
VggTAGBWmQlhgsVx+0sxkYhs9TTU1khzcM5f6PZ2RhNl32FRXDy0oqHuaae8
RDW1DZ6tkWrOTiKNX1HW2XwrqhQmlE1/dskzIW9T3Xx5hcxzNazwhy/wKAcA
mLkIE2yFMAEAAAAAYB1hgq0QJgAAAAAArCNMsBXCBAAAAACAdYQJtkKYAAAA
AACwjjDBVggTAAAAAADWESbYCmECAAAAAMA6wgRbIUwAAAAAAFhHmGArhAkA
AAAAAOsIE2yFMAEAAAAAYB1hgq0QJgAAAAAArCNMsBXCBAAAAACAdYQJtkKY
AAAAAACwjjDBVggTAAAAAADWESbYCmECAAAAAMA6wgRbIUwAAAAAAFhHmGAr
hAkAAAAAAOsIE2yFMAEAAAAAYB1hgq0QJgAAAAAArCNMsBXCBAAAAACAdYQJ
tkKYAAAAAACwjjDBVggTAAAAAADWESbYCmECAAAAAMA6wgRbIUwAAAAAAFhH
mGArhAkAAAAAAOsIE2yFMAEAAAAAYB1hgq0QJgAAAAAArCNMsBXCBAAAAACA
dYQJtkKYAAAAAACwjjDBVggTAAAAAADWESbYCmECAAAAAMA6wgRbIUwAAAAA
AFhHmGArhAkAAAAAAOsIE2yFMAEAAAAAYB1hgq1UI0xIdDY4HA3B4UIfCTXV
OBf6YqnSp56K+RY6a5pCibLLp9HvdTgc3v5KTU6WCC4Vpxqt7FRRltRQsPmF
+U6Hw1nBZjPrWdgGqyzR5a5x1vlOzLySqUjb+NLgjG1R0TYTu6DhoLiz7pyx
C1Fx09Xso+LPTJvFHwRb/qxU5Qe6BCaOZ8pWkVYBADMOYYKtlBomSAeohuSD
UsIEmx71zUyXxe6S84XWYE84sC1sn15TMYQJFhEmzEaECbMNYQIAzDaECbZS
apgQ7/b52tOv1mULHI4Fjaty7wT6k1PV/fG1KBFp99QvVwcRhAkqelU0m8U2
C63UHRqZ7nJMr+GIb0W9e++cWatPWupksLnJ5VPtJSoSJqRinc3uWl81dhRV
DxNoVCUgTCgXYQIAzDaECbZi5TYHox/ZGRwmSL/dmuN/wgQVvSqazUx1qeY8
qZHb6QR0hUn7NM1eoiJhQhV3FFUPE2hUJSBMKBdhAgDMNoQJtkKYQJigRpgw
F9Hvs4YwQQeNqgSECeUiTACA2YYwwVaqGiYk+/weaeA7xzyXuz2aVHxEe1A0
Gg+3u+ueFj8rfLhhRShuONu83u5ILNDS4JonftX5dJ17s3JGiq/ljfaQPgzO
HKukhkLeJleNOJX59S3BwVHNBJKDXV53bY0j+wHd2RgtoGAiEdnqaZCn4Khx
LW0OnFBNQlVvi2scOvWWLkiwpV6qVkfNYo8wkbjOiihc2lS8x+demJ6Ga6kn
dKFgFeUzWl+6fRPtm5kjqGQssKJervDGrTGpgMnoVk/9PHnRmoNDxW9sTvT6
PUtd6TqtbWjeEcsuqNwBNLU42RpL14lz/kJ38ILib2eEtlGX/pvQxtrDcVXz
yCzR6GCorVH6mHP+C9ryJ08EmtNFFafv61ev/d7MxiKskSZfJL+kiYh/Rbqd
i3XeFkkqZ62ifFP6t7oapKaiaKIXAvUOx4L2mHaGYgXWBbL1kBSWzp3Z0Oqb
OwtuAdkyCM2+Pf2tmlq3t2tQUSnZ/ngy2t4g1IxzQ2wqr+ee3S7iPd5GqckJ
bSN0WfyTuM2+kq7vxvwtpaytQEtqvWrydq0ovNBo5YLVun196lJotvomXzRz
x01++yzQrVC3QLHytdtGIuJLf8A5/xVvaCilFyYkBzub04WZV+/ZGk1e1m6w
hVtphlGj0lvkvB2d7vKptr68bUcr28EUl1ourVC34lJrCyltlcGVdcKUG8U7
MjR75sxKnIiH01tuTX1LKD4h/CklFElub86nG7Wrdaoam0PRyZb6s5IMrxCm
ov78Sd8CYW3tUv7ARr1Ox4LN2s3f3CykYpn85SrtNzTDxA+0bm6mflO9tWbq
X3e1BjOHE8LPq79P+/OqWFhfwzyxerMVV3QfnujN7HCE/VVbaHCUMAHA3ESY
YCvVCxP8nV7XvAZvZzjSE/QuFQ8BXBuyo16pD4pSMW+tcPgh9ARDkd5wUOil
OgucfFGHCcOhRqfDKRz0CjPqDQVaGmoMzhUmhyKRXr9b+O7zraFe4d+R2LBU
HOlYpXVXsHFenXurUICQf7l45Olcphw3QDgyd0kHAMFwbyS0o1k8iqj1RrWB
Q64OtEd9I5HWWkd2CuFO4aBCnEljZ+6gLltvdfLiZOtNeZh3Odgofk/ozwrT
kevK1bisTr0iCpc2FdvgEo52GloCoUxJ5I6bYRVpFFhf5sOEFq93oVThmcWs
74gJxZZGShRK1VovLqYnXGisg2RklUvuOglfEabjS6+4oFynqeGYsAj+5cK0
3f4CiyMYjflecIr9iBV+ccF7gv6WRt+J9NLGd4hVLh5YdkXSbcyhWfvSEq0J
BpfNl2s1tNVdpy5/Yq/YTuuW+8Sidgn9tRplLcU7hb+m555uG87G4OVcAePd
HpfUqRE3KHGdtnpa5PZZNExIDgpLtE1cq3VrhPUlLEIsIVaDsolK/37Wp+5O
xAOLHY7FgXQDFY57a7MFSFeCqy1q3OXL1klNegVJS62zH1gajHTUK3vTumGC
d0Pj/KXidDJ12xw+I2wLrvQ22+TSbinlbgVaqURM+PqaOrEZbYtIFSj3geTC
+4NtrhqpYOFOrzgLh8urGDpS7NGkt9ZMq671yssvtc9Q6/O59hkZMuhcSVtQ
jdCJk1qgtLDORsVgBal+r1gn8v5WXjvOxkZtxzMeahIDm7rluWbmWtZYp9g2
C7dSBaNGZWpHl09axel1Eenyu8UpNIYKnAvO7bTV61dV+fJWEI60ONN5R6dR
mOD1CluuOJ3Mzr8lPChskrVucZOXy+Nw+U4qClCVzaHoZEv+WdHmgekxZByO
FeFcUxPjBYPGb2IWUyZ/uUr+Dc0w8QNtOkwQttY6uXlnt1bVar0ccs+TNtit
2Z827c9r+rDnSCCzz0rPotg+PBXdIBZb3lfIa9+5rLGBMAHAXESYYCtVCxM0
xwlSx8TRHEkfFakOilJHmsWjhT7FJJLJIkdlmcQg3iH90Cu6Xea/myYdq2h+
96Xjz9wxWLLb43Q0BJRzkc7oGZ/N0Rz1JcMrtN1D4c2Q8KajPjsXw3pztmbq
TW86crygWBFFSpuKiNW9RnkAk0xq+sUFL94utL7MhwmOBa192RUlNw9F11Wa
i7PgtQTSYmo7Kckuj1inO3JvmrjYW17dLm+/XsM56XPldRNSJ33CkaRzVWa1
pJdIVRi5/JmSxANCn/FHQWVZc+1UnMWC1l5FR3I02vqs4oBfunIgG5KoFQ0T
JDpXpKuaaLJL6BguUB1XSzN1d8lFkBre0oB0xjYtvqtB+5X8Mggz3aFa6HCL
ss1LZfhRQ8PC1rAi59ELE8Q2qWkbYqBwRN2EFCGkta1Ay/A2B03bkCrN0ZJt
GFOxvQHl6Ve55J7upHoiRW9GCAd6lOtOWthc+BPz1Wr7Zal+r8uhmrLe9hIP
LnMqGkbBVppPp1GZ2tHlS/QEVM9ZkS+VKXCuvD/duFTrNxkWKze3D5F3ZQ2N
ywKxXCapFyaoztSn0uGDszmSrU95A8xtUFXaHIpOtvSfFankinUkruKGpQ2K
32J5Frn/VavUL1cZv6EZJn6gzYYJelurYjdu6udVPuxpWFrX2pPITaroPlzn
d0RKVwgTAMxFhAm2Ur0wIdMNSZOOWLK9fp0wwdNj8mFd+WFCnX/IZJENwwTt
Nd59rYr+snhc5NT+4ktXkP5It383pT3qkw5a6nfkfVZ6v65DeRbJoegfZRcw
U28G04m2ORUrolhp5W7Um2GD6jYbJuivL/NhwvMBVa9GXEz1ssvlNDzQUp83
17yvmHjxMEEqXv5F/ulCrHIqD4lV7+eOwHWWSN1dlbppz/sHjWaRV+HSCcTW
9I0K4vo1eiBFZcKEqZGQW10J8R31uZmKDS/v3GUy7NFeL51XBu3VDuKk6nLf
ksug7YLphgk6bUOnCVVqK9AyDhM06yUe/FGB3UL+tlDmXfDKVp3qbRXbaK9m
UZKhJuWUDbYX+aJ3ZZig30r15Dcqczs6E4pd/q2709Zmy3L/XbOCdMMEVVda
3r+pSyvVTHYjrdLmUHyyZfysSCXPdmnF5tcQ7Bf+m52RtFEoL1TIm1QFfrnK
+Q3NKP4DbT5M0GQm6vTMYGFj7QvywgRNeYruww1+R6S9LmECgLmHMMFWqjhm
wuX8N7NH4+qDIunaTunawvBg8Uf4qXu78okD8freaKJ4x8AwTFCdZ59SHydL
h3MGjHoB6tO+3R6Dk1YxrzN3IFe03qSjXKf3RN7MlCuieGnlEyLi1c5hncuq
TQzAWGB9mQ8TVCeFdZe9YIdCWkzds1qxDeK53+zBcdEwwahW5Yn5ntU/0k7s
bVSsU50l0qZenY3pa1z7Ne1UmoU+eZ1KR7zLjB7WWaEwQTzZp+zsiDPNnrOT
GrABwyNh+WaW/BOeyrLpd6X1x0zIbxu6TagyW4GWYZig7QrpLFFqOBbu9PvW
eBqeTw96oKg002HCRHKwPxRo9zU31dWl715PL6zUZ/Hkt1FVyzfaXtTbpnEr
1ZPXqEzu6PSNDEa7Ar72ZvfzdemBQQrshaRZa3qv2fczq0l3V6YXJmhWos4v
gmqwzSptDiYmW87PijKWFC9AEiM4cetORwFSqmZ0AVilfrlMbI/aUThyRSr6
A20+TCi4tRotrOY4R29XUHQfbvQ7wpgJAOYmwgRbeWJPcygUJkylBxWUB2YS
Du+jhSKFvEPERMT3SnrUowZxUKNSvjtlMFi08lhFOt7O3BqseRmNIKVaQOPh
oFXHqEXrzVSFmyqtOA6bPAiVc6HbrxqEytzTHIzWV0kDMBotgvHHjKdpOKmi
YULBwbqNy5DfbdHt0StqMtHra0wPWdmgGHhN+thyv976ku9DL3zAWakwQT7B
nTmWFk+Y5k52y3det+7NL6Hxbf6Gxc4LE/Iam9EAjIUnXtGtQMv00xw0tRoP
vyleySwO2tni820Nhve21jlKDhPE22qksQFdSz2t7b5AlzwSSHphjVq46n2j
7SXvfYNWqievUZnc0eUvX2xzvTxOb8OKVl97ICSP3FIsTNC5zb/4VmkwAGOR
iefvqCu/OZiYbDk/K8LiZLZr8UoAOUMQEwb5AyeEvxregVKpXy4T26M0Cofi
lRvfpugPdGkDMOYtRbH61AsT9HZH5ezDCRMAzE2ECbYyU8IEWTIezhu5Lo9B
bzcRDbbJI+PlXUpa+LtFj1USocbMOPOmqY9SVGexlaQTFpnTVebChLr8Az/V
F0sobTLe45dH01LcxF3KoyHz19cTCxOkxdS/MkE8E5e7nLV4mGC4dqYKnFGV
TmNl14WpMCE9u37N6GTSLAwvPChUhiKzLjFMmEpFxDRBunxXrEPFJdlSFRld
vGHEYPVJ5ygz7bNqYYLVrUCrvDBBHolCdSe1/GyI0sIEaS+hvpVeatXKMEHn
nvf8MEHnRgODkCGvlerJDxPM7ei05FstVJeXF9sLGYQJ0laZbahVCxOqszmY
mGw5PyvytQfiqhf/kfm8eJuAeDWLeDPC8/k3i2XmV6FfrrJ+QzOeaJhQ7OdV
f2GL7sPNXKYFAHMHYYKtzKwwQZLqa12QfoyXrkLHmdLIDAWOx6Qf/VLDBPnA
yfiIS496AaWjZaM7T7PvF6838SySdjCKzM3R2S+WWFp5nKjcgZBeFRWkWl+q
rmKGeGqs0mGCvJhGYyYsLmXMBKO1Iy/PCofhmAm590sIE+RCis0j/UwxaRaG
A6AVKINMqgfNcay2x5puOUXCBHlwBjFDEKep6nhKVVTKPe9T+uNIpK9/yF6g
XrUwwepWoCX1qkoOE3TanlSTyjAhtKxY+9Tp78ttJr2wBj0++dLr7JSl7bop
pN13iHGH0VXuylaqJ79RmdvRaeisX/mq+GJhQl6D1BvJpAphQrU2h+KTLedn
Jd1algbjwn44O0KpVMOtfeIqLjQEYqV+ucr5Dc0wESZIAXKjeus1saI1nzH1
86q7sEX34dJmnj9ihnZvAABzBGGCrcyEMCGVVP98S2NSGZ8lVPXRNN+V7n8v
MKS2NF/NIY2pYxVX/tPNkn2hsOHBrt6RjO6Y2MqnB5o8JNMftj33xSKlFaps
QvkX9QhdulWkVnB9SVN7tlU5rHd6vPQKhwnyV3Sf5qA6xWziaQ7ywOOatZMm
VO8Cg6c5KE7aFg0TtO1UOUCBNM553nPlLgdDmUxM7nEIH9DbJKRJqW5YTkXX
SE9/U5ZH58S0XqAnHtwu8O0Q/qu58ll6XkBeA47uNd4CMk+48CgPzuXRNp71
Zha1emGCxa0gj85N+ibDBOUAgOmnJyhLbnRdQU7eAKHaTV4axk3zsA959APl
+pXGkVM/skReHblts1ArNSqYTqMqtqPTkFaccqedGeW+WJggTFM5uKJcLQty
21HVwoRqbQ5FJ1vOz8pU+oKN5tZVTqf6kpgFbd7mAg+FND0LE79cZfyGZpj4
gZbHzFSOfilH3KWFCeZ+XnUXtug+XErt9J+lQpgAYO4hTLCVmRAmCH9yPt3Y
vEO8oVJ8QHPeY87UVGGCcChes9gjPttaenR1vdPoCXpp0hG1s35DKNIT8MtP
WzNxrCIe9UkXQueewC6O0mB0o712AUXpB1jnntbtWVyjObY3c0iWPrZRPlB+
nsffrv5i4dIKXQChGPIj3XuCPvGZ9api6FSRZtkKri/pUfXSTejyI9oX1jS2
tVb+NgdRPNRUI9ap/Nx2YVlW1Oc/7d1EmKBYO5lq8bc0+tLHgZnngy/2iEsk
1nnjfG0zKxomCP+uqV8hrQ5hCivr1Q/pkxfEUbO0OdCVWxBFm8yVIdPUWz0t
6RNxqROKJiE94d3V5vVoyyMdJzvrvV2R8A5/WKxn3auDxI85nc78U9hCw5Pu
Z6lzt6cfEy/eWV/oChZp8d/0emtrGqRaDXd6pZvxlY2timGCxa1ASx53vdYT
6ImENgRihoVXx6TSqslsC+KT5V0rPJqLRuRrA1xvBsK9Ie8O3Y57IiR2Omoa
xF1HONjurpvn8ajPlsrRgTAjn9QGfMvrnLU+3xr1+k1HB+nVIazBhnlOz2af
Ytss3Erz5TcqUzs6reFQZhDddOFrVnjMjJngafO65jVIO6JwsE3cKtU/HNUL
E8reHFpb5xXYHIpOtpyfFamGxcc3CJu1Mg0Tb3CQ3isUZJmbhZlfrtJ/QzPM
/ECnYum2LW8jbQ01tV7vm6WGCbmfV6lRST+vTo9P/fNqcNhTdB8uRwfpxRd/
Nxc6XZt9rYommjrhq3M669pjJh8xAwAzFmGCrcyEMCF1IextSo9zLo5U1hYy
GtZQogoTkv1+z1KXPLh5TW2DZ2skMVHgu8IhTWbkQOf85h5pNmaOVQQTiYhw
GC8PTeacX9fkDZ0pUEq9nlpyMNSWm0L9Cn9Ec2Rj5pBMmMyZYPMLUm1JE4mO
6H2xQGlT8XBbwQXJryK1YusrJY5rJ03f+XR9c+dgqhpjJmQqY7DL616YLsv8
Fzz+Xu3hvKkwYSq9dtLDyEvVElEUJtGrbGZub5emhRYNE5LRrZ6G9CD84jB6
eeUUBwMs+AGpDC+knwYgNvUduWPOZJ/PLX93nsvdHk3qlSc1FGxeLK3Vp5ul
E/D6txrJz+jMu9ZXLkHEV+p2KpRhJCp01Wvk5RIa21DRk/sVChOmrG0FeYRK
lkcmrFkcGDQsvLZWs6tGuS2oS56MtksdYaEj32HwVEZpk5Q/42ryCZu8csyE
9Ix7FW1AGodWp+Uns9ORNpa+pPoeiqKtVCuvUaXnUnhHpz8duW0rG7CJMRNU
LV87+m4VwwTpvYpvDkUnW87PikS68EbzyA/5GvvCj9gwNwuTv1wl/oZmmPyB
VlVsdhspLUyYMvHzajwoZbF9uLT48k+M/COSUjdRwgQAcwZhgq1YCRMwQxg9
Gw6YPowthqoxepoDAACYboQJtkKYMPtJt/yXN7YVUC2ECagawgQAAGYqwgRb
IUyY7eK7GvMG6gemHWECqoYwAQCAmYowwVYIE2aVRGh5nbvF55dG4Qt3+pul
Z8HXNIW4LAEzDGECqoYwAQCAmYowwVYIE2aVVLzb51maHp4rPcpTT5zBEjDz
ECagaggTAACYqQgTbIUwAQAAAABgHWGCrRAmAAAAAACsI0ywFcIEAAAAAIB1
hAm2QpgAAAAAALCOMMFWCBMAAAAAANYRJtgKYQIAAAAAwDrCBFshTAAAAAAA
WEeYYCuECQAAAAAA6wgTbIUwAQAAAABgHWGCrRAmAAAAAACsI0ywFcIEAAAA
AIB1hAm2QpgAAAAAALCOMMFWCBMAAAAAANYRJtgKYQIAAAAAwDrCBFshTAAA
AAAAWEeYYCuECQAAAAAA6wgTbIUwAQAAAABgHWGCrRAmAAAAAACsI0ywFcIE
AAAAAIB1hAm2QpgAAAAAALCOMMFWCBMAAAAAANYRJtgKYQIAAAAAwDrCBFsh
TAAAAAAAWEeYYCuECQAAAAAA6wgTbIUwAQAAAABgHWGCrRAmAAAAAACsI0yw
FcIEAAAAAIB1hAm2QpgAAAAAALCOMMFWqhEmJDobHI6G4HAFJymIeh0Ox9Jg
orJTRVlSQ8HmF+Y7HQ5nU4g1kpaK+RY6a2ZihSRCTTXOhb5YaroLktUvbs3e
fotTYZ+QUZn6nLmibeLyRUv8klgpbSV+6Qkys1DV+TGdwWbuXnRGSJ3w1Tlr
3F1Uzyw3HBQ37E7D9Zjoctc463wnZs5vdumkX6UCy4i5jTDBVkoNE6TjH0Py
foMwYY67LP4OOl9oDfaEA9vCrJG0mXsYTJgw1xEm6H2JMGH2mbl70Rmh6mHC
RCKy1dNQWyMd0NW4mryhM0nDDyfCrQudc3i3U0WECRUnNd36p53CTJ1P1zd3
DmobrlTnun0WWbI/0NxU55on/WGeq6ElmDcJlIAwwVZKDRPi3T5fe/rVumyB
w7GgcVXunUC/uO0RJqgMR3wr6t17Z1/BjcQ2C+vdHRqZ7nJMq9TJYHOTy8dx
VHkIE8qXiLR76pere1u2DxP0tseKhAl6tV0h1Q4T2EfNcDNvBSVCTU6Hs869
JhDqjYQ7vY1i18zl7c/r0o7EQm0NcuJgYrdTxY1otioWJswF/3975+/bxpH/
/b+Bf8W2BFQYSGFVYmkCBkzARQgVIeBCYAqBSHGECoNQIRAuBMKAQFwR0EUA
qjBWRQAKT3zUJacLlegJfUkeSzknVBIhpqM4jKOLGfu+Xz47M/tjZndmd5ZL
WbL2/YIRxDS58/szn3nvzGeixYTZdYzTXn0hQ7ruhtndMVsrpHPm1npCx92v
W725sOwtWNw1C6N/t1BZbba3u92dTnu9nLe+vVDvnSbPXEqBmJAqkhxzUPk5
EBMELt1er6neEl42aCe/zMu3swViwvTISp16MUE2HmciJpxhHztrMQE26oJz
8Rpo2NkwB6+4D057tauZzI3WgP/OMjnhmJkrVpfzevlPp6EOBWICYVYdY9y9
bWSMUvvI+2i0XTUy84IORvIz33io/dDd2nwmU7g3iP4qkAExIVVATDhzICZc
Ri6eH/hGATFheiAmSICYoPjtZe4VbzpvRAP17xiZTKXjvb8dmu8Wqvd6w1f6
+U+noQ4FYgJhRh1j3K1mMobf1A9a1zPG7a6nJuzWYtrSi35Q7oIDMSFVnKmY
MNptVm4yETtXXu/5jx+NDsy1MjugJD/iJCAzO/QJeXpIKmNcyS81Okf8tqZh
e5H9ZNTbqBRoQtmFcmM3kM6w21jKZdlT3ql3jqRu3uhgq15esL9V8B2nOh10
1p2czOWKy+bAzbN4Qktpyk76rZWiUxv58l27uqSV7P/QWUqM9luVG1n6hFJz
nz7gpNdcLtBMZ0meNbZsDXealcWcfWZyoVi913cLypwH1YkzP77Tl4v1Lldj
IanwJRofmvV3aBdidS7m3ypvddFpuGvlxh7/jND2Yt/42qwv5a8YTp1/QBtN
OsvzH0pO3rGu4nXR8U7Nemp5y59kb836uOpNb8Ou1TosA6Rn7oROqu6C0euu
9EzrId/nnenv9KD9F7JNr0TO19CB4PVnZ1y8GnTWSjR1q2+wF1Jjq9JK9qnD
kmSkhI9Z+SiYuiyRKcpsgr/XVVv77i9GnWXrKeK4ftiYt1r2Az6nvbqRmb/b
V+U9NAmCYADpeJyFAaQ5C4SssfskP15YfcrGyyRq3GlZm8l4sN0oX7O7bW6x
Yj7myiSMKVIorkW9zmnaHc+4crPaDjY66RV5+wvvkF4Rtu4OH492cqyeZcmR
MVh0z8nyzaSsbQnU2th1kqBQo4O2Mwtkb1Sau6NBnMrXqBNKVAeesoB8Wd0h
8LUdqpd0yOVmjz8c53XadvUasVV0u7NvUJ+ZsYpGLPK1cvux8I+JfI+wBgqt
at8CbQYTZQSD9/NO0/jRERNCB1HYHM1Z0UZxjtjt/mR6V2f6GvAHkWjwfVjX
1Fsl3azaD5krVDZ6o6OomAn+utUb+N7vo1wL3hzRPiaaI+k6OvhhnL7qe1ao
dfX7ZuudQYjvqlBmSBJXG+5EHl+YhZiQCIgJqeLsxITmZj03V6xvdrrb7foi
saK5O1wEOHrEyZoIyBdUR5wE/AuH8eNWyWCW2ezudM17VTLjCOf72ITebK/l
8+822tvkDCD7Dr/TabxXz2Xonr17zmEro1QSFl/kW721nGUsS2vtjpuWe5xq
3CfHtewnsMNW7Lejg51u969l61n5VZLJ7k5/KC3hsWmVxbDmOLc2nJLqiwnV
O/X8tXJzyy1mobVvVbJRuG3ludO+XSCXLyx3QifRUfd2jvm65ODYdrvxLlmQ
GrfabK01Pu5bpWi+az283CTF6faPFS121KmQI2x2jXW3WrXlqnmslYpbotoH
7dJbdrs02Xe4/A/vkzpjLWs9v7qY5WaT0PZibXaXVAjx2LfoEbmNaomtHyPF
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
    "], {{0, 260.42256995606283`}, {834.6723382693166, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{834.6723382693166, 260.42256995606283`},
  PlotRange->{{0, 834.6723382693166}, {0, 260.42256995606283`}}]], "Input",Exp\
ressionUUID->"71b4b240-ea0b-4d8e-8226-9c9dcb4117cd"],

Cell["\<\
What is the largest sum of consecutive primes? The sum would have to be small \
primes to be long. For example\
\>", "Text",
 CellChangeTimes->{{3.8695176339391117`*^9, 
  3.8695176606380053`*^9}},ExpressionUUID->"11b6b938-4887-445a-b9fd-\
1193f604f7ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"100", ",", "110"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8695176621270375`*^9, 3.8695176661730294`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e43ad441-03a0-4f36-856c-ed2d3cca2737"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "541", ",", "547", ",", "557", ",", "563", ",", "569", ",", "571", ",", 
   "577", ",", "587", ",", "593", ",", "599", ",", "601"}], "}"}]], "Output",
 CellChangeTimes->{3.869517666787056*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b3ca1433-8b49-4c84-aae0-bb5b3b5014ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"100", ",", "110"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8695176689058666`*^9, 3.869517669493034*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bc6e0977-57d6-4b3e-a306-8ed16cdaa473"],

Cell[BoxData["6305"], "Output",
 CellChangeTimes->{3.8695176702440386`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"65c81e5a-0684-49ef-9fcb-041684638a0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8695176689058666`*^9, 3.8695176755738573`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"6458b123-41db-41da-87ad-8a9d7efbc764"],

Cell[BoxData["129"], "Output",
 CellChangeTimes->{3.8695176758828535`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"eb1e48cc-5a07-47c8-9e2c-c8b24bddc729"]
}, Open  ]],

Cell["\<\
The first ten primes can be extended for a long time just to reach primes 100 \
to 110 so the first ten primes would be part of a much longer chain.\
\>", "Text",
 CellChangeTimes->{{3.86951769196181*^9, 
  3.869517717274042*^9}},ExpressionUUID->"abbae0ae-3ba1-4bfa-aa93-\
d0e267975cb6"],

Cell["Find primes below one million:", "Text",
 CellChangeTimes->{{3.8695177265296135`*^9, 
  3.869517733886154*^9}},ExpressionUUID->"23b07d2b-c983-47d0-a2c6-\
c5d68d3dc76a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "PrimeQ", "]"}], "[", 
  RowBox[{"Range", "[", 
   SuperscriptBox["10", "6"], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8695177366661406`*^9, 3.8695177473671465`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c8859eff-4cc6-4310-8cfe-af5ce539913b"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
        "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", 
         ",", "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", 
         ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", 
         ",", "71", ",", "73", ",", "79", ",", "83", ",", "89", ",", "97", 
         ",", "101", ",", "103", ",", "107", ",", "109", ",", "113", ",", 
         "127", ",", "131", ",", "137", ",", "139", ",", "149", ",", "151", 
         ",", "157", ",", "163", ",", "167", ",", "173", ",", "179", ",", 
         "181", ",", "191", ",", "193", ",", "197", ",", "199", ",", "211", 
         ",", "223", ",", "227", ",", "229", ",", 
         TemplateBox[{"78398"}, "OutputSizeLimit`Skeleton"], ",", "999221", 
         ",", "999233", ",", "999239", ",", "999269", ",", "999287", ",", 
         "999307", ",", "999329", ",", "999331", ",", "999359", ",", "999371",
          ",", "999377", ",", "999389", ",", "999431", ",", "999433", ",", 
         "999437", ",", "999451", ",", "999491", ",", "999499", ",", "999521",
          ",", "999529", ",", "999541", ",", "999553", ",", "999563", ",", 
         "999599", ",", "999611", ",", "999613", ",", "999623", ",", "999631",
          ",", "999653", ",", "999667", ",", "999671", ",", "999683", ",", 
         "999721", ",", "999727", ",", "999749", ",", "999763", ",", "999769",
          ",", "999773", ",", "999809", ",", "999853", ",", "999863", ",", 
         "999883", ",", "999907", ",", "999917", ",", "999931", ",", "999953",
          ",", "999959", ",", "999961", ",", "999979", ",", "999983"}], "}"}],
      Short[#, 5]& ], "line" -> 6, "sessionID" -> 19462510481779022478, 
   "byteCount" -> 628184, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.869517748481162*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"84bfb2bc-d497-4d9b-9aca-8a2a7838582c"]
}, Open  ]],

Cell["Get the largest prime:", "Text",
 CellChangeTimes->{{3.869517759854574*^9, 
  3.8695177635545783`*^9}},ExpressionUUID->"e5a5f03c-4677-4525-adf0-\
f33d9b53766f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{
   RowBox[{"Select", "[", "PrimeQ", "]"}], "[", 
   RowBox[{"Range", "[", 
    SuperscriptBox["10", "6"], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8695177668875804`*^9, 3.869517767907588*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"622196fd-9ebe-41e2-8b2d-f1367a66c4d9"],

Cell[BoxData["999983"], "Output",
 CellChangeTimes->{3.8695177688657074`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"2ce1b0a6-6237-46fd-9365-13c3248bc012"]
}, Open  ]],

Cell["How many primes can you add to get to this?", "Text",
 CellChangeTimes->{{3.869517773560895*^9, 
  3.8695177812804456`*^9}},ExpressionUUID->"7a4840f4-a79d-403b-8503-\
1cc24230409e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  RowBox[{
  "ResourceObject", "[", "\"\<PeterBurbery/CombinatoricsPaclet\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8695177832306166`*^9, 3.869517786224601*^9}, 
   3.8695178574520807`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"dd75acde-7b8f-4889-a0ae-e9285717a260"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"PeterBurbery/CombinatoricsPaclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.7.0\"", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"PeterBurbery/CombinatoricsPaclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.7.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\peter\\\\AppData\\\\Roaming\\\\Mathematica\
\\\\Paclets\\\\Repository\\\\PeterBurbery__CombinatoricsPaclet-1.7.0\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Combinatorics functions for subsets, tuples, and \
permutations\"", Short], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "PeterBurbery/CombinatoricsPaclet", "Description" -> 
    "Combinatorics functions for subsets, tuples, and permutations", 
    "Creator" -> "Peter Cullen Burbery", "License" -> "MIT", "PublisherID" -> 
    "PeterBurbery", "Version" -> "1.7.0", "WolframVersion" -> "13.1+", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {{
         "PeterBurbery`CombinatoricsPaclet`", "CombinatoricsPaclet.wl"}}, 
       "Symbols" -> {
        "PeterBurbery`CombinatoricsPaclet`PermutationFromIndex", 
         "PeterBurbery`CombinatoricsPaclet`TupleFromIndex", 
         "PeterBurbery`CombinatoricsPaclet`OrderedTupleFromIndex", 
         "PeterBurbery`CombinatoricsPaclet`LehmerCodeFromPermutation", 
         "PeterBurbery`CombinatoricsPaclet`PermutationIndex", 
         "PeterBurbery`CombinatoricsPaclet`OrderedTupleIndex", 
         "PeterBurbery`CombinatoricsPaclet`TupleIndex", 
         "PeterBurbery`CombinatoricsPaclet`SubsetIndex", 
         "PeterBurbery`CombinatoricsPaclet`SubsetFromIndex", 
         "PeterBurbery`CombinatoricsPaclet`PermutationToTableaux", 
         "PeterBurbery`CombinatoricsPaclet`TableauxToPermutation", 
         "PeterBurbery`CombinatoricsPaclet`DiscreteInverseLessThan", 
         "PeterBurbery`CombinatoricsPaclet`DiscreteInverseEqual", 
         "PeterBurbery`CombinatoricsPaclet`RepetendCycleLength", 
         "PeterBurbery`CombinatoricsPaclet`NDigitNumbers"}}, {
      "Documentation", "Language" -> "English"}}, "Location" -> 
    "C:\\Users\\peter\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
PeterBurbery__CombinatoricsPaclet-1.7.0"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.869517871218791*^9, 3.8695178940517607`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"0e488d71-36cf-4a38-8dd8-aaff0a890aa5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`CombinatoricsPaclet`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8695178626624837`*^9, 3.8695178644690175`*^9}, {
  3.869517899246311*^9, 3.8695179245554485`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"99419327-d586-4a07-a45d-7fef0b073f0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "DiscreteInverseLessThan", "]"}]], "Input",
 CellChangeTimes->{{3.86951792654546*^9, 3.8695179406168118`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"91ab4d13-e777-480f-8932-cde08c1138de"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan",
              
              ButtonNote->
               "paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan"],
             
             "\"paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PeterBurbery`CombinatoricsPaclet`\
DiscreteInverseLessThan\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DiscreteInverseLessThan", "[", 
                    
                    RowBox[{
                    "PeterBurbery`CombinatoricsPaclet`Private`function_", ",",
                     "PeterBurbery`CombinatoricsPaclet`Private`n_"}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"NestWhile", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "+", "1"}], "&"}], ",", "1", ",", 
                    RowBox[{
                    
                    RowBox[{
                    "PeterBurbery`CombinatoricsPaclet`Private`function", "<", 
                    "PeterBurbery`CombinatoricsPaclet`Private`n"}], "&"}], 
                    ",", "1", ",", "\[Infinity]", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "/;", 
                    RowBox[{
                    
                    RowBox[{
                    "Head", "[", 
                    "PeterBurbery`CombinatoricsPaclet`Private`function", 
                    "]"}], "\[NotEqual]", "Function"}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan", 
                    "paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"PeterBurbery`CombinatoricsPaclet`DiscreteInverseLessThan\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan",
              
              ButtonNote->
               "paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan"],
             
             "\"paclet:PeterBurbery/CombinatoricsPaclet/ref/\
DiscreteInverseLessThan\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PeterBurbery`CombinatoricsPaclet`\
DiscreteInverseLessThan\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "PeterBurbery`CombinatoricsPaclet`DiscreteInverseLessThan", 
    "Documentation" -> <|
     "Local" -> 
      "paclet:PeterBurbery/CombinatoricsPaclet/ref/DiscreteInverseLessThan"|>,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, PeterBurbery`CombinatoricsPaclet`DiscreteInverseLessThan, {
      PeterBurbery`CombinatoricsPaclet`DiscreteInverseLessThan[
         Pattern[PeterBurbery`CombinatoricsPaclet`Private`function, 
          Blank[]], 
         Pattern[PeterBurbery`CombinatoricsPaclet`Private`n, 
          Blank[]]] :> Condition[
         NestWhile[# + 1& , 1, 
          PeterBurbery`CombinatoricsPaclet`Private`function < 
          PeterBurbery`CombinatoricsPaclet`Private`n& , 1, Infinity, -1], 
         Head[PeterBurbery`CombinatoricsPaclet`Private`function] != 
         Function]}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
    "FullName" -> 
    "PeterBurbery`CombinatoricsPaclet`DiscreteInverseLessThan"|>, 
   True]]], "Output",
 CellChangeTimes->{3.8695179410758204`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2bba7b65-ff05-4d91-905a-c9c1f726ee4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteInverseLessThan", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", "#", "]"}], "]"}], "]"}], ",", 
   RowBox[{"Last", "[", 
    RowBox[{
     RowBox[{"Select", "[", "PrimeQ", "]"}], "[", 
     RowBox[{"Range", "[", 
      SuperscriptBox["10", "6"], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869517952754921*^9, 3.8695179816385107`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b802fa31-bb8c-4603-bf52-92213ab64564"],

Cell[BoxData[
 TemplateBox[{
  "Range", "range", 
   "\"Range specification in \\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
\\\"#1\\\", \\\"]\\\"}]\\) does not have appropriate bounds.\"", 2, 12, 2, 
   19462510481779022478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.869517982536496*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"021d65d4-dc25-4863-b91d-95c2f3938c04"],

Cell[BoxData[
 RowBox[{"DiscreteInverseLessThan", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", "#1", "]"}], "]"}], "]"}], ",", "999983"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8695179840169106`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"38fedd39-c533-4784-8a8c-e1cfa7e1b6e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", "+", "1"}], "&"}], ",", "1", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Prime", "[", 
       RowBox[{"Range", "[", "#", "]"}], "]"}], "]"}], "<", "999983"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869518002842104*^9, 3.8695180373717575`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"62cc0966-c995-4291-99af-77640242e7ad"],

Cell[BoxData["547"], "Output",
 CellChangeTimes->{3.8695180377814217`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"fe363319-c690-4940-a425-5185c6bfa4e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", "547", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8695180425040874`*^9, 3.8695180479140825`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"94a5058d-a335-4399-8247-e8a0e8c5d107"],

Cell[BoxData["1001604"], "Output",
 CellChangeTimes->{3.8695180482820992`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"dcd48bf9-bd1f-44db-a939-89c6301f2e09"]
}, Open  ]],

Cell["\<\
The longest possible chain of prime numbers is one less, 546.\
\>", "Text",
 CellChangeTimes->{{3.8695180524955163`*^9, 
  3.8695180663176055`*^9}},ExpressionUUID->"5b62ca93-890c-4646-970d-\
2b15911b8b9b"],

Cell["How long does a large take to test partitions?", "Text",
 CellChangeTimes->{{3.869518080003873*^9, 
  3.869518088237587*^9}},ExpressionUUID->"5a3b33fb-501b-4ed9-8496-\
1b10846f5a4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"primesuptomillion", "=", 
   RowBox[{
    RowBox[{"Select", "[", "PrimeQ", "]"}], "[", 
    RowBox[{"Range", "[", 
     SuperscriptBox["10", "6"], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86951809241514*^9, 3.869518104099744*^9}, {
  3.8695958679338923`*^9, 3.869595868471447*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f62f44d9-2821-4634-b53a-34e00f9fce82"],

Cell["Take the 50th last prime:", "Text",
 CellChangeTimes->{{3.8695181539627137`*^9, 
  3.869518158497718*^9}},ExpressionUUID->"117c9654-26e7-494a-8408-\
fb9c188e1114"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"primesuptomillion", "[", 
  RowBox[{"[", "50", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869518162537274*^9, 3.8695181644138346`*^9}, {
  3.8695958737980595`*^9, 3.869595873947668*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8d5bc565-6242-49f6-a62f-03140b056887"],

Cell[BoxData["229"], "Output",
 CellChangeTimes->{
  3.869518164841838*^9, {3.8695958710482683`*^9, 3.8695958743244276`*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"2c72fd59-4ea9-4fe0-81c4-f37869b7bf5e"]
}, Open  ]],

Cell["Time the partition process", "Text",
 CellChangeTimes->{{3.869518169071866*^9, 
  3.869518175179862*^9}},ExpressionUUID->"c5795118-3256-4043-8f47-\
2fbe2f1ae81b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", 
  RowBox[{
   RowBox[{"primesuptomillion", "[", 
    RowBox[{"[", "50", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "547"}], "}"}], ",", 
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", "547", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869518176309416*^9, 3.869518222233995*^9}, 
   3.8695958874006357`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"b7456ed2-14f5-4f29-a16c-41317cd45ec6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.8695181890471735`*^9, 3.869518320263425*^9, {3.869595883080015*^9, 
   3.8695958993911185`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"0777446e-0b62-4c64-8323-fa475e0bef37"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8695958829390078`*^9, 
  3.8695958842425947`*^9}},ExpressionUUID->"7bf688f1-1eea-4148-b8fd-\
4f5a228714ba"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
Magnification->1.,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"eca3e66a-21f1-4ee2-b037-7686b87b5c47"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 98, "Title",ExpressionUUID->"122b802c-c537-4858-ac42-dc183fa568e8"],
Cell[751, 27, 577, 16, 196, "Text",ExpressionUUID->"0c7babec-1ac4-451c-8eea-9beecbf3f435"],
Cell[1331, 45, 194, 3, 35, "Text",ExpressionUUID->"5cfc220d-b55f-43c5-9e8e-0e6015785ae0"],
Cell[CellGroupData[{
Cell[1550, 52, 206, 3, 28, "Input",ExpressionUUID->"5e5d72c2-4f18-4bf8-93a1-9d244856b83d"],
Cell[1759, 57, 152, 2, 32, "Output",ExpressionUUID->"dbc5d191-0319-483e-836f-7c1c3f07d944"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1948, 64, 207, 3, 28, "Input",ExpressionUUID->"185f6f3e-ec13-472a-a943-2a4a40969a1c"],
Cell[2158, 69, 1329, 20, 90, "Output",ExpressionUUID->"cb8c04f3-eceb-4288-8925-be7a62d4cbf7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3524, 94, 241, 4, 28, "Input",ExpressionUUID->"fbce15c9-e354-4738-bb76-8d9dc88de372"],
Cell[3768, 100, 1412, 21, 90, "Output",ExpressionUUID->"af3aff58-e4da-449f-b6b7-ad32763ee46f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5217, 126, 277, 5, 28, "Input",ExpressionUUID->"6091bd6e-4c40-4125-8701-2b0155b9a691"],
Cell[5497, 133, 1550, 23, 128, "Output",ExpressionUUID->"5ab4908e-3473-4663-8ee9-ab3b0a64c41d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7084, 161, 212, 3, 28, "Input",ExpressionUUID->"1745314e-243d-4ed4-93ad-f328dc6d58a9"],
Cell[7299, 166, 150, 2, 32, "Output",ExpressionUUID->"ebadf271-8f38-4103-a6bf-9b6f851963da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7486, 173, 213, 3, 28, "Input",ExpressionUUID->"11b3cc50-f200-4eca-8d58-3bf101484279"],
Cell[7702, 178, 151, 2, 32, "Output",ExpressionUUID->"b0b43f16-8bb3-4a57-befe-4fb92311e8ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7890, 185, 280, 5, 28, "Input",ExpressionUUID->"ef69cd1b-7533-4a93-8c29-7f15245f5664"],
Cell[8173, 192, 16172, 213, 1536, "Output",ExpressionUUID->"f65a741c-0a40-4e6b-a821-95d28264dd3a"]
}, Closed]],
Cell[CellGroupData[{
Cell[24382, 410, 455, 10, 27, "Input",ExpressionUUID->"07bf3e41-7f9a-458d-a653-030fb338e0cf"],
Cell[24840, 422, 448, 10, 28, "Message",ExpressionUUID->"e188442d-22b9-4b5c-a25c-37fb1b72ad7f"],
Cell[25291, 434, 347, 8, 32, "Output",ExpressionUUID->"9d9536f9-8957-4b40-b365-4bab9d1923d7"]
}, Open  ]],
Cell[25653, 445, 194, 4, 28, "Input",ExpressionUUID->"d8e75cb5-de12-4265-b649-a4eb368bf6e5"],
Cell[CellGroupData[{
Cell[25872, 453, 214, 3, 28, "Input",ExpressionUUID->"d12e63a4-1dfb-43d7-ae6d-1d9ec1adb4e1"],
Cell[26089, 458, 156, 2, 32, "Output",ExpressionUUID->"1965bdcc-6219-456c-88ae-4a06870aabd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26282, 465, 365, 8, 28, "Input",ExpressionUUID->"a7e69154-10ad-4553-9e46-3e0861310741"],
Cell[26650, 475, 6172, 124, 394, "Output",ExpressionUUID->"d4fbe7c6-5ddc-4173-bd12-efd16c117e20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32859, 604, 371, 8, 28, "Input",ExpressionUUID->"383e6a0c-7b7a-4d29-a3ff-8eeb1b0ebdaf"],
Cell[33233, 614, 1702, 30, 142, "Output",ExpressionUUID->"68bc01e0-aeb1-452a-b967-5a19723bc528"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34972, 649, 528, 13, 28, "Input",ExpressionUUID->"a0e3d8e1-f9db-40cc-98b1-9ea699f89957"],
Cell[35503, 664, 1708, 30, 142, "Output",ExpressionUUID->"72cf8d83-7641-40e1-96f8-499146b794a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37248, 699, 628, 16, 28, "Input",ExpressionUUID->"f43dfdfb-4ded-4964-8b1d-faaad20cbadd"],
Cell[37879, 717, 449, 9, 32, "Output",ExpressionUUID->"71543f2b-79d4-4db5-93d0-bed1161d650a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38365, 731, 720, 18, 48, "Input",ExpressionUUID->"c2ed4fcb-de66-4af9-8512-4beaffc462a2"],
Cell[39088, 751, 416, 10, 28, "Message",ExpressionUUID->"a9778cfb-2da0-405f-b2cb-deec6ccd8b38"],
Cell[39507, 763, 204, 3, 32, "Output",ExpressionUUID->"4e1394cf-e0f4-471a-bd70-734aa4d9248a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39748, 771, 524, 13, 28, "Input",ExpressionUUID->"27f3938e-858a-4e51-b76e-599eff099f5e"],
Cell[40275, 786, 168, 3, 32, "Output",ExpressionUUID->"ca226d88-d490-430f-991d-b31472775202"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40480, 794, 526, 13, 28, "Input",ExpressionUUID->"a6ff1340-3525-453e-9362-3341b601bddb"],
Cell[41009, 809, 1706, 30, 142, "Output",ExpressionUUID->"24008445-d502-4d47-8e3b-57c3decaa7b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42752, 844, 756, 20, 31, "Input",ExpressionUUID->"e40f925e-2be1-40d6-b275-02bfeb5dc9f9"],
Cell[43511, 866, 2267, 41, 161, "Output",ExpressionUUID->"63ec4f93-a257-463c-b67d-0e257536021f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45815, 912, 756, 20, 31, "Input",ExpressionUUID->"86baf90a-4110-438a-b64c-5a6744cb0bc8"],
Cell[46574, 934, 166, 3, 32, "Output",ExpressionUUID->"6a1e75d4-ed77-46c9-86bd-2c9c2462a3da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46777, 942, 754, 20, 31, "Input",ExpressionUUID->"efc4f84f-996e-4a53-8c79-86f8c3236f65"],
Cell[47534, 964, 2323, 41, 161, "Output",ExpressionUUID->"fe849b47-1d76-442f-9e99-91e890975975"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49894, 1010, 844, 23, 31, "Input",ExpressionUUID->"ed18ddd9-b2ef-4cf2-9d66-f7a50ca03155"],
Cell[50741, 1035, 2446, 42, 180, "Output",ExpressionUUID->"004fc430-0670-4db3-bdd9-253c77d6e330"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53224, 1082, 876, 24, 31, "Input",ExpressionUUID->"6c99aad4-cb13-49ed-9d32-83c13d595286"],
Cell[54103, 1108, 156, 2, 32, "Output",ExpressionUUID->"d3271088-7d8b-4fa5-82de-40f652557a30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54296, 1115, 543, 14, 31, "Input",ExpressionUUID->"e02dcb91-12c3-4edb-b93a-3b2b7ba3c8de"],
Cell[54842, 1131, 2395, 43, 180, "Output",ExpressionUUID->"778f99bb-cc37-4b5f-bbc8-7f0312ddd438"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57274, 1179, 583, 15, 31, "Input",ExpressionUUID->"51e9dc03-c6a1-426c-9921-1f7e1a9c1dc3"],
Cell[57860, 1196, 76870, 983, 5665, "Output",ExpressionUUID->"a3d83b69-cf0c-4655-90db-78378b3f2dcc"]
}, Closed]],
Cell[CellGroupData[{
Cell[134767, 2184, 694, 18, 27, "Input",ExpressionUUID->"542581fb-d2af-442a-9813-362b9fedbdf7"],
Cell[135464, 2204, 152, 2, 32, "Output",ExpressionUUID->"136653ef-a333-4079-947f-c71eceba03d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135653, 2211, 839, 23, 31, "Input",ExpressionUUID->"f693183d-6f9e-4add-9426-8b08b6c964cb"],
Cell[136495, 2236, 156, 2, 32, "Output",ExpressionUUID->"ac1a8a87-1ffc-4f3c-843a-e4c09dc0c917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136688, 2243, 836, 23, 31, "Input",ExpressionUUID->"8b2b99d5-7962-478c-a8df-afe5e67cfc81"],
Cell[137527, 2268, 150, 2, 32, "Output",ExpressionUUID->"7ee8e657-0494-4882-9915-622264a45dbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137714, 2275, 835, 23, 31, "Input",ExpressionUUID->"e9c34bc4-e874-47ae-b3e5-ce451ecde48f"],
Cell[138552, 2300, 150, 2, 32, "Output",ExpressionUUID->"6b6c9a19-34b2-4726-a7e0-c67689742cd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138739, 2307, 838, 23, 31, "Input",ExpressionUUID->"505c7eb7-65af-4025-9b74-4dcd7de77828"],
Cell[139580, 2332, 179, 2, 32, "Output",ExpressionUUID->"d40926e6-dcba-4a39-8406-7ca7c6d55c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139796, 2339, 528, 13, 28, "Input",ExpressionUUID->"3de7a170-102c-4e9c-9336-fa50a0d444b0"],
Cell[140327, 2354, 565, 10, 82, "Output",ExpressionUUID->"979aa310-731b-449f-a986-9c84123f9e25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140929, 2369, 571, 15, 28, "Input",ExpressionUUID->"6bbed476-90dd-49a3-9e6e-6d38b48d1fb9"],
Cell[141503, 2386, 2945, 41, 223, "Output",ExpressionUUID->"d18e28ff-b346-40cb-a353-9cb1898ac459"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144485, 2432, 624, 16, 28, "Input",ExpressionUUID->"ea12c53d-17f7-4a01-8d65-21aa6eeec6ae"],
Cell[145112, 2450, 3002, 41, 223, "Output",ExpressionUUID->"f1ddc8cd-8612-4e1a-91fa-6fa2779e9d82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148151, 2496, 724, 17, 28, "Input",ExpressionUUID->"b28ff617-303a-44c8-b690-d1784a1e0f73"],
Cell[148878, 2515, 3040, 42, 223, "Output",ExpressionUUID->"ada95b16-2a16-4ce9-a618-b8ce8014c422"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151955, 2562, 776, 18, 28, "Input",ExpressionUUID->"6bc882bf-9c06-4eb3-b74d-435c70b3bbbb"],
Cell[152734, 2582, 1672, 24, 128, "Output",ExpressionUUID->"1fe3b0a1-8a51-43d0-ae96-36f4c72e6fff"]
}, Open  ]],
Cell[154421, 2609, 734, 21, 28, "Input",ExpressionUUID->"193f518d-8793-46f7-b02a-9c3e39cfa4e5"],
Cell[CellGroupData[{
Cell[155180, 2634, 169, 3, 67, "Section",ExpressionUUID->"6436b543-730b-4e17-9015-14bd0fcfe04f"],
Cell[155352, 2639, 848, 24, 48, "Input",ExpressionUUID->"eb9ba1bb-d19e-4c57-b258-f2c0870586b5"],
Cell[156203, 2665, 1240, 36, 67, "Input",ExpressionUUID->"4cbf1d85-b8d2-46d9-aaf1-85b58f2fae53"],
Cell[CellGroupData[{
Cell[157468, 2705, 223, 4, 28, "Input",ExpressionUUID->"5f7dccff-98fb-4e24-9471-2ec1acdfc60b"],
Cell[157694, 2711, 332, 9, 32, "Output",ExpressionUUID->"d95cfe01-c1a9-46b5-8167-be96842018f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158063, 2725, 292, 6, 28, "Input",ExpressionUUID->"2be1358d-59e8-4966-b061-8e36e98a8e9b"],
Cell[158358, 2733, 5743, 153, 161, "Output",ExpressionUUID->"677d5a7c-29a1-4079-94b9-fd3c21160fe9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164138, 2891, 225, 6, 28, "Input",ExpressionUUID->"77f6b3bb-f806-48fe-aa9d-481641e04174"],
Cell[164366, 2899, 10713, 139, 394, "Output",ExpressionUUID->"a3814d5f-9da4-4526-bbbd-1dc2fedb8a41"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175128, 3044, 162, 3, 67, "Section",ExpressionUUID->"35c430a5-bdb7-499c-8f1e-a404e530c432"],
Cell[175293, 3049, 48781, 803, 273, "Input",ExpressionUUID->"71b4b240-ea0b-4d8e-8226-9c9dcb4117cd"],
Cell[224077, 3854, 264, 6, 35, "Text",ExpressionUUID->"11b6b938-4887-445a-b9fd-1193f604f7ec"],
Cell[CellGroupData[{
Cell[224366, 3864, 266, 5, 28, "Input",ExpressionUUID->"e43ad441-03a0-4f36-856c-ed2d3cca2737"],
Cell[224635, 3871, 312, 6, 32, "Output",ExpressionUUID->"b3ca1433-8b49-4c84-aae0-bb5b3b5014ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224984, 3882, 298, 6, 28, "Input",ExpressionUUID->"bc6e0977-57d6-4b3e-a306-8ed16cdaa473"],
Cell[225285, 3890, 153, 2, 32, "Output",ExpressionUUID->"65c81e5a-0684-49ef-9fcb-041684638a0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225475, 3897, 272, 5, 28, "Input",ExpressionUUID->"6458b123-41db-41da-87ad-8a9d7efbc764"],
Cell[225750, 3904, 152, 2, 32, "Output",ExpressionUUID->"eb1e48cc-5a07-47c8-9e2c-c8b24bddc729"]
}, Open  ]],
Cell[225917, 3909, 297, 6, 35, "Text",ExpressionUUID->"abbae0ae-3ba1-4bfa-aa93-d0e267975cb6"],
Cell[226217, 3917, 174, 3, 35, "Text",ExpressionUUID->"23b07d2b-c983-47d0-a2c6-c5d68d3dc76a"],
Cell[CellGroupData[{
Cell[226416, 3924, 298, 6, 31, "Input",ExpressionUUID->"c8859eff-4cc6-4310-8cfe-af5ce539913b"],
Cell[226717, 3932, 2083, 31, 161, "Output",ExpressionUUID->"84bfb2bc-d497-4d9b-9aca-8a2a7838582c"]
}, Open  ]],
Cell[228815, 3966, 166, 3, 35, "Text",ExpressionUUID->"e5a5f03c-4677-4525-adf0-f33d9b53766f"],
Cell[CellGroupData[{
Cell[229006, 3973, 330, 7, 31, "Input",ExpressionUUID->"622196fd-9ebe-41e2-8b2d-f1367a66c4d9"],
Cell[229339, 3982, 155, 2, 32, "Output",ExpressionUUID->"2ce1b0a6-6237-46fd-9365-13c3248bc012"]
}, Open  ]],
Cell[229509, 3987, 187, 3, 35, "Text",ExpressionUUID->"7a4840f4-a79d-403b-8503-1cc24230409e"],
Cell[CellGroupData[{
Cell[229721, 3994, 326, 7, 28, "Input",ExpressionUUID->"dd75acde-7b8f-4889-a0ae-e9285717a260"],
Cell[230050, 4003, 24043, 424, 64, "Output",ExpressionUUID->"0e488d71-36cf-4a38-8dd8-aaff0a890aa5"]
}, Open  ]],
Cell[254108, 4430, 301, 5, 28, "Input",ExpressionUUID->"99419327-d586-4a07-a45d-7fef0b073f0f"],
Cell[CellGroupData[{
Cell[254434, 4439, 232, 3, 28, "Input",ExpressionUUID->"91ab4d13-e777-480f-8932-cde08c1138de"],
Cell[254669, 4444, 14143, 353, 245, "Output",ExpressionUUID->"2bba7b65-ff05-4d91-905a-c9c1f726ee4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268849, 4802, 515, 12, 31, "Input",ExpressionUUID->"b802fa31-bb8c-4603-bf52-92213ab64564"],
Cell[269367, 4816, 422, 10, 28, "Message",ExpressionUUID->"021d65d4-dc25-4863-b91d-95c2f3938c04"],
Cell[269792, 4828, 334, 8, 32, "Output",ExpressionUUID->"38fedd39-c533-4784-8a8c-e1cfa7e1b6e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270163, 4841, 449, 12, 28, "Input",ExpressionUUID->"62cc0966-c995-4291-99af-77640242e7ad"],
Cell[270615, 4855, 153, 2, 32, "Output",ExpressionUUID->"fe363319-c690-4940-a425-5185c6bfa4e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270805, 4862, 274, 5, 28, "Input",ExpressionUUID->"94a5058d-a335-4399-8247-e8a0e8c5d107"],
Cell[271082, 4869, 157, 2, 32, "Output",ExpressionUUID->"dcd48bf9-bd1f-44db-a939-89c6301f2e09"]
}, Open  ]],
Cell[271254, 4874, 215, 5, 35, "Text",ExpressionUUID->"5b62ca93-890c-4646-970d-2b15911b8b9b"],
Cell[271472, 4881, 188, 3, 35, "Text",ExpressionUUID->"5a3b33fb-501b-4ed9-8496-1b10846f5a4e"],
Cell[271663, 4886, 409, 9, 31, "Input",ExpressionUUID->"f62f44d9-2821-4634-b53a-34e00f9fce82"],
Cell[272075, 4897, 169, 3, 35, "Text",ExpressionUUID->"117c9654-26e7-494a-8408-fb9c188e1114"],
Cell[CellGroupData[{
Cell[272269, 4904, 292, 5, 28, "Input",ExpressionUUID->"8d5bc565-6242-49f6-a62f-03140b056887"],
Cell[272564, 4911, 204, 3, 32, "Output",ExpressionUUID->"2c72fd59-4ea9-4fe0-81c4-f37869b7bf5e"]
}, Open  ]],
Cell[272783, 4917, 168, 3, 35, "Text",ExpressionUUID->"c5795118-3256-4043-8f47-2fbe2f1ae81b"],
Cell[CellGroupData[{
Cell[272976, 4924, 467, 11, 28, "Input",ExpressionUUID->"b7456ed2-14f5-4f29-a16c-41317cd45ec6"],
Cell[273446, 4937, 235, 4, 32, "Output",ExpressionUUID->"0777446e-0b62-4c64-8323-fa475e0bef37"]
}, Open  ]],
Cell[273696, 4944, 156, 3, 28, "Input",ExpressionUUID->"7bf688f1-1eea-4148-b8fd-4f5a228714ba"]
}, Open  ]]
}, Open  ]]
}
]
*)

